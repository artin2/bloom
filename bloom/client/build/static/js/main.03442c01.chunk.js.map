{"version":3,"sources":["assets/abstract-painting.jpg","components/Search/helper.js","assets/barber.jpg","assets/facials.jpg","assets/hair.jpg","assets/lipstics2.jpg","assets/massage3.jpg","assets/nails3.jpg","assets/salon.jpg","assets/paint_line.png","assets/salon2.jpeg","assets/hair_salon.jpg","reduxFolder/actions/alert.js","reduxFolder/redux.js","components/User/LoginForm.js","reduxFolder/actions/user.js","components/User/SignupForm.js","components/Search/SearchBar.js","components/Navbar/MainNavbar.js","reduxFolder/reducers/user.js","reduxFolder/reducers/alert.js","reduxFolder/actions/stores.js","reduxFolder/reducers/stores.js","reduxFolder/reducers/index.js","reduxFolder/store.js","components/Search/AdvancedSearch.js","components/Home/Category.js","components/Home/Homepage.js","components/StaticPages/StaticPage.js","components/LargeCarousel.js","components/Search/SearchCard.js","components/Map/MapContainer.js","components/Search/SearchDisplayLoader.js","components/Search/SearchDisplayLoaderMobile.js","components/Search/SearchDisplay.js","components/Reservation/ServiceSelection.js","components/Reservation/DateSelection.js","components/Reservation/BookingPage.js","components/Reservation/ReservationPage.js","components/s3.js","components/Store/StoreSignupForm.js","components/Calendar/CalendarPage.js","components/Store/StoreDisplay.js","components/Store/StoreEditForm.js","components/redirectWithoutAuth.jsx","components/User/EditProfileForm.js","components/User/Profile.js","components/Store/UserStoresDashboardLoader.js","components/Store/UserStoresDashboard.js","components/Worker/AddWorkerForm.js","components/Worker/WorkerDashboard.js","components/Worker/WorkerEditForm.js","components/Worker/WorkerDisplay.js","components/Service/AddServiceForm.js","components/Service/ServiceDashboard.js","components/Service/ServiceDisplay.js","components/Service/ServiceEditForm.js","components/Appointments/AppointmentDisplay.js","components/Appointments/UserAppointments.js","App.js","components/redirectWithAuth.jsx","serviceWorker.js","index.js"],"names":["module","exports","queryString","query","qs","Object","entries","filter","pair","undefined","map","i","encodeURIComponent","join","addAlert","messagePassed","type","message","fetchDomain","process","successGoogle","response","console","log","accessToken","failureGoogle","error","successFacebook","failureFacebook","status","LoginForm","props","state","email","password","handleChange","bind","handleSubmit","event","this","setState","target","id","value","prevProps","prevState","user","history","push","pathname","preventDefault","loginUser","Container","fluid","src","paint","alt","style","top","left","position","height","width","Row","className","Col","xs","sm","md","lg","Form","marginTop","Group","marginLeft","InputGroup","Prepend","Text","Control","placeholder","onChange","Button","variant","onClick","clientId","buttonText","onSuccess","onFailure","cookiePolicy","render","renderProps","backgroundColor","color","paddingRight","marginBottom","fontSize","size","appId","fields","xfbml","cssClass","icon","callback","to","React","Component","connect","userReducer","dispatch","bindActionCreators","auth_token","fetch","headers","credentials","method","body","JSON","stringify","then","json","data","login","SignupForm","phoneRegExp","emailRegExp","yupValidationSchema","Yup","shape","first_name","min","max","required","last_name","phone","matches","password_confirmation","oneOf","initialValues","role","validationSchema","onSubmit","values","signUpUser","errors","touched","handleBlur","controlId","name","onBlur","failure","window","location","href","signup","SearchBar","handleSelectChange","selectedCategory","categories","label","address","distance","autocomplete","handlePlaceSelect","require","nails","hair","search","getPlace","address_components","elem","long_name","google","maps","places","Autocomplete","document","getElementById","addListener","inline","autoComplete","Append","disabled","selected","options","withRouter","MainNavbar","storeDisplay","Navbar","collapseOnSelect","expand","bg","fixed","fontFamily","Toggle","aria-controls","Collapse","Nav","marginRight","useLocation","keys","length","constructor","NavDropdown","title","Item","Divider","right","initialState","action","assign","new_user","alert","alertReducer","addStore","store","stores","storeReducer","new_stores","rootReducer","combineReducers","persistedState","serializedState","localStorage","getItem","parse","e","loadFromLocalStorage","createStore","reducers","applyMiddleware","thunk","subscribe","setItem","saveToLocalStorage","getState","AdvancedSearch","redirect","parseInt","stateRep","center","lat","lng","Label","as","Check","border","Category","img","text","ScreenWidth","listen","children","useState","xys","setPosition","useEffect","setFromEvent","mounted","x","clientX","y","clientY","innerHeight","innerWidth","addEventListener","removeEventListener","setWidth","handleResize","useScreenWidth","Homepage","Visible","transform","alignItem","isVisible","active","fontWeight","avgTypingDelay","startDelay","cursor","show","blink","element","Backspace","count","delay","lipstics","barber","facials","massage","paint_line","salon","StaticPage","LargeCarousel","Carousel","interval","pictures","picture","index","key","url","SearchCard","Card","Image","Body","Title","onClickFunctionStore","description","onClickFunctionBook","MapContainer","onMarkerClick","marker","selectedPlace","activeMarker","showingInfoWindow","activeMarkerIndex","onClose","zoom","mapStyles","initialCenter","displayMarkers","visible","SearchDisplayLoader","speed","viewBox","foregroundColor","rx","ry","SearchDisplayMobileLoader","SearchDisplay","loading","link","split","getResults","update","ownUpdate","RenderStoreCards","xl","SearchDisplayLoaderMobile","nextProps","preState","ServiceSelection","currService","services","find","selectedServices","updateReservation","category","service","custom","checked","cost","toFixed","block","override","css","DateSelection","handleDateChange","date","getMonth","startDate","store_id","parsedData","appointment","Date","appointments","currDate","selectedTime","handleSlotClick","schedule","updateAppointments","mins","h","Math","floor","m","am","SlotsAtSelectedTime","slots","schedules","currTime","foundSchedule","currSchedule","currDaySchedules","workersSchedules","day_of_the_week","getDay","scheduleStillWorks","currScheduleCurrTime","currScheduleCurrWorkerIndex","currScheduleServiceIndex","available","currScheduleCurrService","currScheduleCurrWorker","worker_id","start_time","end_time","duration","currWorkerAppointments","setHours","service_id","price","convertMinsToHrsMins","time","storeHours","close_time","minDate","items","open_time","isLoading","firstName","lastName","user_id","triggerAppointmentDisplay","returnedAppointment","appointmentGroupId","Cookies","get","substring","a","setFieldValue","ReservationPage","removal","total","selectedService","backStep","newStep","currentStep","receivedAppointments","pluralize","val","word","plural","_pluralize","num","includes","Number","timeConvert","n","hours","rhours","minutes","rminutes","round","prefetchSchedules","Promise","all","match","params","allResponses","storeName","workers","response1","response2","that","noGutters","Header","servicesList","ListGroup","getPictures","prefixPassed","prefix","uploadHandler","selectedFiles","tempDate","getFullYear","getDate","getHours","getMinutes","getSeconds","fileName","fileType","deleteHandler","keysPassed","StoreSignupForm","day","indexOf","newStoreHours","querySelector","slice","fileChangedHandler","files","street","city","zipcode","nullable","triggerStoreDisplay","returnedStore","owner_id","updateRole","rows","option","isMulti","multiple","today","isWeekEnd","DayScaleCell","restProps","classes","TimeTableCell","BasicLayout","appointmentData","onFieldChange","TextEditor","onValueChange","nextValue","messages","allDayLabel","repeatLabel","BooleanEditor","RecurrenceLayout","Appointment","borderRadius","Calendar","getAppointments","indx","endDate","worker_map","service_map","selectedAppointments","selectedWorkers","mainResourceName","resources","fieldName","allowMultiple","instances","currentDate","commitChanges","changeMainResource","onSelectWorker","onRemoveWorker","onSelectService","onRemoveService","onSearch","new_workers","new_services","service_instances","worker_instances","worker","selectedList","selectedItem","removedItem","includeWorker","includeService","newSelected","added","changed","deleted","startingAddedId","onSelect","onRemove","closeIcon","displayValue","multiselectContainer","groupHeading","maxWidth","chips","background","inputField","searchBox","minWidth","optionContainer","zIndex","Paper","defaultCurrentDate","onCommitChanges","startDayHour","endDayHour","cellDuration","dayScaleCellComponent","timeTableCellComponent","appointmentComponent","showCloseButton","showOpenButton","isRecurrence","basicLayoutComponent","recurrenceLayoutComponent","booleanEditorComponent","StoreDisplay","created_at","owners","clients","convertedCategory","str","toLowerCase","selectedOption","editButton","triggerStoreEdit","cat","triggerBook","StoreEditForm","updateNewHours","newHours","old_open_time","old_close_time","deleteFileChangeHandler","newPictureLength","pop","pictureCount","picturesFetched","enableReinitialize","redirectWithoutAuth","ComponentToProtect","res","Error","catch","err","EditProfileForm","editProfile","Profile","UserStoresDashboardLoader","UserStoresDashboard","redirectToWorkerForm","passedStore","salon2","triggerStoreShow","triggerShowCalendar","triggerShowWorkers","triggerShowServices","AddWorkerForm","old_start_time","old_end_time","newWorkerHours","workerHours","handleDayStatusChange","updateWeekIsWorking","weekIsWorking","triggerWorkerDisplay","returnedWorker","receivedWorkerHours","CreateStartTimesForDay","CreateEndTimesForDay","WorkerDashboard","redirectToWorkerEditForm","redirectToWorkerDisplay","workerPassed","triggerWorkerEditForm","triggerAddWorker","WorkerEditForm","serviceMapping","0","1","noChange","WorkerDisplay","updateWorker","updateHours","dayHours","receivedServices","updateContent","selectedChoice","choice","daysOfWeek","convertedServices","ListWorkingHours","RenderProfileContent","rounded","defaultActiveKey","Link","eventKey","AddServiceForm","categoryOptions","workerOptions","positive","integer","triggerServiceDisplay","convertedWorkers","setSubmitting","colors","ServiceDashboard","servicePassed","triggerAddService","triggerServiceEdit","ServiceDisplay","resolve","ServiceEditForm","returnedService","convertedCategoryData","AppointmentDisplay","deleteAppointment","group_id","triggerAppointmentCancel","confirmAlert","buttons","store_name","service_names","cancelButton","toString","store_name_mappings","store_ids","service_name_mappings","grouped_service_ids","d","month","year","hasAppointments","dates","start_times","end_times","costs","group_ids","ShowServices","listGroupItems","AppointmentList","cards","formatDate","App","exact","path","component","addAlertPassed","remove","UserAppointments","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.03442c01.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/abstract-painting.4f80cf3e.jpg\";","// CITATION: https://stackoverflow.com/questions/37230555/get-with-query-string-with-fetch-in-react-native\r\nfunction queryString(query) {\r\n  // get array of key value pairs ([[k1, v1], [k2, v2]])\r\n  const qs = Object.entries(query)\r\n    // filter pairs with undefined value\r\n    .filter(pair => pair[1] !== undefined)\r\n    // encode keys and values, remove the value if it is null, but leave the key\r\n    .map(pair => pair.filter(i => i !== null).map(encodeURIComponent).join('='))\r\n    .join('&');\r\n\r\n  return qs && '?' + qs;\r\n}\r\n\r\n exports.queryString = queryString;","module.exports = __webpack_public_path__ + \"static/media/barber.d2f9dfa8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/facials.ed0b2cb9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hair.d4215e0f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lipstics2.6d47408d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/massage3.55e106f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nails3.81962b22.jpg\";","module.exports = __webpack_public_path__ + \"static/media/salon.140a41f2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/paint_line.bb971069.png\";","module.exports = __webpack_public_path__ + \"static/media/salon2.5edf0e42.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/hair_salon.5e677ff9.jpg\";","export const ADD_ALERT = 'ADD_ALERT'\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT'\r\n\r\nexport function addAlert(messagePassed) {\r\n  return {\r\n    type: ADD_ALERT,\r\n    message: messagePassed\r\n  }\r\n}\r\n\r\nexport function removeAlert() {\r\n  return { \r\n    type: REMOVE_ALERT\r\n  }\r\n}\r\n","import {userLoginSuccess, userLoginFailure, editUserSuccess} from './actions/user';\r\n// import {addServiceSuccess} from './actions/service';\r\n// import {getWorkerOptionsSuccess, addWorker} from './actions/worker';\r\nimport {failure} from './actions/index'\r\nimport {addAlert} from './actions/alert';\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\n// USER FUNCTIONS \r\n\r\nexport function signup(values){\r\n  return dispatch => {\r\n    fetch(fetchDomain + '/signUp' , {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(values)\r\n    })\r\n    .then(function(response){\r\n      dispatch(addAlert(response))  // seems this alert is not persisting...\r\n\r\n      if(response.status!==200){\r\n        dispatch(failure(response))\r\n      }\r\n      else{\r\n        // redirect to home page signed in\r\n        // NOTE: do we want them to be signed in after login? if so we can change this...\r\n        window.location.href='/'\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport function login(email, password, auth_token) {\r\n  return dispatch => {\r\n    fetch(fetchDomain + '/login' , {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      credentials: 'include',\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        \"email\": email,\r\n        \"password\": password\r\n      })\r\n    })\r\n    .then(function(response){\r\n      dispatch(addAlert(response))\r\n\r\n      if(response.status!==200){\r\n        dispatch(userLoginFailure(response));\r\n      }\r\n      else{\r\n        console.log(response)\r\n        return response.json()\r\n      }\r\n    })\r\n    .then(data => {\r\n      if(data){\r\n        dispatch(userLoginSuccess(data.user));\r\n        return data;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function editUser(values){\r\n  return dispatch => {\r\n    fetch(fetchDomain + '/users/' + values.id , {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      credentials: 'include',\r\n      body: JSON.stringify(values)\r\n    })\r\n    .then(function(response){\r\n      dispatch(addAlert(response))\r\n      \r\n      if(response.status!==200){\r\n        dispatch(failure(response))\r\n      }\r\n      else{\r\n        // redirect to home page signed in\r\n        return response.json()\r\n      }\r\n    })\r\n    .then(data => {\r\n      if(data){\r\n        dispatch(editUserSuccess(data))\r\n        return data\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// not going to refactor other code unless extra time left, too time consuming\r\n\r\n// SERVICE FUNCTIONS\r\n\r\n// export function addService(values, store_id){\r\n//   return dispatch => {\r\n//     fetch(fetchDomain + '/stores/addService/' + store_id, {\r\n//       method: \"POST\",\r\n//       headers: {\r\n//         'Content-type': 'application/json'\r\n//       },\r\n//       credentials: 'include',\r\n//       body: JSON.stringify(values)\r\n//     })\r\n//     .then(function(response){\r\n//       dispatch(addAlert(response))\r\n\r\n//       if(response.status!==200){\r\n//         dispatch(failure(response))\r\n//       }\r\n//       else{\r\n//         return response.json();\r\n//       }\r\n//     })\r\n//     .then(function(data){\r\n//       if(data){\r\n//         dispatch(addServiceSuccess(data))\r\n//         return data\r\n//       }\r\n//     })\r\n//   }\r\n// }\r\n\r\n// WORKER FUNCTIONS\r\n\r\n// export function getWorkerOptions(store_id){\r\n//   return dispatch => {\r\n//     fetch(fetchDomain + '/stores/' + store_id + \"/workers\" , {\r\n//       method: \"GET\",\r\n//       headers: {\r\n//           'Content-type': 'application/json'\r\n//       },\r\n//       credentials: 'include'\r\n//     })\r\n//     .then(function(response){\r\n//       if(response.status!==200){\r\n//         // throw an error alert\r\n//         dispatch(addAlert(response))\r\n//       }\r\n//       else{\r\n//         return response.json();\r\n//       }\r\n//     })\r\n//     .then(data => {\r\n//       if(data){\r\n//         let convertedWorkers = data.map((worker) => ({ value: worker.id, label: worker.first_name + \" \" + worker.last_name }));\r\n//         dispatch(getWorkerOptionsSuccess(convertedWorkers))\r\n//         return data\r\n//       }\r\n//     });\r\n//   }\r\n// }\r\n\r\n// export function addWorker(values, store_id){\r\n//   fetch(fetchDomain + '/stores/addWorker/' + store_id, {\r\n//     method: \"POST\",\r\n//     headers: {\r\n//       'Content-type': 'application/json'\r\n//     },\r\n//     credentials: 'include',\r\n//     body: JSON.stringify(values)\r\n//   })\r\n//   .then(function(response){\r\n//     dispatch(addAlert(response))\r\n\r\n//     if(response.status!==200){\r\n//       dispatch(failure(response))\r\n//     }\r\n//     else{\r\n//       return response.json();\r\n//     }\r\n//   })\r\n//   .then(function(data){\r\n//     // redirect to home page signed in\r\n//     if(data){\r\n//       dispatch(addWorkerSuccess(data))\r\n//       return data\r\n//     }\r\n//   })\r\n// }","import React from 'react';\r\nimport './LoginForm.css'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport { FaEnvelope, FaLock } from 'react-icons/fa';\r\nimport GoogleLogin from 'react-google-login';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport {TiSocialFacebookCircular, TiSocialGooglePlus} from 'react-icons/ti';\r\nimport paint from '../../assets/abstract-painting.jpg';\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport {login} from '../../reduxFolder/redux.js'\r\n// import ReactDOM from 'react-dom';\r\n// import { useGoogleLogin } from 'react-google-login';\r\n// import FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\r\n\r\n\r\nconst successGoogle = (response) => {\r\n  console.log(\"Google Success: \", response.accessToken);\r\n}\r\n\r\nconst failureGoogle = (response) => {\r\n  console.log(\"Google Failure:\", response.error);\r\n}\r\n\r\nconst successFacebook = (response) => {\r\n  console.log(\"Facebook Success:\", response.accessToken);\r\n}\r\n\r\nconst failureFacebook = (response) => {\r\n  if(response.status){\r\n    console.log(\"Facebook Failure\");\r\n  }\r\n}\r\n\r\nclass LoginForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      message: {}\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({[event.target.id]: event.target.value});\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState)  {\r\n    // means we updated redux store with the user and have successfully logged in\r\n    if (prevProps.user !== this.props.user) {\r\n      this.props.history.push({\r\n        pathname: '/'\r\n      })\r\n    }\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    //there might be a CORS issue with the backend, this doesn't work without preventDefault..\r\n    event.preventDefault();\r\n    this.props.loginUser(this.state.email, this.state.password, \"\")\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n      <img src={paint} alt=\"paint\" style={{top: 0, left: 0, position: 'absolute', height: '100%', width:'100%', filter: 'grayscale(0.4)'}}/>\r\n\r\n        <Row className=\"justify-content-center\">\r\n          <Col xs={8} sm={7} md={6} lg={5}>\r\n            <Form className=\"formBody rounded container\" style={{marginTop: 80}}>\r\n              <h3>Login</h3>\r\n              <Form.Group style={{marginTop: 40, width: '65%', marginLeft: '17%'}}>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend >\r\n                      <InputGroup.Text>\r\n                          <FaEnvelope/>\r\n                      </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <Form.Control id=\"email\" type=\"email\" placeholder=\"Email\" onChange={this.handleChange}/>\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              <Form.Group style={{width: '65%', marginLeft: '17%'}}>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                      <InputGroup.Text>\r\n                          <FaLock/>\r\n                      </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <Form.Control id=\"password\" type=\"password\" placeholder=\"Password\" onChange={this.handleChange}/>\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Col xs={8} sm={8} md={8} lg={8} style={{marginLeft: '17%'}}>\r\n                <Button  className=\"login\" type=\"submit\" variant=\"primary\" onClick={this.handleSubmit}>Login</Button>\r\n                  <p><b> OR </b></p>\r\n                  <GoogleLogin\r\n                    clientId={process.env.REACT_APP_GOOGLE_ID}\r\n                    buttonText=\"Login with Google\"\r\n                    onSuccess={successGoogle}\r\n                    onFailure={failureGoogle}\r\n                    cookiePolicy={'single_host_origin'}\r\n                    render={renderProps => (\r\n                      <button onClick={renderProps.onClick} style={{ width: '100%', backgroundColor:\"#db4a39\", color: 'white', paddingRight: '30px',\r\n                    marginBottom: '10px', height: '48px', fontSize: '14px'}}> <TiSocialGooglePlus  size={45} style={{paddingRight:\"15px\"}}/>Login with Google</button>\r\n                    )}\r\n                  />\r\n\r\n                  <FacebookLogin\r\n                    appId={process.env.REACT_APP_FACEBOOK_ID} //APP ID NOT CREATED YET\r\n                    fields=\"name,email,picture\"\r\n                    onFailure={failureFacebook}\r\n                    xfbml={true}\r\n                    cssClass=\"facebookButton\"\r\n                    icon={<TiSocialFacebookCircular size={45} style={{paddingRight:\"15px\"}}/>}\r\n                    callback={successFacebook}\r\n                    />\r\n                  <p> Don't have a Bloom account yet? <Link to=\"/signup\" style={{color: 'black'}}><b> Sign Up. </b></Link></p>\r\n              </Col>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.userReducer.user\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n  loginUser: (email, password, auth_token) => login(email, password, auth_token)\r\n}, dispatch)\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n","export const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAILURE = 'USER_LOGIN_FAILURE'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\nexport const EDIT_USER_SUCCESS = 'EDIT_USER_SUCCESS'\r\nexport const UPDATE_ROLE = 'UPDATE_ROLE'\r\n\r\n\r\nexport function userLoginSuccess(userPassed) {\r\n  return {\r\n    type: USER_LOGIN_SUCCESS,\r\n    user: userPassed\r\n  }\r\n}\r\n\r\nexport function userLoginFailure(error) {\r\n  return {\r\n    type: USER_LOGIN_FAILURE,\r\n    error: error\r\n  }\r\n}\r\n\r\nexport function editUserSuccess(userPassed) {\r\n  return {\r\n    type: EDIT_USER_SUCCESS,\r\n    user: userPassed\r\n  }\r\n}\r\n\r\nexport function userLogout() {\r\n  return {\r\n    type: USER_LOGOUT\r\n  }\r\n}\r\n\r\nexport function updateRole(role) {\r\n  return {\r\n    type: UPDATE_ROLE,\r\n    role: role\r\n  }\r\n}\r\n","import React from 'react';\r\nimport '../../App.css';\r\nimport './LoginForm.css'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport { FaEnvelope, FaLockOpen, FaLock, FaUser, FaPhone } from 'react-icons/fa';\r\nimport { Formik } from 'formik';\r\nimport paint from '../../assets/abstract-painting.jpg';\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Yup from 'yup';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport {signup} from '../../reduxFolder/redux.js'\r\n\r\nclass SignupForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // RegEx for phone number validation\r\n    this.phoneRegExp = /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/\r\n    this.emailRegExp = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/\r\n    // Schema for yup\r\n    this.yupValidationSchema = Yup.object().shape({\r\n      first_name: Yup.string()\r\n      .min(2, \"First name must have at least 2 characters\")\r\n      .max(100, \"First name can't be longer than 100 characters\")\r\n      .required(\"First name is required\"),\r\n      last_name: Yup.string()\r\n      .min(2, \"Last name must have at least 2 characters\")\r\n      .max(100, \"Last name can't be longer than 100 characters\")\r\n      .required(\"Last name is required\"),\r\n      email: Yup.string()\r\n      .email(\"Must be a valid email address\")\r\n      .max(100, \"Email must be less than 100 characters\")\r\n      .required(\"Email is required\"),\r\n      phone: Yup.string()\r\n      .matches(this.phoneRegExp, \"Phone number is not valid\"),\r\n      password: Yup.string()\r\n      .min(6, \"Password must have at least 6 characters\")\r\n      .max(100, \"Password can't be longer than 100 characters\")\r\n      .required(\"Password required\"),\r\n      password_confirmation: Yup.string()\r\n      .oneOf([Yup.ref('password')], 'Passwords do not match')\r\n      .required(\"Password Confirmation required\")\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n      <img src={paint} alt=\"paint\" style={{top: 0, left: 0, position: 'absolute', height: '100%', width:'100%', filter: 'grayscale(0.4)'}}/>\r\n        <Row className=\"justify-content-center\">\r\n          <Col xs={8} sm={7} md={6} lg={5}>\r\n            <Formik\r\n              initialValues={{\r\n                first_name: '',\r\n                last_name: '',\r\n                email: '',\r\n                role: '0',\r\n                phone: '',\r\n                password: '',\r\n                password_confirmation: ''\r\n              }}\r\n              validationSchema={this.yupValidationSchema}\r\n              onSubmit={(values) => {\r\n                this.props.signUpUser(values)\r\n              }}\r\n            >\r\n            {( {values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit}) => (\r\n              <Form className=\"formBody rounded\" style={{marginTop: 80}}>\r\n                <h3 style={{marginBottom: 40}}>Sign Up</h3>\r\n\r\n                <Form.Group controlId=\"formFirstName\" className=\"form\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaUser/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"first_name\"\r\n                      value={values.first_name}\r\n                      placeholder=\"First Name\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      className={touched.first_name && errors.first_name ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.first_name && errors.first_name ? (\r\n                    <div className=\"error-message\">{errors.first_name}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId=\"formLastName\" className=\"form\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaUser/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control type=\"text\"\r\n                    value={values.last_name}\r\n                    placeholder=\"Last Name\"\r\n                    name=\"last_name\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={touched.last_name && errors.last_name ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.last_name && errors.last_name ? (\r\n                    <div className=\"error-message\">{errors.last_name}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formPhone\" className=\"form\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaPhone/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control type=\"text\"\r\n                      value={values.phone}\r\n                      placeholder=\"Phone Number\"\r\n                      name=\"phone\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      className={touched.phone && errors.phone ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.phone && errors.phone ? (\r\n                    <div className=\"error-message\">{errors.phone}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formEmail\" className=\"form\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaEnvelope/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control\r\n                      type=\"email\"\r\n                      value={values.email}\r\n                      placeholder=\"Email\"\r\n                      name=\"email\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      className={touched.email && errors.email ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.email && errors.email ? (\r\n                    <div className=\"error-message\">{errors.email}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formPassword\" className=\"form\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaLockOpen/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      value={values.password}\r\n                      placeholder=\"Password\"\r\n                      name=\"password\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      className={touched.password && errors.password ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.password && errors.password ? (\r\n                    <div className=\"error-message\">{errors.password}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formPasswordConfirmation\" className=\"form\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaLock/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      value={values.password_confirmation}\r\n                      placeholder=\"Confirm Password\"\r\n                      name=\"password_confirmation\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      className={touched.password_confirmation && errors.password_confirmation ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.password_confirmation && errors.password_confirmation ? (\r\n                    <div className=\"error-message\">{errors.password_confirmation}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n                <Button className=\"signup\" onClick={handleSubmit}>Sign Up</Button>\r\n                <p> Already have a Bloom account? <Link to=\"/login\" style={{color: 'black'}}><b> Login. </b></Link></p>\r\n              </Form>\r\n            )}\r\n            </Formik>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n  signUpUser: (values) => signup(values)\r\n}, dispatch)\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(SignupForm);\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport { Form, Row, InputGroup, Button, Navbar } from 'react-bootstrap';\r\nimport Col from 'react-bootstrap/Col'\r\nimport './SearchBar.css'\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\nimport {withRouter} from 'react-router'\r\n// import Chip from '@material-ui/core/Chip';\r\n// import Select from '@material-ui/core/Select';\r\n// import MenuItem from '@material-ui/core/MenuItem';\r\n// import Input from '@material-ui/core/Input';\r\nimport { FiSearch } from 'react-icons/fi';\r\nimport Select from 'react-select'\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\n\r\nclass SearchBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      categories: [{value: \"Nail Salon\", label: \"Nail Salon\"},\r\n      {value: \"Hair Salon\", label: \"Hair Salon\"}, \r\n      {value: \"Facials\", label: \"Facials\"}, \r\n      {value: \"Barbershops\", label: \"Barbershops\"}],\r\n      selectedCategory: '',\r\n      address: '',\r\n      distance: 15,\r\n    }\r\n\r\n    this.autocomplete = null\r\n    this.handlePlaceSelect = this.handlePlaceSelect.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSelectChange = (selectedCategory) => {\r\n    this.setState({ selectedCategory });\r\n  }\r\n\r\n  handleSubmit() {\r\n    let queryString = require('./helper.js').queryString;\r\n    const formState = (({ address, distance, nails, hair }) => ({ address, distance, nails, hair }))(this.state);\r\n    let query = queryString(formState)\r\n    console.log(\"query is: \", query)\r\n    this.props.history.push({\r\n      pathname: \"/search\",\r\n      search: query\r\n    });\r\n  }\r\n\r\n  handlePlaceSelect() {\r\n    let addressObject = this.autocomplete.getPlace()\r\n    let address = addressObject.address_components.map(function (elem) {\r\n      return elem.long_name;\r\n    }).join(\", \");\r\n\r\n    this.setState({\r\n      address: address\r\n    })\r\n  }\r\n\r\n  componentDidMount () {\r\n    const google = window.google;\r\n    this.autocomplete = new google.maps.places.Autocomplete(document.getElementById('autocomplete'), { })\r\n\r\n    this.autocomplete.addListener(\"place_changed\", this.handlePlaceSelect)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Form inline className=\"full-width\">\r\n          <Form.Row className=\"px-1 full-width\">\r\n            <Col xs={12} md={6} className=\"form-horizontal\">\r\n              <Form.Group className=\"full-width\" controlId=\"autocomplete\">\r\n                <InputGroup className=\"not-auto\">\r\n                  <Form.Control\r\n                    className=\"full-width\"\r\n                    type=\"text\"\r\n                    placeholder=\"Try 'New Haven, CT'\"\r\n                    autoComplete=\"new-password\"\r\n                  />\r\n                  <InputGroup.Append>\r\n                    <Button variant=\"secondary\" onClick={this.handleSubmit} disabled={!this.state.address || this.state.selected == ''}>\r\n                      <FiSearch />\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col xs={12} md={3}>\r\n              <Form.Group className=\"full-width\">\r\n              <Select\r\n                className=\"full-width\"\r\n                value={this.state.selectedCategory}\r\n                onChange={this.handleSelectChange}\r\n                options={this.state.categories}\r\n              />\r\n              </Form.Group>\r\n            </Col>\r\n          </Form.Row>\r\n        </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SearchBar);\r\n","import React from 'react';\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport './MainNavbar.css'\r\nimport { connect } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom'\r\nimport SearchBar from '../Search/SearchBar'\r\n// import BasicSearch from '../Search/BasicSearch';\r\n\r\nclass MainNavbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    let storeDisplay = null\r\n    console.log(this.props.user);\r\n\r\n    const RenderNavBarBasedOnPageAndUser = (props) => {\r\n      let location = useLocation();\r\n      if(location.pathname == '/search') {\r\n        return <Nav className=\"full-width\">\r\n            <SearchBar className=\"nav-link\"/>\r\n          </Nav>\r\n      }\r\n      if(this.props.user == null || (Object.keys(this.props.user).length === 0 && this.props.user.constructor === Object)) {\r\n        console.log(this.props.user)\r\n        return <Nav className=\"left\">\r\n          <Link to=\"/login\" className=\"nav-link\">Login</Link>\r\n          <Link to=\"/signup\" className=\"nav-link\">Signup</Link>\r\n        </Nav>                 \r\n      } else {\r\n        console.log(this.props.user)\r\n        if(this.props.user.role != '0'){\r\n          storeDisplay = <NavDropdown title=\"Manage Stores\" id=\"basic-nav-dropdown\">\r\n            <NavDropdown.Item href={\"/users/\" + this.props.user.id + \"/stores\"}>Dashboard</NavDropdown.Item>\r\n            {/* <NavDropdown.Item href=\"/stores/:store_id/services\">Services</NavDropdown.Item> */}\r\n            <NavDropdown.Divider />\r\n            <NavDropdown.Item href=\"/store/signup\">Create Store</NavDropdown.Item>\r\n          </NavDropdown>\r\n        }\r\n        else{\r\n          storeDisplay = <Link to=\"/store/signup\" className=\"nav-link\">Create Store</Link>\r\n        }\r\n        return <Nav>\r\n          {storeDisplay}\r\n          <NavDropdown title=\"Profile\" id=\"basic-nav-dropdown\">\r\n          <NavDropdown.Item href={\"/users/\" + this.props.user.id}>View</NavDropdown.Item>\r\n            <NavDropdown.Item href={\"/users/edit/\" + this.props.user.id}>Edit</NavDropdown.Item>\r\n          </NavDropdown>\r\n          <Link to={\"/users/\" + 'this.props.user.id' + '/appointments'} className=\"nav-link\">My Appointments</Link>\r\n          <Link style={{position: 'absolute', right: 60}} to=\"/logout\" className=\"nav-link\">Logout</Link>\r\n        </Nav>\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\" fixed=\"top\">\r\n        <Link to=\"/\" className=\"navbar-brand\" style={{fontFamily: 'Megrim, cursive', fontSize: '35px'}}>Bloom</Link>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"left\" style={{marginRight: '120px'}}>\r\n            <Link to=\"/help\" className=\"nav-link\">Help</Link>\r\n            <Link to=\"/about\" className=\"nav-link\">About</Link>\r\n          </Nav>\r\n          <RenderNavBarBasedOnPageAndUser/>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.userReducer.user\r\n})\r\n\r\nexport default connect(mapStateToProps)(MainNavbar);\r\n","import { USER_LOGIN_SUCCESS, USER_LOGIN_FAILURE, USER_LOGOUT, EDIT_USER_SUCCESS, UPDATE_ROLE } from \"../actions/user\"\r\n\r\nconst initialState = {\r\n  user: {},\r\n  error: {},\r\n}\r\n\r\nfunction userReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case USER_LOGIN_FAILURE:\r\n      return Object.assign({}, state, {\r\n        error: action.error\r\n      })\r\n\r\n    case USER_LOGIN_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        user: action.user\r\n      })\r\n\r\n    case EDIT_USER_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        user: action.user\r\n      })\r\n\r\n    case USER_LOGOUT:\r\n      return Object.assign({}, state, {\r\n        user: {}\r\n      })\r\n\r\n    case UPDATE_ROLE:\r\n      let new_user = state.user\r\n      new_user.role = action.role\r\n      return Object.assign({}, state, {\r\n        user: new_user\r\n      })\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default userReducer;\r\n","import { ADD_ALERT, REMOVE_ALERT } from \"../actions/alert\"\r\n\r\nconst initialState = {\r\n  alert: {}\r\n}\r\n\r\nfunction alertReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_ALERT:\r\n      return Object.assign({}, state, {\r\n        alert: action.message\r\n      })\r\n    case REMOVE_ALERT:\r\n      return Object.assign({}, state, {\r\n        alert: {}\r\n      })\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default alertReducer","export const ADD_STORE = 'ADD_STORE'\r\n\r\nexport function addStore(store) {\r\n  return {\r\n    type: ADD_STORE,\r\n    store: store,\r\n  }\r\n}\r\n","import { ADD_STORE } from \"../actions/stores\"\r\n\r\nconst initialState = {\r\n  stores: [],\r\n}\r\n\r\nfunction storeReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n\r\n    case ADD_STORE:\r\n\r\n      let new_stores = state.stores\r\n      if(new_stores) {\r\n        new_stores.push(action.store)\r\n      }\r\n      else {\r\n        new_stores = [action.store]\r\n      }\r\n      return Object.assign({}, state, {\r\n        stores: new_stores\r\n      })\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default storeReducer;\r\n","import { combineReducers } from 'redux'\r\nimport userReducer from './user'\r\nimport alertReducer from './alert'\r\n// import serviceReducer from './service'\r\n// import workerReducer from './worker'\r\nimport storeReducer from './stores'\r\n\r\nlet rootReducer = combineReducers({\r\n  userReducer,\r\n  alertReducer,\r\n  storeReducer\r\n  // serviceReducer,\r\n  // workerReducer\r\n})\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport reducers from './reducers/index';\r\nimport thunk from 'redux-thunk';\r\n\r\nfunction saveToLocalStorage(state) {\r\n  try {\r\n    const serializedState = JSON.stringify(state)\r\n    localStorage.setItem('state', serializedState)\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nfunction loadFromLocalStorage() {\r\n  try {\r\n    const serializedState = localStorage.getItem('state')\r\n    if(serializedState === null) return undefined\r\n    return JSON.parse(serializedState)\r\n  } catch (e) {\r\n    console.log(e)\r\n    return undefined\r\n  }\r\n}\r\n\r\nconst persistedState = loadFromLocalStorage()\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  persistedState,\r\n  applyMiddleware(thunk)\r\n)\r\n\r\nstore.subscribe(() => saveToLocalStorage(store.getState()))\r\n\r\nexport default store;","import React from 'react';\r\nimport './AdvancedSearch.css'\r\nimport { Form, Row} from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  addAlert\r\n} from '../../reduxFolder/actions/alert'\r\nimport store from '../../reduxFolder/store';\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nclass AdvancedSearch extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      address: '',\r\n      distance: 1,\r\n      nails: false,\r\n      hair: false,\r\n      redirect: false};\r\n    this.autocomplete = null\r\n    this.redirect = false\r\n\r\n    this.handlePlaceSelect = this.handlePlaceSelect.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const google = window.google;\r\n    this.autocomplete = new google.maps.places.Autocomplete(document.getElementById('autocomplete'), { })\r\n\r\n    this.autocomplete.addListener(\"place_changed\", this.handlePlaceSelect)\r\n  }\r\n\r\n  handlePlaceSelect() {\r\n    let addressObject = this.autocomplete.getPlace()\r\n    let address = addressObject.address_components.map(function(elem){\r\n                      return elem.long_name;\r\n                  }).join(\", \");\r\n\r\n    this.setState({\r\n      address: address\r\n    })\r\n  }\r\n\r\n  handleChange(event) {\r\n    if (event.target.type === \"checkbox\") {\r\n      this.setState({[event.target.id]: !this.state[event.target.id]})\r\n    }\r\n    else{\r\n      this.setState({[event.target.id]: parseInt(event.target.value) || event.target.value});\r\n    }\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    // for some reason doesn't work without this..\r\n    event.preventDefault();\r\n\r\n    let queryString = require('./helper.js').queryString;\r\n    let query = queryString(this.state)\r\n    const fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n    console.log(\"environment is: \", process.env.NODE_ENV)\r\n    console.log(\"fetch prod is: \", process.env.REACT_APP_FETCH_DOMAIN_PROD)\r\n    console.log(\"fetch dev is: \", process.env.REACT_APP_FETCH_DOMAIN_DEV)\r\n    console.log(\"fetch domain is: \", fetchDomain)\r\n    fetch(fetchDomain + '/stores' + query, {\r\n      method: \"GET\",\r\n      headers: {\r\n          'Content-type': 'application/json'\r\n      }\r\n    })\r\n    .then(function(response){\r\n      if(response.status!==200){\r\n        // throw an error alert\r\n        store.dispatch(addAlert(response))\r\n      }\r\n      else{\r\n        return response.json();\r\n      }\r\n    })\r\n    .then(data => {\r\n      if(data){\r\n        let stateRep = this.state\r\n        stateRep.stores = data\r\n        stateRep.redirect = true\r\n        stateRep.center = {\r\n          lat: \"34.277639\",\r\n          lng: \"-118.3741806\"\r\n        }\r\n\r\n        this.props.history.push({\r\n          pathname: '/search',\r\n          search: query,\r\n          state: stateRep\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"book_window\">\r\n      <Form className=\"formBody rounded\" onSubmit={this.handleSubmit}>\r\n        <h3>Book Now</h3>\r\n        <Form.Group controlId=\"autocomplete\">\r\n        <Row>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Try 'New Haven, CT'\"\r\n            autoComplete=\"new-password\"\r\n          />\r\n        </Row>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Row>\r\n          <Form.Label>Distance</Form.Label>\r\n          <Form.Control as=\"select\" id=\"distance\" onChange={this.handleChange}>\r\n            <option>1 mile</option>\r\n            <option>5 miles</option>\r\n            <option>10 miles</option>\r\n            <option>25 miles</option>\r\n            <option>50 miles</option>\r\n          </Form.Control>\r\n          </Row>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"category\">\r\n          <Row>\r\n          <Form.Label>Category</Form.Label>\r\n          <Form.Check\r\n            style={{marginLeft: 30}}\r\n            id=\"nails\"\r\n            label=\"Nails\"\r\n            onChange={this.handleChange}\r\n          />\r\n          <Form.Check\r\n            style={{marginLeft: 10}}\r\n            id=\"hair\"\r\n            label=\"Hair\"\r\n            onChange={this.handleChange}\r\n          />\r\n          </Row>\r\n        </Form.Group>\r\n          <Button style={{backgroundColor: '#8CAFCB', border: '0px'}} type=\"submit\">Submit</Button>\r\n      </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(AdvancedSearch);\r\n","import React from 'react';\r\nimport './Homepage.css';\r\n\r\n\r\nclass Category extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"image_container\" style={this.props.style}>\r\n      <img src={this.props.img} alt=\"paint\" className=\"images\"\r\n\r\n      />\r\n      <p className=\"text\"> {this.props.text} </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Category;\r\n","import React from 'react';\r\n// import Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport AdvancedSearch from '../Search/AdvancedSearch';\r\nimport './Homepage.css';\r\nimport paint from '../../assets/abstract-painting.jpg';\r\nimport barber from '../../assets/barber.jpg';\r\n// import bride_hair from '../../assets/bride_hair.jpg';\r\nimport facials from '../../assets/facials.jpg';\r\nimport hair from '../../assets/hair.jpg';\r\nimport lipstics from '../../assets/lipstics2.jpg';\r\nimport massage from '../../assets/massage3.jpg';\r\nimport nails from '../../assets/nails3.jpg';\r\nimport salon from '../../assets/salon.jpg';\r\nimport paint_line from '../../assets/paint_line.png';\r\nimport Typist from 'react-typist';\r\nimport { useState, useEffect } from 'react'\r\n// import { useSpring, animated as a } from 'react-spring'\r\n// import TrackVisibility from 'react-on-screen';\r\nimport VizSensor from 'react-visibility-sensor';\r\n// import Typing from 'react-typing-animation';\r\nimport Category from './Category.js';\r\n\r\nconst calc = (x, y) => [-(y - window.innerHeight / 2) / 20, (x - window.innerWidth / 2) / 80, 1.04]\r\nconst trans = (x, y, s) => `perspective(600px) scale(${s})`\r\n\r\n// const animation = () => {\r\n//\r\n//     const [props, set] = useSpring(() => (\r\n//       { xys: [0, 0, 1], config: { mass: 5, tension: 350, friction: 40 }\r\n//      }))\r\n//\r\n//     const [flipped, setFlipped] = useState(false)\r\n//     const [key, setKey] = useState(0)\r\n//\r\n//\r\n//     const [width, setWidth] = useState(window.innerWidth)\r\n//       useEffect(() => {\r\n//         const handleResize = () => {\r\n//           setWidth(window.innerWidth)\r\n//         }\r\n//         window.addEventListener('resize', handleResize)\r\n//         return () => { window.removeEventListener('resize', handleResize) }\r\n//       })\r\n//\r\n//\r\n//     const { transform, opacity, display } = useSpring({\r\n//       opacity: flipped ? 1 : 0,\r\n//       display: flipped ? '' : 'none',\r\n//       transform: `perspective(500px) rotateX(${flipped ? 180 : 0}deg)`,\r\n//       config: { mass: 5, tension: 400, friction: 80 }})\r\n//\r\n// }\r\n\r\n\r\n\r\n\r\nfunction useScreenWidth(): number {\r\n\r\n  const [position, setPosition] = useState({ xys: [0, 0, 1]});\r\n\r\n\r\n  // const [props, set] = useSpring(() => (\r\n  //       { xys: [0, 0, 1], config: { mass: 5, tension: 350, friction: 40 }\r\n  // }))\r\n\r\n  useEffect(() => {\r\n    let mounted = true\r\n    let setFromEvent;\r\n    let setLeaveEvent;\r\n\r\n    if(mounted){\r\n      setFromEvent = e => setPosition({  xys: calc(e.clientX, e.clientY) });\r\n      setLeaveEvent = e => setPosition({ xys : [0, 0, 1]})\r\n      window.addEventListener(\"mousemove\", setFromEvent);\r\n    }\r\n\r\n    return () => {\r\n      mounted = false;\r\n      window.removeEventListener(\"mousemove\", setFromEvent);\r\n    };\r\n  });\r\n  // return position;\r\n\r\n\r\n  const [width, setWidth] = useState(window.innerWidth)\r\n\r\n  useEffect(() => {\r\n    let mounted = true\r\n    let handleResize;\r\n\r\n    if(mounted){\r\n      handleResize = () => {\r\n        setWidth(window.innerWidth)\r\n      }\r\n      window.addEventListener('resize', handleResize)\r\n    }\r\n    return () => {\r\n      mounted = false;\r\n      window.removeEventListener('resize', handleResize)\r\n    }\r\n\r\n  })\r\n\r\n\r\n  return position;\r\n}\r\n\r\n// function useMousePosition(listen=true) {\r\n//   let [ pos, setPos ] = useState({ x: 0, y: 0 })\r\n//   useEffect(() => {\r\n//     if (listen) {\r\n//       let handler = event => {\r\n//         setPos({ x: event.clientX, y: event.clientY })\r\n//       }\r\n//       window.addEventListener('mousemove', handler)\r\n//       return () => {\r\n//         window.removeEventListener('mousemove', handler)\r\n//       }\r\n//     }\r\n//   }, [listen])\r\n//   return pos\r\n// }\r\n\r\n// function MousePosition({ listen, children }) {\r\n//   let pos = useMousePosition(listen)\r\n//   return children(pos)\r\n// }\r\n\r\nfunction ScreenWidth ({ listen, children }) {\r\n  const screenWidth: number = useScreenWidth();\r\n  // console.log(screenWidth);\r\n  return children(screenWidth);\r\n\r\n};\r\n\r\nfunction useScroll() : number {\r\n  const [scrollPosition, setSrollPosition] = useState(0);\r\n  const handleScroll = () => {\r\n      const position = window.pageYOffset;\r\n      setSrollPosition(position);\r\n  };\r\n\r\n  useEffect(() => {\r\n      window.addEventListener('scroll', handleScroll);\r\n      return () => {\r\n          window.removeEventListener('scroll', handleScroll);\r\n      };\r\n  }, []);\r\n\r\nreturn scrollPosition;\r\n}\r\n\r\nfunction ScreenScroll ({ listen, children }) {\r\n  const scroll: number = useScroll();\r\n  console.log(scroll);\r\n  return children(scroll);\r\n\r\n};\r\n\r\nclass Homepage extends React.Component {\r\n  constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n        Visible: false\r\n      }\r\n      // this.handleMouseEnter = this.handleMouseEnter.bind(this, this.props.handleMouseEnter)\r\n      // this.handleMouseMove = this.handleMouseMove.bind(this, this.props.handleMouseMove)\r\n      // this.handleMouseLeave = this.handleMouseLeave.bind(this, this.props.handleMouseLeave)\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    // console.log(this.state.Visible)\r\n    return (\r\n      <div className=\"container\">\r\n        <div>\r\n          <ScreenWidth>\r\n            {(position) =>\r\n            <img src={paint} alt=\"paint\" style={{top: 80, left: 0, position: 'absolute', height: '700px', width:'100%', transform: `perspective(600px) rotateX(${position.xys[0]/10}deg) rotateY(${position.xys[1]/10}deg) scale(${position.xys[2]})` }}\r\n              // onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\r\n              // onMouseLeave={() => set({ xys: [0, 0, 1] })}\r\n            />\r\n            }\r\n          </ScreenWidth>\r\n        </div>\r\n        <div className=\"search\">\r\n            <Row>\r\n            <AdvancedSearch/>\r\n\r\n            <Col>\r\n\r\n            <Row>\r\n            <p className=\"welcome\"> Welcome to </p>\r\n\r\n            <p className=\"bloom\"> Bloom </p>\r\n\r\n            </Row>\r\n            <p className=\"subtitle\"> A platform that helps you find\r\n            salons, beauty experts and stylists that are located near your house\r\n            and will soon become your favorite salons. ETC ETC We can change that later. </p>\r\n\r\n          </Col>\r\n          </Row>\r\n\r\n        </div>\r\n        <div style={{position: 'absolute', height: '1000px', marginTop: '80px', alignItem: 'center'}}>\r\n\r\n          <div className=\"type_container\">\r\n            <VizSensor\r\n             onChange={(isVisible) => {\r\n               this.setState({Visible: isVisible})\r\n             }}\r\n             active={!this.state.Visible}>\r\n\r\n           <p style={{fontSize: 25, fontFamily: 'Bellota, cursive', fontWeight: 'bold'}}> At Bloom </p>\r\n           </VizSensor>\r\n\r\n           <div>\r\n            {(this.state.Visible) ?\r\n              <Typist\r\n                className=\"typist\"\r\n                avgTypingDelay={100}\r\n                startDelay={10}\r\n                cursor={{\r\n                  show: true,\r\n                  blink: true,\r\n                  element: '|',\r\n                }}\r\n              >\r\n                You can find hair salons.\r\n\r\n                <Typist.Backspace count={12} delay={200} />\r\n                  <span> nail salons.</span>\r\n                <Typist.Backspace count={12} delay={200} />\r\n                  <span> beauty salons and more.</span>\r\n\r\n\r\n            </Typist>\r\n           : null}\r\n          </div>\r\n        </div>\r\n\r\n            <div className=\"cards\">\r\n              <Col>\r\n                <Row>\r\n                <Category style={{ marginLeft: -105}} img={hair} text={\"Hair Salons\"}/>\r\n                <Category img={lipstics} text={\"Makeup Artists\"}/>\r\n                <Category img={barber} text={\"Barber Shops\"}/>\r\n                </Row>\r\n                <Row>\r\n                <Category style={{ marginLeft: -105}} img={nails} text={\"Nail Salons\"}/>\r\n                <Category img={facials} text={\"Facials\"}/>\r\n                <Category img={massage} text={\"Spa\"}/>\r\n                </Row>\r\n              </Col>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"salon_container\" style={{width:'1500px', height: '800px', marginLeft: -200, marginTop: '1400px', backgroundColor: '#bdcddb'}}>\r\n          <Row>\r\n          <img src={paint_line} className=\"paint_line\" alt=\"paint\"/>\r\n          <Col className=\"salon_text\">\r\n          <p className=\"header\"> Are you a salon owner? </p>\r\n          <p style={{fontSize: 20}}> Join our community by signing up your salon today! Join our community by signing up your salon today. Join our community by signing up your salon today.\r\n          Join our community by signing up your salon today. Join our community by signing up your salon today. </p>\r\n          </Col>\r\n          <img src={salon} className=\"salon\" alt=\"paint\"/>\r\n          </Row>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Homepage;\r\n//\r\n","import React from 'react';\r\nimport './StaticPage.css';\r\n// import Container from 'react-bootstrap/Container'\r\n\r\nclass StaticPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"backStuff\">\r\n        <br/>\r\n        <div className=\"body justify-content-center\">\r\n          <h1>Help/About</h1>\r\n          <div>\r\n            <p>\r\n            Lorem Ipsum is simply dummy text of the printing and typesetting industry.\r\n            Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,\r\n            when an unknown printer took a galley of type and scrambled it to make a type\r\n            specimen book. It has survived not only five centuries, but also the leap into\r\n            electronic typesetting, remaining essentially unchanged. It was popularised in\r\n            the 1960s with the release of Letraset sheets containing Lorem Ipsum passages,\r\n            and more recently with desktop publishing software like Aldus PageMaker including\r\n            versions of Lorem Ipsum\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StaticPage;\r\n","import React from 'react';\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nimport './LargeCarousel.css'\r\n\r\n\r\nclass LargeCarousel extends React.Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <Carousel style={this.props.style} interval=\"\">\r\n        {this.props.pictures.map((picture, index) => (\r\n          <Carousel.Item key={\"pic-\" + index}>\r\n            <img style={this.props.img} src={picture.url} alt={\"Slide \" + index} />\r\n          </Carousel.Item>\r\n        ))}\r\n      </Carousel>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LargeCarousel;\r\n","import React from 'react';\r\nimport LargeCarousel from '../LargeCarousel';\r\nimport Card from 'react-bootstrap/Card'\r\nimport { Button, Carousel, Image, Col } from 'react-bootstrap';\r\nimport Row from 'react-bootstrap/Row'\r\n// import { getPictures } from '../s3'\r\n\r\nclass SearchCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pictures: []\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    // let picturesFetched = await getPictures('stores/' + this.props.store.id + '/images/')\r\n    // this.setState({\r\n    //   pictures: picturesFetched\r\n    // })\r\n\r\n    // can put this for now so we don't have to upload to s3\r\n    this.setState({\r\n      pictures: [\r\n        {\r\n          url: \"/hair.jpg\",\r\n          key: \"/hair.jpg\"\r\n        },\r\n        {\r\n          url: \"/nails.jpg\",\r\n          key: \"/nails.jpg\"\r\n        },\r\n        {\r\n          url: \"/salon.jpg\",\r\n          key: \"/salon.jpg\"\r\n        }\r\n      ]\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Col xs={12} className=\"my-3 px-0 h-100\">\r\n        <Card style={{height: '100%'}}>\r\n          <Row style={{height: '100%'}}>\r\n            <Col md={6} className=\"vertical-align-contents px-0 h-100 w-100\">\r\n              <Carousel interval=\"\">\r\n                {this.state.pictures.map((picture, index) => (\r\n                  <Carousel.Item key={\"pic-\" + index}>\r\n                    <Image fluid src={picture.url} alt={\"Slide \" + index} />\r\n                  </Carousel.Item>\r\n                ))}\r\n              </Carousel>\r\n            </Col>\r\n            <Col md={6} className=\"vertical-align-contents px-0 h-100\">\r\n              <Card.Body >\r\n                <div>\r\n                  <Card.Title onClick={() => this.props.onClickFunctionStore(this.props.store.id)} style={{cursor: 'pointer'}} >{this.props.store.name}</Card.Title>\r\n                  <Card.Text className=\"mb-3\">{this.props.store.description}</Card.Text>\r\n                </div>\r\n                <Button style={{backgroundColor: '#8CAFCA', border: 0}} onClick={() => this.props.onClickFunctionBook(this.props.store.id)}>Book Now</Button>\r\n              </Card.Body>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchCard;\r\n","import React, { Component } from 'react';\r\nimport { Map, InfoWindow, Marker } from 'google-maps-react';\r\nimport SearchCard from '../Search/SearchCard';\r\n\r\nclass MapContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showingInfoWindow: false,  //Hides or the shows the infoWindow\r\n      activeMarker: {},          //Shows the active marker upon click\r\n      selectedPlace: {},          //Shows the infoWindow to the selected place upon a marker\r\n      activeMarkerIndex: 0\r\n    };\r\n\r\n    this.onMarkerClick = this.onMarkerClick.bind(this);\r\n    this.onClose = this.onClose.bind(this);\r\n  }\r\n\r\n  displayMarkers() { \r\n    return this.props.stores.map((store, index) => { \r\n      return <Marker key={\"store-\" + index} id={index} position={{ \r\n                     lat: store.lat, \r\n                     lng: store.lng }} \r\n                     onClick={this.onMarkerClick}\r\n                     name={store.name} /> \r\n    }) \r\n  } \r\n\r\n  onMarkerClick = (props, marker, e) =>\r\n  this.setState({\r\n    selectedPlace: props,\r\n    activeMarker: marker,\r\n    showingInfoWindow: true,\r\n    activeMarkerIndex: marker.id\r\n  });\r\n\r\n  onClose = props => {\r\n    if (this.state.showingInfoWindow) {\r\n      this.setState({\r\n        showingInfoWindow: false,\r\n        activeMarker: null\r\n      });\r\n    }\r\n  };\r\n\r\n  onClickFunction (id) {\r\n    console.log(\"Here1\")\r\n    // Currently not working...\r\n    // window.location.href='/book/' + id\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if(prevProps != this.props){\r\n      // console.log(\"BEFORE\", prevProps, \"AFTER\", this.props)\r\n      // for some reason, center is not updating, the value changes but visually it does not\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Map\r\n        google={this.props.google}\r\n        zoom={this.props.zoom}\r\n        style={this.props.mapStyles}\r\n        initialCenter={this.props.center}\r\n      >\r\n        {this.displayMarkers()}\r\n        <InfoWindow\r\n        marker={this.state.activeMarker}\r\n        visible={this.state.showingInfoWindow}\r\n        onClose={this.onClose}\r\n        >\r\n          <p>{this.props.stores[this.state.activeMarkerIndex].name}</p>\r\n        </InfoWindow>\r\n      </Map>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MapContainer;\r\n\r\n\r\n// for fixing clicking within infowindow, some resources: https://stackoverflow.com/questions/60426907/reactjs-onclick-not-triggered-on-click-of-button-inside-google-maps-marker-inf\r\n// https://github.com/fullstackreact/google-maps-react/issues/70\r\n// https://www.google.com/search?q=onclick+within+infowindow+not+working+react&rlz=1C5CHFA_enUS821US821&oq=onclick+within+infowindow+not+working+react&aqs=chrome..69i57.7600j0j7&sourceid=chrome&ie=UTF-8","import React from 'react'\r\nimport ContentLoader from 'react-content-loader'\r\n\r\nconst SearchDisplayLoader = props => (\r\n  <ContentLoader\r\n    speed={2}\r\n    width={600}\r\n    height={700}\r\n    viewBox=\"0 0 700 750\"\r\n    backgroundColor=\"#f5f5f5\"\r\n    foregroundColor=\"#dbdbdb\"\r\n    {...props}\r\n  >\r\n\r\n    <rect x=\"4\" y=\"0\" rx=\"3\" ry=\"3\" width=\"122\" height=\"26\" />\r\n    <rect x=\"4\" y=\"68\" rx=\"3\" ry=\"3\" width=\"7\" height=\"330\" />\r\n    <rect x=\"6\" y=\"390\" rx=\"3\" ry=\"3\" width=\"639\" height=\"8\" />\r\n    <rect x=\"640\" y=\"68\" rx=\"3\" ry=\"3\" width=\"6\" height=\"330\" />\r\n    <rect x=\"4\" y=\"70\" rx=\"3\" ry=\"3\" width=\"295\" height=\"325\" />\r\n    <rect x=\"346\" y=\"101\" rx=\"3\" ry=\"3\" width=\"231\" height=\"29\" />\r\n    <rect x=\"382\" y=\"183\" rx=\"3\" ry=\"3\" width=\"102\" height=\"7\" />\r\n    <rect x=\"372\" y=\"151\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\r\n    <rect x=\"375\" y=\"199\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\r\n    <rect x=\"386\" y=\"222\" rx=\"3\" ry=\"3\" width=\"102\" height=\"7\" />\r\n    <rect x=\"375\" y=\"249\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\r\n    <rect x=\"386\" y=\"273\" rx=\"3\" ry=\"3\" width=\"102\" height=\"7\" />\r\n    <rect x=\"375\" y=\"300\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\r\n    <rect x=\"5\" y=\"68\" rx=\"3\" ry=\"3\" width=\"639\" height=\"7\" />\r\n\r\n    <rect x=\"4\" y=\"350\" rx=\"3\" ry=\"3\" width=\"122\" height=\"26\" />\r\n    <rect x=\"4\" y=\"418\" rx=\"3\" ry=\"3\" width=\"7\" height=\"330\" />\r\n    <rect x=\"6\" y=\"740\" rx=\"3\" ry=\"3\" width=\"639\" height=\"8\" />\r\n    <rect x=\"640\" y=\"418\" rx=\"3\" ry=\"3\" width=\"6\" height=\"330\" />\r\n    <rect x=\"4\" y=\"420\" rx=\"3\" ry=\"3\" width=\"295\" height=\"325\" />\r\n    <rect x=\"346\" y=\"451\" rx=\"3\" ry=\"3\" width=\"231\" height=\"29\" />\r\n    <rect x=\"382\" y=\"533\" rx=\"3\" ry=\"3\" width=\"102\" height=\"7\" />\r\n    <rect x=\"372\" y=\"501\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\r\n    <rect x=\"375\" y=\"549\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\r\n    <rect x=\"386\" y=\"572\" rx=\"3\" ry=\"3\" width=\"102\" height=\"7\" />\r\n    <rect x=\"375\" y=\"599\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\r\n    <rect x=\"386\" y=\"623\" rx=\"3\" ry=\"3\" width=\"102\" height=\"7\" />\r\n    <rect x=\"375\" y=\"650\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\r\n    <rect x=\"5\" y=\"418\" rx=\"3\" ry=\"3\" width=\"639\" height=\"7\" />\r\n    \r\n  </ContentLoader>\r\n)\r\n\r\nexport default SearchDisplayLoader","import React from \"react\"\r\nimport ContentLoader from \"react-content-loader\" \r\n\r\nconst SearchDisplayMobileLoader = props => (\r\n  <ContentLoader \r\n    speed={2}\r\n    width={'100%'}\r\n    height={'100%'}\r\n    viewBox=\"0 0 600 1300\"\r\n    backgroundColor=\"#f3f3f3\"\r\n    foregroundColor=\"#ecebeb\"\r\n    {...props}\r\n  >\r\n    <rect x=\"5\" y=\"20\" rx=\"0\" ry=\"0\" width=\"222\" height=\"50\" /> \r\n    <rect x=\"5\" y=\"103\" rx=\"0\" ry=\"0\" width=\"5\" height=\"800\" /> \r\n    <rect x=\"5\" y=\"103\" rx=\"0\" ry=\"0\" width=\"580\" height=\"5\" /> \r\n    <rect x=\"585\" y=\"103\" rx=\"0\" ry=\"0\" width=\"5\" height=\"800\" /> \r\n    <rect x=\"5\" y=\"900\" rx=\"0\" ry=\"0\" width=\"580\" height=\"5\" /> \r\n    <rect x=\"5\" y=\"103\" rx=\"0\" ry=\"0\" width=\"580\" height=\"450\" /> \r\n    <rect x=\"55\" y=\"603\" rx=\"0\" ry=\"0\" width=\"480\" height=\"40\" /> \r\n    <rect x=\"55\" y=\"663\" rx=\"0\" ry=\"0\" width=\"480\" height=\"20\" /> \r\n    <rect x=\"70\" y=\"703\" rx=\"0\" ry=\"0\" width=\"450\" height=\"20\" /> \r\n    <rect x=\"55\" y=\"743\" rx=\"0\" ry=\"0\" width=\"480\" height=\"20\" /> \r\n    <rect x=\"250\" y=\"803\" rx=\"0\" ry=\"0\" width=\"100\" height=\"50\" /> \r\n\r\n  </ContentLoader>\r\n)\r\n\r\nexport default SearchDisplayMobileLoader","import React from 'react';\r\nimport { Row } from 'react-bootstrap';\r\nimport Col from 'react-bootstrap/Col'\r\nimport SearchCard from './SearchCard'\r\nimport './SearchDisplay.css'\r\nimport MapContainer from '../Map/MapContainer'\r\nimport SearchDisplayLoader from './SearchDisplayLoader'\r\nimport SearchDisplayLoaderMobile from './SearchDisplayLoaderMobile'\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\n\r\nclass SearchDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stores: [],\r\n      center: {\r\n        lat: 0.0,\r\n        lng: 0.0\r\n      },\r\n      zoom: 11,\r\n      mapStyles: {\r\n        width: '100%',\r\n        height: '100%'\r\n      },\r\n      center: {\r\n        lat: '',\r\n        lng: ''\r\n      },\r\n      category: [\"Nail Salon\", \"Hair Salon\", \"Facials\", \"Barbershops\"],\r\n      selected: [],\r\n      address: '',\r\n      distance: 1,\r\n      loading: true,\r\n      query: this.props.location.search,\r\n      ownUpdate: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.location.state && this.props.location.state.stores && this.props.location.state.center) {\r\n      this.setState({\r\n        stores: this.props.location.state.stores,\r\n        center: this.props.location.state.center,\r\n        loading: false\r\n      })\r\n    }\r\n    else {\r\n      let link = window.location.href.split(\"search\")\r\n      let query = \"\"\r\n\r\n      if (link.length > 1) {\r\n        query = link[1]\r\n      }\r\n\r\n      this.getResults(false, query);\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, preState) {\r\n    if (preState.ownUpdate) {\r\n      return null\r\n    }\r\n    else {\r\n      if(nextProps.location.search !== preState.query) {\r\n        return {\r\n          loading: true\r\n        }\r\n      } else {\r\n        return null\r\n      }\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location) {\r\n      if (this.props.location.search !== prevProps.location.search) {\r\n        this.getResults(true, this.props.location.search);\r\n      }\r\n    }\r\n  }\r\n\r\n  getResults(update, query) {\r\n    fetch(fetchDomain + '/stores' + query, {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n      .then(function (response) {\r\n        if (response.status !== 200) {\r\n          // should throw an error here\r\n          console.log(\"ERROR!\")\r\n        }\r\n        else {\r\n          return response.json();\r\n        }\r\n      })\r\n      .then(data => {\r\n        if (data) {\r\n          this.setState({\r\n            stores: data,\r\n            center: {\r\n              lat: data[0].lat,\r\n              lng: data[0].lng,\r\n            },\r\n            loading: false,\r\n            ownUpdate: update\r\n          })\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const RenderStoreCards = (props) => {\r\n      return this.state.stores.map(store => (\r\n          <SearchCard key={\"store-\" + store.id} store={store}\r\n            onClickFunctionBook={() => window.location.href = '/book/' + store.id}\r\n            onClickFunctionStore={() => window.location.href = '/stores/' + store.id}\r\n          />\r\n      ))\r\n    }\r\n    const DisplayWithLoading = (props) => {\r\n      if (this.state.loading) {\r\n        return <Row>\r\n            <Col xs=\"12\">\r\n              <SearchDisplayLoader className={'d-none d-xl-block'}/>\r\n              <SearchDisplayLoaderMobile className={'d-block d-xl-none'}/>\r\n            </Col>\r\n          </Row>\r\n      } else {\r\n        return(<div>\r\n          <h3 className=\"text-left\"> {this.state.stores.length} results </h3>\r\n          <Row className=\"mx-0 justify-content-center search-cards-row\">\r\n            <RenderStoreCards/>\r\n          </Row>\r\n        </div>\r\n        )\r\n      }\r\n    }\r\n\r\n    const DisplayMapWithLoading = (props) => {\r\n      if(this.state.loading) {\r\n        return <p>Loading...</p>\r\n      } else {\r\n        return <MapContainer google={window.google}\r\n        stores={this.state.stores}\r\n        center={this.state.center}\r\n        zoom={this.state.zoom}\r\n        mapStyles={this.state.mapStyles} />\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"restrict-viewport mx-0\">\r\n          <Col xs={12} xl={6} className=\"px-5 my-3 h-100\">\r\n            <DisplayWithLoading/>\r\n          </Col>\r\n          <Col id=\"map\" xs={12} xl={6}>\r\n            <div className=\"position-fixed h-100 w-50 d-none d-xl-block\">\r\n              <DisplayMapWithLoading/>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchDisplay;\r\n","import React from 'react';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Card from 'react-bootstrap/Card'\r\nimport './ServiceSelection.css'\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nclass ServiceSelection extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      categories: ['Nails', 'Hair', 'Makeup', 'Eyelashes', 'Eyebrows', 'Facials', 'Skin Care']\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    let currService = this.props.services.find(x => x.name === event.target.id)\r\n    if (this.props.selectedServices.find(x => x.name === currService.name)) {\r\n      this.props.updateReservation(true, currService)\r\n    }\r\n    else {\r\n      this.props.updateReservation(false, currService);\r\n    }\r\n    this.setState({ [event.target.id]: !this.state[event.target.id] })\r\n  }\r\n\r\n  render() {\r\n    let that = this;\r\n    const ServiceCheckBoxes = (props) => {\r\n      if (props.services) {\r\n        const categories = props.categories.map((category) => {\r\n          return <div id={category} key={category} className=\"pl-4\">\r\n              <h4>{category}</h4>\r\n              {\r\n                props.services.map((service) => {\r\n                  if(service.category == category) {\r\n                    return <div key={service.name}>\r\n                      <Row>\r\n                        <Col xs='8' sm='10'>\r\n                          <Form.Check\r\n                            custom\r\n                            type=\"checkbox\" \r\n                            id={service.name}\r\n                            label={service.name} \r\n                            checked={this.props.selectedServices.find(x => x.name === service.name)}\r\n                            onChange={this.handleChange}\r\n                            className='formCustom'\r\n                          />\r\n                        </Col>\r\n                        <Col xs='4' sm='2'>\r\n                          <h5 className=\"pt-2 text-center\">${service.cost.toFixed(2)}</h5>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                  }\r\n                })\r\n              }\r\n            </div>\r\n        })\r\n        return categories\r\n      }\r\n      return null\r\n    }\r\n    return (\r\n      <Card className='py-3'>\r\n        <h3>Select Services</h3>\r\n          <Row className=\"text-left\">\r\n            <Col>\r\n              <ServiceCheckBoxes categories={this.state.categories} services={this.props.services} />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"justify-content-center\">\r\n            <Col md=\"3\">\r\n            <Button block onClick={this.props.handleSubmit}>Next</Button>\r\n            </Col>\r\n          </Row>\r\n        \r\n      </Card>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default ServiceSelection;\r\n","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './DateSelection.css';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport store from '../../reduxFolder/store';\r\nimport { addAlert } from '../../reduxFolder/actions/alert'\r\nimport GridLoader from 'react-spinners/GridLoader'\r\nimport { css } from '@emotion/core'\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n\r\nclass DateSelection extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      startDate: new Date(),\r\n      currDate: new Date(),\r\n      selectedTime: 540,\r\n      loading: true,\r\n      appointments: []\r\n    };\r\n  }\r\n\r\n  handleDateChange = date => {\r\n    if (date.getMonth() != this.state.startDate.getMonth()) {\r\n      this.setState({\r\n        loading: true\r\n      })\r\n      fetch(fetchDomain + '/stores/' + this.props.store_id + '/appointments/month/' + (parseInt(date.getMonth()) + 1), {\r\n        method: \"GET\",\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      })\r\n        .then(function (response) {\r\n          if (response.status !== 200) {\r\n            store.dispatch(addAlert(response))\r\n          }\r\n          else {\r\n            return response.json()\r\n          }\r\n        })\r\n        .then(data => {\r\n          let parsedData = data.map(appointment => {\r\n            appointment.date = new Date(appointment.date)\r\n            return appointment\r\n          })\r\n          this.setState({\r\n            appointments: parsedData,\r\n            currDate: date,\r\n            startDate: date,\r\n            loading: false\r\n          })\r\n        });\r\n    }\r\n    this.setState({\r\n      currDate: date\r\n    });\r\n  };\r\n\r\n  handleSelectChange = (event) => {\r\n    this.setState({\r\n      selectedTime: parseInt(event.target.value)\r\n    });\r\n  };\r\n\r\n  handleSlotClick = (schedule) => {\r\n    this.props.updateAppointments(schedule)\r\n    this.props.handleSubmit()\r\n  }\r\n\r\n  convertMinsToHrsMins(mins) {\r\n    let h = Math.floor(mins / 60);\r\n    let m = mins % 60;\r\n    let am = false\r\n    if (h == 24) {\r\n      am = true\r\n      h -= 12\r\n    }\r\n    else if (h < 12) {\r\n      am = true\r\n    } else if (h != 12) {\r\n      h -= 12\r\n    }\r\n    h = h < 10 ? '0' + h : h;\r\n    if (h == 0) {\r\n      h = '12'\r\n    }\r\n    m = m < 10 ? '0' + m : m;\r\n    if (am) {\r\n      return `${h}:${m}am`;\r\n    } else {\r\n      return `${h}:${m}pm`;\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(fetchDomain + '/stores/' + this.props.store_id + '/appointments/month/' + (parseInt(this.state.startDate.getMonth()) + 1), {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n      .then(function (response) {\r\n        if (response.status !== 200) {\r\n          store.dispatch(addAlert(response))\r\n        }\r\n        else {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(data => {\r\n        let parsedData = data.map(appointment => {\r\n          appointment.date = new Date(appointment.date)\r\n          return appointment\r\n        })\r\n        this.setState({\r\n          appointments: parsedData,\r\n          loading: false\r\n        })\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const CreateTimeSelects = (props) => {\r\n      let items = [];\r\n      for (let i = this.props.storeHours[this.state.startDate.getDay()].open_time; i + this.props.time <= this.props.storeHours[this.state.startDate.getDay()].close_time; i += 60) {\r\n        items.push(<option key={i} value={i}>{this.convertMinsToHrsMins(i)}</option>);\r\n      }\r\n      return items;\r\n    }\r\n\r\n    const SlotsAtSelectedTime = () => {\r\n      let slots = []\r\n      let schedules = []\r\n      // Loop through different appointment start times for the day\r\n      for (let i = this.state.selectedTime; (i < this.state.selectedTime + 120 && i + this.props.time <= this.props.storeHours[this.state.currDate.getDay()].close_time); i += 15) {\r\n        let currTime = i\r\n        let foundSchedule = false\r\n        let currSchedule = []\r\n        let currDaySchedules = this.props.workersSchedules.filter(element => element.day_of_the_week == this.state.currDate.getDay());\r\n        let scheduleStillWorks = true\r\n        // We're going to increment through the workers that are scheduled for today and build a schedule bit by bit until we finish or realize there are no more appointments for the day\r\n        // Don't want to lose the original values of currTime, currService, and k when we continue ahead in our schedule\r\n        let currScheduleCurrTime = currTime\r\n        let currScheduleCurrWorkerIndex = 0\r\n        let currScheduleServiceIndex = 0\r\n        // Start building our schedule\r\n        while (scheduleStillWorks && !foundSchedule) {\r\n          let available = true\r\n          let currScheduleCurrService = this.props.selectedServices[currScheduleServiceIndex]\r\n          let currScheduleCurrWorker = currDaySchedules[currScheduleCurrWorkerIndex].worker_id\r\n          // Check if appointment is within worker's hours\r\n          if (currDaySchedules[currScheduleCurrWorkerIndex].start_time > currScheduleCurrTime || currDaySchedules[currScheduleCurrWorkerIndex].end_time < (currScheduleCurrTime + currScheduleCurrService.duration)) {\r\n            available = false\r\n          } else {\r\n            let currWorkerAppointments = this.state.appointments.filter(appointment => appointment.worker_id == currScheduleCurrWorker && appointment.date.setHours(0, 0, 0, 0) == this.state.currDate.setHours(0, 0, 0, 0))\r\n            // Check for conflicts via worker's existing appointments for the day\r\n            for (let m = 0; m < currWorkerAppointments.length; m++) {\r\n              if ((currScheduleCurrTime >= currWorkerAppointments[m].start_time && currScheduleCurrTime <= currWorkerAppointments[m].end_time) || (currScheduleCurrTime + currScheduleCurrService.duration >= currWorkerAppointments[m].start_time && currScheduleCurrTime + currScheduleCurrService.duration <= currWorkerAppointments[m].end_time)) {\r\n                // Worker is unavailable\r\n                available = false\r\n                break\r\n              }\r\n            }\r\n          }\r\n\r\n          if (available) {\r\n            // Add slot to the schedule we are building\r\n            currSchedule.push({ worker_id: currScheduleCurrWorker, service_id: currScheduleCurrService.id, start_time: currScheduleCurrTime, end_time: currScheduleCurrTime + currScheduleCurrService.duration, price: currScheduleCurrService.cost, date: this.state.startDate })\r\n            currScheduleCurrTime += currScheduleCurrService.duration\r\n            currScheduleServiceIndex += 1\r\n            //NOTE, will always cycle to first worker. What if we want to maintain worker for entire appointment duration? May be worth refactoring for continuity. \r\n            currScheduleCurrWorkerIndex = 0\r\n            if (currScheduleServiceIndex == this.props.selectedServices.length) {\r\n              //We've found a worker for each service in the appointment. We're done. \r\n              foundSchedule = true\r\n            }\r\n          } else if (currScheduleCurrWorkerIndex + 1 < currDaySchedules.length) {\r\n            // continue checking if there's another worker available for this service\r\n            currScheduleCurrWorkerIndex += 1\r\n          } else {\r\n            // no workers were available for this appointment. \r\n            // NOTE: it may be possible, in the case where there are multiple services selected for the appointment, that there is still some combination of worker slots to make this appointment work. I'm only checking linearly. This may be worth refactoring for better scheduling, but the tradeoff is increased complexity in scheduling. \r\n            scheduleStillWorks = false\r\n          }\r\n        }\r\n\r\n        if (foundSchedule) {\r\n          schedules.push(currSchedule)\r\n          slots.push(<Button className=\"mt-3 mx-2\" key={i} onClick={() => this.handleSlotClick(currSchedule)}>{this.convertMinsToHrsMins(i)}</Button>)\r\n        }\r\n      }\r\n      if (slots.length == 0) {\r\n        return <h1>No available appointments</h1>\r\n      }\r\n      return slots\r\n    }\r\n\r\n    const DisplayWithLoading = (props) => {\r\n      if (this.state.loading) {\r\n        return <Row className=\"vertical-center\">\r\n          <Col>\r\n            <GridLoader\r\n              css={override}\r\n              size={20}\r\n              color={\"#2196f3\"}\r\n              loading={this.state.isLoading}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      } else {\r\n        return <Row className=\"justify-content-center text-xs-center text-sm-left pl-2\">\r\n          <Col xs=\"12\" md=\"11\" className=\"px-1\">\r\n            {/* Maybe want to have this with multiple rows, each row belongs to technician. One last row is technician mix to make the appointment work out */}\r\n            <SlotsAtSelectedTime />\r\n          </Col>\r\n        </Row>\r\n\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Card\r\n        text='dark'\r\n        className='mt-0 py-3'\r\n      >\r\n        <div id=\"date-selection-form\">\r\n          <h3>Select Appointment Time</h3>\r\n          <Card.Body className='pt-0'>\r\n            <Row className='justify-content-center'>\r\n              <Col xs=\"11\" md=\"6\" className=\"mt-3\">\r\n                <div className=\"customDatePickerWidth\">\r\n                  <DatePicker\r\n                    className=\"form-control\"\r\n                    selected={this.state.currDate}\r\n                    onChange={this.handleDateChange}\r\n                    minDate={new Date()}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col xs=\"11\" md=\"6\" className=\"mt-3\">\r\n                <Form>\r\n                  <Form.Control as=\"select\" value={this.state.selectedTime} onChange={this.handleSelectChange.bind(this)}>\r\n                    <CreateTimeSelects date={this.state.startDate} />\r\n                  </Form.Control>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n            <DisplayWithLoading />\r\n          </Card.Body>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DateSelection;","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport './BookingPage.css';\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport { FaEnvelope, FaUser, FaPhone } from 'react-icons/fa';\r\nimport { Formik } from 'formik';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport store from '../../reduxFolder/store';\r\nimport { addAlert } from '../../reduxFolder/actions/alert'\r\nimport GridLoader from 'react-spinners/GridLoader'\r\nimport { css } from '@emotion/core'\r\nimport Cookies from 'js-cookie';\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n\r\nclass DateSelection extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName: '',\r\n      lastName: '',\r\n      phone: '',\r\n      email: '',\r\n      user_id: -1,\r\n    };\r\n    this.triggerAppointmentDisplay = this.triggerAppointmentDisplay.bind(this);\r\n  }\r\n\r\n  // redirect to the appointment display page and pass the new store data\r\n  triggerAppointmentDisplay(returnedAppointment) {\r\n    this.props.history.push({\r\n      pathname: '/appointments/' + returnedAppointment,\r\n      state: {\r\n        appointmentGroupId: returnedAppointment\r\n      }\r\n    })\r\n  }\r\n\r\n  convertMinsToHrsMins(mins) {\r\n    let h = Math.floor(mins / 60);\r\n    let m = mins % 60;\r\n    let am = false\r\n    if (h == 24) {\r\n      am = true\r\n      h -= 12\r\n    }\r\n    else if (h < 12) {\r\n      am = true\r\n    } else if (h != 12) {\r\n      h -= 12\r\n    }\r\n    h = h < 10 ? '0' + h : h;\r\n    if (h == 0) {\r\n      h = '12'\r\n    }\r\n    m = m < 10 ? '0' + m : m;\r\n    if (am) {\r\n      return `${h}:${m}am`;\r\n    } else {\r\n      return `${h}:${m}pm`;\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount () {\r\n    if(Cookies.get('user')){\r\n      let user = JSON.parse(Cookies.get('user').substring(2))\r\n      this.setState({\r\n        firstName: user.first_name,\r\n        lastName: user.last_name,\r\n        email: user.email,\r\n        phone: user.phone,\r\n        user_id: user.id\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const DisplayWithLoading = (props) => {\r\n      if (this.state.loading) {\r\n        return <Card\r\n        text='dark'\r\n        className='mt-0 py-3'\r\n      >\r\n        <Card.Body className='pt-0'>\r\n          <Row className=\"vertical-center\">\r\n            <Col>\r\n              <GridLoader\r\n                css={override}\r\n                size={20}\r\n                color={\"#2196f3\"}\r\n                loading={this.state.isLoading}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n      } else {\r\n        return <Card text='dark'\r\n        className='mt-0 py-3' id=\"date-selection-form\">\r\n          <Card.Title>Book Appointment</Card.Title>\r\n          <Card.Body className='pt-0'>\r\n            <Row className='justify-content-center'>\r\n              <Formik\r\n                initialValues={{\r\n                  firstName: this.state.firstName,\r\n                  lastName: this.state.lastName,\r\n                  phone: this.state.phone,\r\n                  email: this.state.email,\r\n                  user_id: this.state.user_id\r\n                }}\r\n                onSubmit={(values) => {\r\n                  values.appointments = this.props.appointments\r\n                  let triggerAppointmentDisplay = this.triggerAppointmentDisplay\r\n\r\n                  fetch(fetchDomain + '/stores/' + this.props.store_id + '/appointments/new', {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                      'Content-type': 'application/json',\r\n                      'Accept': 'application/json'\r\n                    },\r\n                    credentials: 'include',\r\n                    body: JSON.stringify(values)\r\n                  })\r\n                    .then(function (response) {\r\n                      if (response.status !== 200) {\r\n                        // throw an error alert\r\n                        store.dispatch(addAlert(response))\r\n                      }\r\n                      else {\r\n                        return response.json();\r\n                      }\r\n                    })\r\n                    .then(async data => {\r\n                      if (data) {\r\n                        triggerAppointmentDisplay(data)\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                {({ values,\r\n                  errors,\r\n                  touched,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                  setFieldValue\r\n                }) => (\r\n                    <Form className=\"form-style\">\r\n\r\n                      <Form.Group controlId=\"formFirstName\">\r\n                        <InputGroup>\r\n                          <InputGroup.Prepend>\r\n                            <InputGroup.Text>\r\n                              <FaUser />\r\n                            </InputGroup.Text>\r\n                          </InputGroup.Prepend>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            value={values.firstName}\r\n                            placeholder=\"First Name\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            className={touched.firstName && errors.firstName ? \"error\" : null} />\r\n                        </InputGroup>\r\n                        {touched.firstName && errors.firstName ? (\r\n                          <div className=\"error-message\">{errors.firstName}</div>\r\n                        ) : null}\r\n                      </Form.Group>\r\n\r\n                      <Form.Group controlId=\"formLastName\">\r\n                        <InputGroup>\r\n                          <InputGroup.Prepend>\r\n                            <InputGroup.Text>\r\n                              <FaUser />\r\n                            </InputGroup.Text>\r\n                          </InputGroup.Prepend>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            value={values.lastName}\r\n                            placeholder=\"Last Name\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            className={touched.lastName && errors.lastName ? \"error\" : null} />\r\n                        </InputGroup>\r\n                        {touched.lastName && errors.lastName ? (\r\n                          <div className=\"error-message\">{errors.lastName}</div>\r\n                        ) : null}\r\n                      </Form.Group>\r\n\r\n                      <Form.Group controlId=\"formPhone\">\r\n                        <InputGroup>\r\n                          <InputGroup.Prepend>\r\n                            <InputGroup.Text>\r\n                              <FaPhone />\r\n                            </InputGroup.Text>\r\n                          </InputGroup.Prepend>\r\n                          <Form.Control type=\"text\"\r\n                            value={values.phone}\r\n                            placeholder=\"Phone Number\"\r\n                            name=\"phone\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            className={touched.phone && errors.phone ? \"error\" : null} />\r\n                        </InputGroup>\r\n                        {touched.phone && errors.phone ? (\r\n                          <div className=\"error-message\">{errors.phone}</div>\r\n                        ) : null}\r\n                      </Form.Group>\r\n\r\n                      <Form.Group controlId=\"formEmail\">\r\n                        <InputGroup>\r\n                          <InputGroup.Prepend>\r\n                            <InputGroup.Text>\r\n                              <FaEnvelope />\r\n                            </InputGroup.Text>\r\n                          </InputGroup.Prepend>\r\n                          <Form.Control\r\n                            type=\"email\"\r\n                            value={values.email}\r\n                            placeholder=\"Email\"\r\n                            name=\"email\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            className={touched.email && errors.email ? \"error\" : null} />\r\n                        </InputGroup>\r\n                        {touched.email && errors.email ? (\r\n                          <div className=\"error-message\">{errors.email}</div>\r\n                        ) : null}\r\n                      </Form.Group>\r\n\r\n                      <Button onClick={handleSubmit}>Submit</Button>\r\n                    </Form>\r\n                  )}\r\n              </Formik>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      }\r\n    }\r\n\r\n    return (\r\n      <DisplayWithLoading />\r\n    );\r\n  }\r\n}\r\n\r\nexport default DateSelection;","import React from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport ServiceSelection from './ServiceSelection'\r\nimport './ReservationPage.css'\r\nimport { Row, Col, Card, ListGroup } from 'react-bootstrap'\r\nimport { FaArrowLeft } from 'react-icons/fa'\r\nimport DateSelection from './DateSelection'\r\nimport { css } from '@emotion/core'\r\nimport GridLoader from 'react-spinners/GridLoader'\r\nimport BookingPage from './BookingPage';\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n\r\nclass ReservationPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      storeName: null,\r\n      total: 0,\r\n      time: 0,\r\n      currentStep: 1,\r\n      selectedServices: [],\r\n      services: [],\r\n      loading: true,\r\n      workers: [],\r\n      workersSchedules: [],\r\n      storeHours: []\r\n    };\r\n  }\r\n\r\n  updateReservation = (removal, currService) => {\r\n    if (removal) {\r\n      this.setState({ time: this.state.time - currService.duration })\r\n      this.setState({ total: this.state.total - currService.cost })\r\n      this.setState({\r\n        selectedServices: this.state.selectedServices.filter(function (selectedService) {\r\n          return currService.id !== selectedService.id;\r\n        }\r\n        )\r\n      })\r\n    } else {\r\n      this.setState({ time: this.state.time + currService.duration })\r\n      this.setState({ total: this.state.total + currService.cost })\r\n      this.setState({ selectedServices: [...this.state.selectedServices, currService] })\r\n    }\r\n  }\r\n\r\n  backStep = (event) => {\r\n    var newStep = this.state.currentStep - 1\r\n    this.setState({\r\n      currentStep: newStep\r\n    })\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    if (this.state.currentStep < 4) {\r\n      var newStep = this.state.currentStep + 1\r\n      this.setState({\r\n        currentStep: newStep\r\n      })\r\n    } else {\r\n      alert(JSON.stringify(this.state));\r\n    }\r\n  }\r\n\r\n  updateAppointments = (receivedAppointments) => {\r\n    this.setState({\r\n      appointments: receivedAppointments\r\n    })\r\n  }\r\n\r\n  pluralize = (val, word, plural = word + 's') => {\r\n    const _pluralize = (num, word, plural = word + 's') =>\r\n      [1, -1].includes(Number(num)) ? word : plural;\r\n    if (typeof val === 'object') return (num, word) => _pluralize(num, word, val[word]);\r\n    return _pluralize(val, word, plural);\r\n  };\r\n\r\n  timeConvert = (n) => {\r\n    var num = n;\r\n    var hours = (num / 60);\r\n    var rhours = Math.floor(hours);\r\n    var minutes = (hours - rhours) * 60;\r\n    var rminutes = Math.round(minutes);\r\n    return rhours + \" \" + this.pluralize(rhours, 'hour') + \" and \" + rminutes + \" \" + this.pluralize(rminutes, 'minute');\r\n  }\r\n\r\n  prefetchSchedules = () => {\r\n    Promise.all([\r\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/workers/schedules', {\r\n        method: \"GET\",\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      }).then(value => value.json()),\r\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/storeHours\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      }).then(value => value.json())\r\n    ]).then(allResponses => {\r\n      this.setState({\r\n        storeHours: allResponses[1],\r\n        workersSchedules: allResponses[0]\r\n      })\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    // need to get store category, fetch?\r\n    Promise.all([\r\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/services\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    }).then(value => value.json()),\r\n    fetch(fetchDomain + '/stores/' + this.props.match.params.store_id, {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    }).then(value => value.json())\r\n    ]).then(allResponses => {\r\n      const response1 = allResponses[0]\r\n      const response2 = allResponses[1]\r\n      this.setState({\r\n        services: response1,\r\n        storeName: response2.name,\r\n        workers: response2.workers,\r\n        loading: false\r\n      })\r\n    })\r\n\r\n    this.prefetchSchedules()\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    let that = this;\r\n    const DisplayByStep = (props) => {\r\n      if (this.state.loading) {\r\n        return <Card className=\"fullHeight\">\r\n          <Row className=\"vertical-center\">\r\n            <Col>\r\n              <GridLoader\r\n                css={override}\r\n                size={20}\r\n                color={\"#2196f3\"}\r\n                loading={this.state.loading}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n      } else {\r\n        if (this.state.currentStep == 1) {\r\n          return <ServiceSelection services={this.state.services} updateReservation={this.updateReservation} selectedServices={this.state.selectedServices} time={this.state.time} total={this.state.total} handleSubmit={this.handleSubmit} timeConvert={this.timeConvert} pluralize={this.pluralize} />\r\n        } else if(this.state.currentStep == 2) {\r\n          return <DateSelection time={this.state.time}  store_id={this.props.match.params.store_id} selectedServices={this.state.selectedServices} storeHours={this.state.storeHours} workersSchedules={this.state.workersSchedules} handleSubmit={this.handleSubmit} updateAppointments={this.updateAppointments}/>\r\n        } else {\r\n          return <BookingPage appointments={this.state.appointments} store_id={this.props.match.params.store_id} history={this.props.history}/>\r\n        }\r\n      }\r\n    }\r\n\r\n    const DisplayBackButton = (props) => {\r\n      if (this.state.currentStep == 1) {\r\n        return null\r\n      } else {\r\n        return <FaArrowLeft size={'2em'} className=\"pt-2 pr-2\" onClick={this.backStep} />\r\n      }\r\n    }\r\n\r\n    function ServiceList(props) {\r\n      if (props.services) {\r\n        const servicesList = props.services.map((service) => {\r\n          return <ListGroup.Item variant=\"light\" key={service.name}>\r\n            <Row>\r\n              <Col lg={7}>\r\n                <Row>\r\n                  {service.name}\r\n                </Row>\r\n                <Row className=\"smallText\">\r\n                  {service.duration} {that.pluralize(service.duration, 'minute')}\r\n                </Row>\r\n              </Col>\r\n              <Col lg={5}>\r\n                <div className=\"float-right\">\r\n                  ${service.cost.toFixed(2)}\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </ListGroup.Item>;\r\n        });\r\n\r\n        return (\r\n          <ListGroup variant='flush'>{servicesList}</ListGroup>\r\n        );\r\n      }\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <Container fluid>\r\n        <Row noGutters className=\"pt-3 pb-0\">\r\n          <Col xs=\"1\">\r\n            <DisplayBackButton />\r\n          </Col>\r\n          <Col xs=\"11\" className=\"text-left\">\r\n            <h2>Step {this.state.currentStep}</h2>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col xs={12} lg={8} className=\"largeMarginBottom\">\r\n            <DisplayByStep />\r\n          </Col>\r\n          <Col xs={12} lg={4} className=\"d-none d-lg-block\">\r\n            <Card\r\n              text='dark'\r\n              className='shoppingCart mt-0'\r\n            >\r\n              <Card.Header>Shopping Cart</Card.Header>\r\n              <Card.Body className='pt-0'>\r\n                <Row className='text-left'>\r\n                  <Col>\r\n                    <ServiceList services={this.state.selectedServices} />\r\n                  </Col>\r\n                </Row>\r\n\r\n                <h2>Total: ${this.state.total.toFixed(2)}</h2>\r\n                <h2>Time: {this.state.time} minutes</h2>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col xs={12} className=\"d-lg-none shoppingCartSmall px-0\">\r\n            <Card\r\n              bg='light'\r\n              text='dark'\r\n            >\r\n              <Card.Header className='py-1'>Shopping Cart</Card.Header>\r\n              <Card.Body className=\"smallPadding\">\r\n                <h6>{this.state.selectedServices.length} Selected {this.pluralize(this.state.selectedServices.length, 'Service')}</h6>\r\n                <h6>Total: ${this.state.total.toFixed(2)}</h6>\r\n                <h6>Time: {this.timeConvert(this.state.time)}</h6>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReservationPage;","const fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\n// export let getPictures = async(prefixPassed) => {\r\n// module.exports.getPictures = async function(prefixPassed) {\r\n//   await getPictures(prefixPassed);\r\n// }\r\n// var getPictures = async function(prefixPassed) {\r\n\r\n// getting an export error, going to leave it for now\r\n\r\nasync function getPictures(prefixPassed) {\r\n  const response = await fetch(fetchDomain + '/getImages', {\r\n      method: \"POST\",\r\n      headers: {\r\n          'Content-type': 'application/json'\r\n      },\r\n      credentials: 'include',\r\n      body: JSON.stringify({prefix: prefixPassed})\r\n    })\r\n  const pictures = await response.json()\r\n\r\n  return pictures\r\n}\r\n\r\n// function for uploading all selected files to s3\r\nasync function uploadHandler(prefix, selectedFiles) {\r\n  // upload each image to s3\r\n  // have to get presigned url from server before uploading directly\r\n  for(let i = 0; i < selectedFiles.length; i++){\r\n    var tempDate = new Date();\r\n    var date = '_' + tempDate.getFullYear() + '-' + (tempDate.getMonth()+1) + '-' + tempDate.getDate() +' '+ tempDate.getHours()+':'+ tempDate.getMinutes()+':'+ tempDate.getSeconds();\r\n\r\n    let values = {\r\n      fileName: prefix + selectedFiles[i].name + date, // add the current time so its unique..\r\n      fileType: selectedFiles[i].type\r\n    }\r\n\r\n    const response = await fetch(fetchDomain + '/getPresignedUrl/', {\r\n      method: \"POST\",\r\n      headers: {\r\n          'Content-type': 'application/json'\r\n      },\r\n      credentials: 'include',\r\n      body: JSON.stringify(values)\r\n    })\r\n    const url = await response.json()\r\n\r\n    const responseS3 = await fetch(url, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            'Content-type': selectedFiles[i].type\r\n        },\r\n        body: selectedFiles[i]\r\n      })\r\n    \r\n    // if(responseS3.status!==200){\r\n    //   // throw an error alert\r\n    //   store.dispatch(addAlert(response))\r\n    // }\r\n  }\r\n}\r\n\r\n// function for uploading all selected files to s3\r\nasync function deleteHandler(keysPassed) {\r\n  // remove each image from s3\r\n  const response = await fetch(fetchDomain + '/deleteImages/', {\r\n    method: \"POST\",\r\n    headers: {\r\n        'Content-type': 'application/json'\r\n    },\r\n    credentials: 'include',\r\n    body: JSON.stringify({keys: keysPassed})\r\n  })\r\n}\r\n\r\nexport { getPictures, uploadHandler, deleteHandler}","import React from 'react';\r\nimport '../../App.css';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport { FaShoppingCart, FaRoad, FaBuilding, FaUniversity, FaGlobe, FaPen, FaPhone } from 'react-icons/fa';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Select from 'react-select';\r\nimport Cookies from 'js-cookie';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport {updateRole} from '../../reduxFolder/actions/user.js'\r\nimport {addStore} from '../../reduxFolder/actions/stores.js'\r\nimport {\r\n  addAlert\r\n} from '../../reduxFolder/actions/alert'\r\nimport store from '../../reduxFolder/store';\r\nimport { uploadHandler } from '../s3';\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nclass StoreSignupForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedFiles: null,\r\n      storeHours: [{ open_time: 540, close_time: 1020 },\r\n      { open_time: 540, close_time: 1020 },\r\n      { open_time: 540, close_time: 1020 },\r\n      { open_time: 540, close_time: 1020 },\r\n      { open_time: 540, close_time: 1020 },\r\n      { open_time: 540, close_time: 1020 },\r\n      { open_time: 540, close_time: 1020 }],\r\n    }\r\n\r\n    // options for store categories\r\n    this.options = [\r\n      { value: 'nails', label: 'Nails' },\r\n      { value: 'hair', label: 'Hair' },\r\n      { value: 'makeup', label: 'Makeup' },\r\n      { value: 'eyelashes', label: 'Eyelashes' },\r\n      { value: 'eyelash extensions', label: 'Eyelash Extensions' },\r\n      { value: 'eyebrows', label: 'Eyebrows' },\r\n      { value: 'facials', label: 'Facials' },\r\n      { value: 'skincare', label: 'Skin Care' },\r\n      { value: 'waxing', label: 'Waxing' },\r\n      { value: 'mens', label: 'Mens Services' }\r\n    ];\r\n\r\n    // RegEx for phone number validation\r\n    this.phoneRegExp = /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/\r\n\r\n    // Schema for yup\r\n    this.yupValidationSchema = Yup.object().shape({\r\n      name: Yup.string()\r\n        .min(2, \"Store name must have at least 2 characters\")\r\n        .max(100, \"Store name can't be longer than 100 characters\")\r\n        .required(\"Name is required\"),\r\n      description: Yup.string()\r\n        .min(20, \"Description must have at least 20 characters\")\r\n        .required(\"Description is required\"),\r\n      phone: Yup.string()\r\n        .matches(this.phoneRegExp, \"Phone number is not valid\")\r\n        .required(\"Phone number is required\"),\r\n      street: Yup.string()\r\n        .min(6, \"Street must have at least 6 characters\")\r\n        .max(100, \"Street can't be longer than 100 characters\")\r\n        .required(\"Street is required\"),\r\n      city: Yup.string()\r\n        .min(2, \"City must have at least 2 characters\")\r\n        .max(40, \"City can't be longer than 40 characters\")\r\n        .required(\"City is required\"),\r\n      state: Yup.string()\r\n        .min(2, \"State must have at least 2 characters\")\r\n        .max(12, \"State can't be longer than 12 characters\")\r\n        .required(\"State is required\"),\r\n      zipcode: Yup.string()\r\n        .max(20, \"Zipcode can't be longer than 100 characters\")\r\n        .required(\"Zipcode is required\"),\r\n      category: Yup.array()\r\n        .required(\"Category is required\")\r\n        .nullable()\r\n    });\r\n\r\n    this.triggerStoreDisplay = this.triggerStoreDisplay.bind(this);\r\n  }\r\n\r\n  // redirect to the store display page and pass the new store data\r\n  triggerStoreDisplay(returnedStore) {\r\n\r\n    this.props.history.push({\r\n      pathname: '/stores/' + returnedStore.id,\r\n      state: {\r\n        store: returnedStore\r\n      }\r\n    })\r\n  }\r\n\r\n  convertMinsToHrsMins(mins) {\r\n    let h = Math.floor(mins / 60);\r\n    let m = mins % 60;\r\n    let am = false\r\n    if (h == 24) {\r\n      am = true\r\n      h -= 12\r\n    }\r\n    else if (h < 12) {\r\n      am = true\r\n    } else if (h != 12) {\r\n      h -= 12\r\n    }\r\n    h = h < 10 ? '0' + h : h;\r\n    if (h == 0) {\r\n      h = '12'\r\n    }\r\n    m = m < 10 ? '0' + m : m;\r\n    if (am) {\r\n      return `${h}:${m}am`;\r\n    } else {\r\n      return `${h}:${m}pm`;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  handleSelectChange = (event) => {\r\n    var days = ['formHoursMonday', 'formHoursTuesday', 'formHoursWednesday', 'formHoursThursday', 'formHoursFriday', 'formHoursSaturday', 'formHoursSunday']\r\n    var day = days.indexOf(event.target.id)\r\n    var newStoreHours = []\r\n\r\n    if (event.target.querySelector('option').value == \"0\") {\r\n      newStoreHours = [\r\n        ...this.state.storeHours.slice(0, day),\r\n        { open_time: parseInt(event.target.value), close_time: this.state.storeHours[day].close_time },\r\n        ...this.state.storeHours.slice(day + 1)\r\n      ]\r\n    } else {\r\n      newStoreHours = [\r\n        ...this.state.storeHours.slice(0, day),\r\n        { open_time: this.state.storeHours[day].open_time, close_time: parseInt(event.target.value) },\r\n        ...this.state.storeHours.slice(day + 1)\r\n      ]\r\n    }\r\n\r\n    this.setState({\r\n      storeHours: newStoreHours\r\n    })\r\n  };\r\n\r\n  fileChangedHandler = event => {\r\n    this.setState({ selectedFiles: event.target.files })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"justify-content-center\">\r\n          <Col xs={8} sm={7} md={6} lg={5}>\r\n            <Formik\r\n              initialValues={{\r\n                name: '',\r\n                description: '',\r\n                phone: '',\r\n                street: '',\r\n                city: '',\r\n                state: '',\r\n                zipcode: '',\r\n                category: [],\r\n                owner_id: \"\"\r\n              }}\r\n              validationSchema={this.yupValidationSchema}\r\n              onSubmit={(values) => {\r\n                values.category = values.category.map(function (val) {\r\n                  return val.label;\r\n                })\r\n\r\n                values.owner_id = [JSON.parse(Cookies.get('user').substring(2)).id]\r\n                values.storeHours = this.state.storeHours\r\n\r\n\r\n                let triggerStoreDisplay = this.triggerStoreDisplay\r\n\r\n                fetch(fetchDomain + '/addStore', {\r\n                  method: \"POST\",\r\n                  headers: {\r\n                    'Content-type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                  },\r\n                  credentials: 'include',\r\n                  body: JSON.stringify(values)\r\n                })\r\n                  .then(function (response) {\r\n                    if (response.status !== 200) {\r\n                      // throw an error alert\r\n                      store.dispatch(addAlert(response))\r\n                    }\r\n                    else {\r\n                      return response.json();\r\n                    }\r\n                  })\r\n                  .then(async data => {\r\n                    if (data) {\r\n                      let prefix = 'stores/' + data.id + '/images/'\r\n                      if (this.state.selectedFiles) {\r\n                        await uploadHandler(prefix, this.state.selectedFiles)\r\n                      }\r\n                      this.props.updateRole(1)\r\n                      this.props.addStore(data)\r\n                      triggerStoreDisplay(data)\r\n                    }\r\n                  });\r\n              }}\r\n            >\r\n              {({ values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                setFieldValue\r\n              }) => (\r\n                  <Form className=\"formBody rounded\">\r\n                    <h3>Store Sign Up</h3>\r\n\r\n                    <Form.Group controlId=\"formName\">\r\n                      <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                          <InputGroup.Text>\r\n                            <FaShoppingCart />\r\n                          </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          name=\"name\"\r\n                          value={values.name}\r\n                          placeholder=\"Business Name\"\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          className={touched.name && errors.name ? \"error\" : null} />\r\n                      </InputGroup>\r\n                      {touched.name && errors.name ? (\r\n                        <div className=\"error-message\">{errors.name}</div>\r\n                      ) : null}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formDescription\">\r\n                      <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                          <InputGroup.Text>\r\n                            <FaPen />\r\n                          </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          rows={3}\r\n                          name=\"description\"\r\n                          value={values.description}\r\n                          placeholder=\"Description\"\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          className={touched.description && errors.description ? \"error\" : null} />\r\n                      </InputGroup>\r\n                      {touched.description && errors.description ? (\r\n                        <div className=\"error-message\">{errors.description}</div>\r\n                      ) : null}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formPhone\">\r\n                      <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                          <InputGroup.Text>\r\n                            <FaPhone />\r\n                          </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control type=\"text\"\r\n                          value={values.phone}\r\n                          placeholder=\"Phone Number\"\r\n                          name=\"phone\"\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          className={touched.phone && errors.phone ? \"error\" : null} />\r\n                      </InputGroup>\r\n                      {touched.phone && errors.phone ? (\r\n                        <div className=\"error-message\">{errors.phone}</div>\r\n                      ) : null}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formStreet\">\r\n                      <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                          <InputGroup.Text>\r\n                            <FaRoad />\r\n                          </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control type=\"text\"\r\n                          value={values.street}\r\n                          placeholder=\"Street\"\r\n                          name=\"street\"\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          className={touched.street && errors.street ? \"error\" : null} />\r\n                      </InputGroup>\r\n                      {touched.street && errors.street ? (\r\n                        <div className=\"error-message\">{errors.street}</div>\r\n                      ) : null}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formCity\">\r\n                      <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                          <InputGroup.Text>\r\n                            <FaBuilding />\r\n                          </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control type=\"text\"\r\n                          value={values.city}\r\n                          placeholder=\"City\"\r\n                          name=\"city\"\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          className={touched.city && errors.city ? \"error\" : null} />\r\n                      </InputGroup>\r\n                      {touched.city && errors.city ? (\r\n                        <div className=\"error-message\">{errors.city}</div>\r\n                      ) : null}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formState\">\r\n                      <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                          <InputGroup.Text>\r\n                            <FaUniversity />\r\n                          </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control\r\n                          value={values.state}\r\n                          placeholder=\"State\"\r\n                          name=\"state\"\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          className={touched.state && errors.state ? \"error\" : null} />\r\n                      </InputGroup>\r\n                      {touched.state && errors.state ? (\r\n                        <div className=\"error-message\">{errors.state}</div>\r\n                      ) : null}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formZipcode\">\r\n                      <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                          <InputGroup.Text>\r\n                            <FaGlobe />\r\n                          </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control\r\n                          value={values.zipcode}\r\n                          placeholder=\"Zipcode\"\r\n                          name=\"zipcode\"\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          className={touched.zipcode && errors.zipcode ? \"error\" : null} />\r\n                      </InputGroup>\r\n                      {touched.zipcode && errors.zipcode ? (\r\n                        <div className=\"error-message\">{errors.zipcode}</div>\r\n                      ) : null}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formCategory\">\r\n                      <Select\r\n                        value={values.category}\r\n                        onChange={option => setFieldValue(\"category\", option)}\r\n                        name=\"category\"\r\n                        options={this.options}\r\n                        isMulti={true}\r\n                        placeholder={\"Category\"}\r\n                        className={touched.category && errors.category ? \"error\" : null}\r\n                      />\r\n                      {touched.category && errors.category ? (\r\n                        <div className=\"error-message\">{errors.category}</div>\r\n                      ) : null}\r\n                    </Form.Group>\r\n\r\n                    <h4>Store Hours</h4>\r\n\r\n                    <Form.Group controlId=\"formHoursMonday\">\r\n                      <h5 className=\"text-left\">Monday</h5>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" value={this.state.storeHours[0].open_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <option value={0}>{this.convertMinsToHrsMins(0)}</option>\r\n                            <option value={60}>{this.convertMinsToHrsMins(60)}</option>\r\n                            <option value={120}>{this.convertMinsToHrsMins(120)}</option>\r\n                            <option value={180}>{this.convertMinsToHrsMins(180)}</option>\r\n                            <option value={240}>{this.convertMinsToHrsMins(240)}</option>\r\n                            <option value={300}>{this.convertMinsToHrsMins(300)}</option>\r\n                            <option value={360}>{this.convertMinsToHrsMins(360)}</option>\r\n                            <option value={420}>{this.convertMinsToHrsMins(420)}</option>\r\n                            <option value={480}>{this.convertMinsToHrsMins(480)}</option>\r\n                            <option value={540}>{this.convertMinsToHrsMins(540)}</option>\r\n                            <option value={600}>{this.convertMinsToHrsMins(600)}</option>\r\n                            <option value={660}>{this.convertMinsToHrsMins(660)}</option>\r\n                            <option value={720}>{this.convertMinsToHrsMins(720)}</option>\r\n                            <option value={780}>{this.convertMinsToHrsMins(780)}</option>\r\n                            <option value={840}>{this.convertMinsToHrsMins(840)}</option>\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" value={this.state.storeHours[0].close_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <option value={900}>{this.convertMinsToHrsMins(900)}</option>\r\n                            <option value={960}>{this.convertMinsToHrsMins(960)}</option>\r\n                            <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\r\n                            <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\r\n                            <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\r\n                            <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\r\n                            <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\r\n                            <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\r\n                            <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\r\n                            <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formHoursTuesday\">\r\n                      <h5 className=\"text-left\">Tuesday</h5>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" value={this.state.storeHours[1].open_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <option value={0}>{this.convertMinsToHrsMins(0)}</option>\r\n                            <option value={60}>{this.convertMinsToHrsMins(60)}</option>\r\n                            <option value={120}>{this.convertMinsToHrsMins(120)}</option>\r\n                            <option value={180}>{this.convertMinsToHrsMins(180)}</option>\r\n                            <option value={240}>{this.convertMinsToHrsMins(240)}</option>\r\n                            <option value={300}>{this.convertMinsToHrsMins(300)}</option>\r\n                            <option value={360}>{this.convertMinsToHrsMins(360)}</option>\r\n                            <option value={420}>{this.convertMinsToHrsMins(420)}</option>\r\n                            <option value={480}>{this.convertMinsToHrsMins(480)}</option>\r\n                            <option value={540}>{this.convertMinsToHrsMins(540)}</option>\r\n                            <option value={600}>{this.convertMinsToHrsMins(600)}</option>\r\n                            <option value={660}>{this.convertMinsToHrsMins(660)}</option>\r\n                            <option value={720}>{this.convertMinsToHrsMins(720)}</option>\r\n                            <option value={780}>{this.convertMinsToHrsMins(780)}</option>\r\n                            <option value={840}>{this.convertMinsToHrsMins(840)}</option>\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" value={this.state.storeHours[1].close_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <option value={900}>{this.convertMinsToHrsMins(900)}</option>\r\n                            <option value={960}>{this.convertMinsToHrsMins(960)}</option>\r\n                            <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\r\n                            <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\r\n                            <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\r\n                            <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\r\n                            <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\r\n                            <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\r\n                            <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\r\n                            <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group controlId=\"formHoursWednesday\">\r\n                      <h5 className=\"text-left\">Wednesday</h5>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" value={this.state.storeHours[2].open_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <option value={0}>{this.convertMinsToHrsMins(0)}</option>\r\n                            <option value={60}>{this.convertMinsToHrsMins(60)}</option>\r\n                            <option value={120}>{this.convertMinsToHrsMins(120)}</option>\r\n                            <option value={180}>{this.convertMinsToHrsMins(180)}</option>\r\n                            <option value={240}>{this.convertMinsToHrsMins(240)}</option>\r\n                            <option value={300}>{this.convertMinsToHrsMins(300)}</option>\r\n                            <option value={360}>{this.convertMinsToHrsMins(360)}</option>\r\n                            <option value={420}>{this.convertMinsToHrsMins(420)}</option>\r\n                            <option value={480}>{this.convertMinsToHrsMins(480)}</option>\r\n                            <option value={540}>{this.convertMinsToHrsMins(540)}</option>\r\n                            <option value={600}>{this.convertMinsToHrsMins(600)}</option>\r\n                            <option value={660}>{this.convertMinsToHrsMins(660)}</option>\r\n                            <option value={720}>{this.convertMinsToHrsMins(720)}</option>\r\n                            <option value={780}>{this.convertMinsToHrsMins(780)}</option>\r\n                            <option value={840}>{this.convertMinsToHrsMins(840)}</option>\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" value={this.state.storeHours[2].close_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <option value={900}>{this.convertMinsToHrsMins(900)}</option>\r\n                            <option value={960}>{this.convertMinsToHrsMins(960)}</option>\r\n                            <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\r\n                            <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\r\n                            <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\r\n                            <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\r\n                            <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\r\n                            <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\r\n                            <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\r\n                            <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formHoursThursday\">\r\n                      <h5 className=\"text-left\">Thursday</h5>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" value={this.state.storeHours[3].open_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <option value={0}>{this.convertMinsToHrsMins(0)}</option>\r\n                            <option value={60}>{this.convertMinsToHrsMins(60)}</option>\r\n                            <option value={120}>{this.convertMinsToHrsMins(120)}</option>\r\n                            <option value={180}>{this.convertMinsToHrsMins(180)}</option>\r\n                            <option value={240}>{this.convertMinsToHrsMins(240)}</option>\r\n                            <option value={300}>{this.convertMinsToHrsMins(300)}</option>\r\n                            <option value={360}>{this.convertMinsToHrsMins(360)}</option>\r\n                            <option value={420}>{this.convertMinsToHrsMins(420)}</option>\r\n                            <option value={480}>{this.convertMinsToHrsMins(480)}</option>\r\n                            <option value={540}>{this.convertMinsToHrsMins(540)}</option>\r\n                            <option value={600}>{this.convertMinsToHrsMins(600)}</option>\r\n                            <option value={660}>{this.convertMinsToHrsMins(660)}</option>\r\n                            <option value={720}>{this.convertMinsToHrsMins(720)}</option>\r\n                            <option value={780}>{this.convertMinsToHrsMins(780)}</option>\r\n                            <option value={840}>{this.convertMinsToHrsMins(840)}</option>\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" value={this.state.storeHours[3].close_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <option value={900}>{this.convertMinsToHrsMins(900)}</option>\r\n                            <option value={960}>{this.convertMinsToHrsMins(960)}</option>\r\n                            <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\r\n                            <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\r\n                            <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\r\n                            <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\r\n                            <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\r\n                            <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\r\n                            <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\r\n                            <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group controlId=\"formHoursFriday\">\r\n                      <h5 className=\"text-left\">Friday</h5>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" value={this.state.storeHours[4].open_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <option value={0}>{this.convertMinsToHrsMins(0)}</option>\r\n                            <option value={60}>{this.convertMinsToHrsMins(60)}</option>\r\n                            <option value={120}>{this.convertMinsToHrsMins(120)}</option>\r\n                            <option value={180}>{this.convertMinsToHrsMins(180)}</option>\r\n                            <option value={240}>{this.convertMinsToHrsMins(240)}</option>\r\n                            <option value={300}>{this.convertMinsToHrsMins(300)}</option>\r\n                            <option value={360}>{this.convertMinsToHrsMins(360)}</option>\r\n                            <option value={420}>{this.convertMinsToHrsMins(420)}</option>\r\n                            <option value={480}>{this.convertMinsToHrsMins(480)}</option>\r\n                            <option value={540}>{this.convertMinsToHrsMins(540)}</option>\r\n                            <option value={600}>{this.convertMinsToHrsMins(600)}</option>\r\n                            <option value={660}>{this.convertMinsToHrsMins(660)}</option>\r\n                            <option value={720}>{this.convertMinsToHrsMins(720)}</option>\r\n                            <option value={780}>{this.convertMinsToHrsMins(780)}</option>\r\n                            <option value={840}>{this.convertMinsToHrsMins(840)}</option>\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" value={this.state.storeHours[4].close_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <option value={900}>{this.convertMinsToHrsMins(900)}</option>\r\n                            <option value={960}>{this.convertMinsToHrsMins(960)}</option>\r\n                            <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\r\n                            <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\r\n                            <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\r\n                            <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\r\n                            <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\r\n                            <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\r\n                            <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\r\n                            <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formHoursSaturday\">\r\n                      <h5 className=\"text-left\">Saturday</h5>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" value={this.state.storeHours[5].open_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <option value={0}>{this.convertMinsToHrsMins(0)}</option>\r\n                            <option value={60}>{this.convertMinsToHrsMins(60)}</option>\r\n                            <option value={120}>{this.convertMinsToHrsMins(120)}</option>\r\n                            <option value={180}>{this.convertMinsToHrsMins(180)}</option>\r\n                            <option value={240}>{this.convertMinsToHrsMins(240)}</option>\r\n                            <option value={300}>{this.convertMinsToHrsMins(300)}</option>\r\n                            <option value={360}>{this.convertMinsToHrsMins(360)}</option>\r\n                            <option value={420}>{this.convertMinsToHrsMins(420)}</option>\r\n                            <option value={480}>{this.convertMinsToHrsMins(480)}</option>\r\n                            <option value={540}>{this.convertMinsToHrsMins(540)}</option>\r\n                            <option value={600}>{this.convertMinsToHrsMins(600)}</option>\r\n                            <option value={660}>{this.convertMinsToHrsMins(660)}</option>\r\n                            <option value={720}>{this.convertMinsToHrsMins(720)}</option>\r\n                            <option value={780}>{this.convertMinsToHrsMins(780)}</option>\r\n                            <option value={840}>{this.convertMinsToHrsMins(840)}</option>\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" value={this.state.storeHours[5].close_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <option value={900}>{this.convertMinsToHrsMins(900)}</option>\r\n                            <option value={960}>{this.convertMinsToHrsMins(960)}</option>\r\n                            <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\r\n                            <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\r\n                            <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\r\n                            <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\r\n                            <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\r\n                            <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\r\n                            <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\r\n                            <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group controlId=\"formHoursSunday\">\r\n                      <h5 className=\"text-left\">Sunday</h5>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" value={this.state.storeHours[6].open_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <option value={0}>{this.convertMinsToHrsMins(0)}</option>\r\n                            <option value={60}>{this.convertMinsToHrsMins(60)}</option>\r\n                            <option value={120}>{this.convertMinsToHrsMins(120)}</option>\r\n                            <option value={180}>{this.convertMinsToHrsMins(180)}</option>\r\n                            <option value={240}>{this.convertMinsToHrsMins(240)}</option>\r\n                            <option value={300}>{this.convertMinsToHrsMins(300)}</option>\r\n                            <option value={360}>{this.convertMinsToHrsMins(360)}</option>\r\n                            <option value={420}>{this.convertMinsToHrsMins(420)}</option>\r\n                            <option value={480}>{this.convertMinsToHrsMins(480)}</option>\r\n                            <option value={540}>{this.convertMinsToHrsMins(540)}</option>\r\n                            <option value={600}>{this.convertMinsToHrsMins(600)}</option>\r\n                            <option value={660}>{this.convertMinsToHrsMins(660)}</option>\r\n                            <option value={720}>{this.convertMinsToHrsMins(720)}</option>\r\n                            <option value={780}>{this.convertMinsToHrsMins(780)}</option>\r\n                            <option value={840}>{this.convertMinsToHrsMins(840)}</option>\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" value={this.state.storeHours[6].close_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <option value={900}>{this.convertMinsToHrsMins(900)}</option>\r\n                            <option value={960}>{this.convertMinsToHrsMins(960)}</option>\r\n                            <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\r\n                            <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\r\n                            <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\r\n                            <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\r\n                            <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\r\n                            <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\r\n                            <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\r\n                            <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formPictures\">\r\n                      <input\r\n                        onChange={this.fileChangedHandler}\r\n                        type=\"file\"\r\n                        multiple\r\n                        className={touched.pictures && errors.pictures ? \"error\" : null}\r\n                      />\r\n                      {touched.pictures && errors.pictures ? (\r\n                        <div className=\"error-message\">{errors.pictures}</div>\r\n                      ) : null}\r\n                    </Form.Group>\r\n\r\n                    <Button onClick={handleSubmit}>Submit</Button>\r\n                  </Form>\r\n                )}\r\n            </Formik>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n  updateRole: (role) => updateRole(role),\r\n  addStore: (store) => addStore(store),\r\n}, dispatch)\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(StoreSignupForm);\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport './CalendarPage.css';\r\nimport {  Resources, ConfirmationDialog, Scheduler, AppointmentForm, AppointmentTooltip, DateNavigator,TodayButton, DayView, WeekView, MonthView, Appointments, ViewSwitcher, Toolbar,  DragDropProvider} from '@devexpress/dx-react-scheduler-material-ui';\r\nimport { ViewState, EditingState, IntegratedEditing } from '@devexpress/dx-react-scheduler';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\nimport { FiSearch} from 'react-icons/fi';\r\nimport { withRouter } from \"react-router\"\r\n\r\nconst today = new Date();\r\n\r\n//new Date(2018, 6, 1, 10, 0) start and end dates\r\n\r\nconst isWeekEnd = (date: Date): boolean => date.getDay() === 0 || date.getDay() === 6;\r\n\r\n\r\n\r\nconst Root = ({\r\n  children, style, ...restProps\r\n}) => (\r\n  <div\r\n    {...restProps}\r\n    style={{\r\n      ...style,\r\n      width: '1000px',\r\n    }}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\n\r\nconst DayScaleCell = ({\r\n  startDate, classes, ...restProps\r\n}: DayScaleCellProps) => (\r\n  <MonthView.DayScaleCell\r\n    // className={classNames({\r\n    //   [classes.weekEndDayScaleCell]: isWeekEnd(startDate),\r\n    // })}\r\n    className={isWeekEnd(startDate) ? 'weekend' : null}\r\n\r\n    // style={isWeekEnd(startDate) ? 'background-color: grey' : 'background-color: white'}\r\n    startDate={startDate}\r\n    {...restProps}\r\n  />\r\n);\r\n\r\nconst TimeTableCell = (\r\n  { startDate, classes, ...restProps }: TimeTableCellProps,\r\n) => (\r\n  <MonthView.TimeTableCell\r\n    className={isWeekEnd(startDate) ? 'weekend' : null}\r\n\r\n    startDate={startDate}\r\n    {...restProps}\r\n  />\r\n);\r\nconst recurringIcon = () => <div />\r\n\r\nconst BasicLayout = ({ appointmentData, onFieldChange,\r\n   ...restProps }) => {\r\n\r\n   const onCustomFieldChange = (nextValue) => {\r\n     onFieldChange({ price: nextValue });\r\n   };\r\n\r\n  return (\r\n    <AppointmentForm.BasicLayout\r\n      onFieldChange={onFieldChange}\r\n      appointmentData={appointmentData}\r\n      {...restProps}\r\n    >\r\n\r\n    <AppointmentForm.Label\r\n       text=\"Price\"\r\n       type=\"title\"\r\n     />\r\n     <Row className=\"justify-content-center\">\r\n     <AppointmentForm.TextEditor\r\n      style={{width: '50%'}}\r\n       value={appointmentData.price}\r\n       onValueChange={onCustomFieldChange}\r\n       placeholder=\"Price\"\r\n     />\r\n     <AppointmentForm.Label\r\n        style={{marginTop: 15, marginLeft: 10, fontSize: 20}}\r\n        text=\"$\"\r\n        type=\"text\"\r\n      />\r\n      </Row>\r\n    </AppointmentForm.BasicLayout>\r\n  );\r\n};\r\n\r\nconst messages = {\r\n  allDayLabel : '',\r\n  repeatLabel : ''\r\n}\r\n\r\nconst BooleanEditor = ({\r\n...restProps }) => {\r\n  // eslint-disable-next-line react/destructuring-assignment\r\n  // console.log(restProps);\r\n\r\nreturn null;\r\n  // if (restProps.type === 'endRepeat') {\r\n  //   console.log(\"BO\");\r\n  //   return null;\r\n  //\r\n  // } else {console.log(\"HELO\"); return <AppointmentForm.WeeklyRecurrenceSelectorComponent readOnly={true} {...restProps} />};\r\n};\r\n\r\nconst ResourceSwitcher = ({ styles,\r\n    mainResourceName, onChange, classes, resources,\r\n  }) => (\r\n    <div >\r\n      <Row className=\"justify-content-center text-xs-center text-sm-left pl-2\">\r\n      <p style={{fontSize: 20, marginRight:10, marginTop:2}}>\r\n        Filter By:\r\n      </p>\r\n      <Select\r\n        value={mainResourceName}\r\n        onChange={e => onChange(e.target.value)}\r\n        style={{paddingLeft: 60, height: 35}}\r\n      >\r\n        {resources.map(resource => (\r\n          <MenuItem key={resource.fieldName} value={resource.fieldName}>\r\n            {resource.title}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n      </Row>\r\n    </div>\r\n\r\n  );\r\n\r\n\r\nconst RecurrenceLayout = ({\r\n  appointmentData,\r\n  visible,\r\n  ...restProps }) => {\r\n\r\n  return  (\r\n    <AppointmentForm.RecurrenceLayout\r\n      appointmentData={appointmentData}\r\n      visible={false}\r\n      {...restProps}\r\n    >\r\n\r\n    </AppointmentForm.RecurrenceLayout>\r\n  );\r\n\r\n};\r\n\r\nconst Appointment = ({\r\n  children, style,\r\n  ...restProps\r\n}) => {\r\n  // console.log(restProps);\r\n  return (\r\n    <Appointments.Appointment\r\n      {...restProps}\r\n      style={{\r\n        ...style,\r\n        backgroundColor: '#597096',\r\n        borderRadius: '5px',\r\n\r\n      }}\r\n\r\n    >\r\n      {children}\r\n    </Appointments.Appointment>\r\n  );\r\n}\r\n\r\nclass Calendar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n       this.state = {\r\n         services: [],\r\n         workers: [],\r\n         worker_map: {},\r\n         service_map: {},\r\n         selectedWorkers: [],\r\n         selectedServices: [],\r\n         selectedAppointments: [\r\n           // { id: '0', startDate: '2020-04-19 15:00', endDate: '2020-04-19 16:00', title: 'Manicure', workers: [2],\r\n           // services: [2], price: 50},\r\n           // { id: '1', startDate: '2020-04-21 09:00', endDate: '2020-04-21 11:00', title: 'Hair Blowout', workers: [0, 1],\r\n           // services: [1], price: 20},\r\n         ],\r\n         appointments: [\r\n           // { id: '0', startDate: '2020-04-19 15:00', endDate: '2020-04-19 16:00', title: 'Manicure', workers: [2],\r\n           // services: [2], price: 50},\r\n           // { id: '1', startDate: '2020-04-21 09:00', endDate: '2020-04-21 11:00', title: 'Hair Blowout', workers: [0, 1],\r\n           //  services: [1], price: 20},\r\n         ],\r\n         mainResourceName: 'workers',\r\n          resources: [\r\n            {\r\n              fieldName: 'services',\r\n              title: 'Services',\r\n              allowMultiple: true,\r\n              instances: [\r\n                // { id: 1, text: 'Haircut' },\r\n                // { id: 2, text: 'Manicure' },\r\n\r\n              ],\r\n            },\r\n            {\r\n              fieldName: 'workers',\r\n              title: 'Workers',\r\n              allowMultiple: true,\r\n              instances: [\r\n                // { id: 0, text: 'Artin Kasumyan' },\r\n                // { id: 1, text: 'Arthur Kasumyan' },\r\n                // { id: 2, text: 'Roula Sharqawe' },\r\n                // { id: 3, text: 'George Clooney' },\r\n                // { id: 4, text: 'Johnny Depp' },\r\n              ],\r\n            },\r\n          ],\r\n         currentDate: today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate()\r\n       }\r\n       this.commitChanges = this.commitChanges.bind(this);\r\n       this.changeMainResource = this.changeMainResource.bind(this);\r\n       this.onSelectWorker = this.onSelectWorker.bind(this);\r\n       this.onRemoveWorker = this.onRemoveWorker.bind(this);\r\n       this.onSelectService = this.onSelectService.bind(this);\r\n       this.onRemoveService = this.onRemoveService.bind(this);\r\n       this.onSearch = this.onSearch.bind(this);\r\n  }\r\n\r\n    getAppointments = () => {\r\n\r\n        fetch('http://localhost:8081/stores/' + this.props.match.params.store_id + '/appointments' , {\r\n          method: \"GET\",\r\n          headers: {\r\n            'Content-type': 'application/json'\r\n          },\r\n          credentials: 'include'\r\n        }).then(value => value.json())\r\n        .then(data => {\r\n\r\n          let appointments = []\r\n\r\n          data.map((appointment, indx) => {\r\n\r\n              let date = new Date(appointment.date);\r\n              let startDate = new Date(date.getFullYear(), date.getMonth(), date.getDate(), appointment.start_time, 0);\r\n              let endDate = new Date(date.getFullYear(), date.getMonth(), date.getDate(), appointment.end_time, 0);\r\n\r\n              console.log(startDate)\r\n\r\n              appointments.push({\r\n                id: indx,\r\n                title: appointment.title,\r\n                workers: [this.state.worker_map[appointment.worker_id]],\r\n                services: [this.state.service_map[appointment.service_id]],\r\n                price: appointment.price,\r\n                startDate: startDate,\r\n                endDate: endDate\r\n              })\r\n\r\n              this.setState({\r\n                appointments: appointments,\r\n                selectedAppointments: appointments\r\n\r\n              })\r\n\r\n            })\r\n        })\r\n    }\r\n\r\n    async componentDidMount() {\r\n      let store_id = this.props.match.params.store_id\r\n      let workers = []\r\n      let services = []\r\n      let new_workers = []\r\n      let new_services = []\r\n\r\n      //fetching  workers and services\r\n      if(this.props.location.state && this.props.location.state.services) {\r\n        let service_map = {}\r\n        let service_instances = []\r\n\r\n        this.props.location.state.services.map((service, indx) => {\r\n          service_instances.push({id: indx, text: service.name})\r\n          service_map[service.id] = service.name\r\n        })\r\n\r\n        this.setState({\r\n          services: this.props.location.state.store.services,\r\n          service_map: service_map\r\n        })\r\n      }\r\n      else {\r\n\r\n          await fetch('http://localhost:8081/stores/' + store_id + \"/services\", {\r\n          method: \"GET\",\r\n          headers: {\r\n            'Content-type': 'application/json'\r\n          },\r\n          credentials: 'include'\r\n        }).then(function (response) {\r\n            if (response.status !== 200) {\r\n              // throw an error alert\r\n              console.log(\"error\")\r\n            }\r\n            else {\r\n              return response.json();\r\n            }\r\n          })\r\n          .then(async data => {\r\n            if (data) {\r\n              services = data;\r\n              let service_instances = []\r\n              let service_map = {}\r\n              console.log(\"here!!\", services);\r\n\r\n              services.map((service, indx) => {\r\n                    service_instances.push({id: indx, text: service.name})\r\n                    service_map[service.id] = service.name\r\n              })\r\n\r\n              this.setState({\r\n                  services: services,\r\n                  service_map: service_map\r\n              })\r\n\r\n              // return new_services;\r\n            }\r\n          });\r\n\r\n      }\r\n\r\n      if(this.props.location.state && this.props.location.state.workers){\r\n        let worker_instances = []\r\n        let worker_map = {}\r\n        this.props.location.state.workers.map((worker, indx) => {\r\n            worker_instances.push({id: indx, text: worker.first_name + ' ' + worker.last_name})\r\n            worker_map[worker.id] = worker.first_name + ' ' + worker.last_name\r\n        })\r\n        this.setState({\r\n          workers: worker_instances,\r\n          worker_map: worker_map\r\n        })\r\n      } \r\n      else{\r\n\r\n\r\n        await fetch('http://localhost:8081/stores/' + store_id + '/workers_list', {\r\n          method: \"GET\",\r\n          headers: {\r\n            'Content-type': 'application/json'\r\n          },\r\n          credentials: 'include'\r\n        }).then(function (response) {\r\n            if (response.status !== 200) {\r\n              // throw an error alert\r\n              console.log(\"error\")\r\n            }\r\n            else {\r\n              return response.json();\r\n            }\r\n          })\r\n          .then(async data => {\r\n            if (data) {\r\n              workers = data;\r\n              console.log(\"here\", workers);\r\n              let worker_instances = []\r\n              let worker_map = {}\r\n              workers.map((worker, indx) => {\r\n                  worker_instances.push({id: indx, text: worker.first_name + ' ' + worker.last_name})\r\n                  worker_map[worker.id] = worker.first_name + ' ' + worker.last_name\r\n              })\r\n              this.setState({\r\n                workers: worker_instances,\r\n                worker_map: worker_map\r\n              })\r\n            }\r\n          });\r\n\r\n      }\r\n\r\n      new_services = this.state.resources[0]\r\n      new_services.instances = this.state.services;\r\n      new_workers = this.state.resources[1]\r\n      new_workers.instances = this.state.workers;\r\n\r\n      this.setState({\r\n        resources: [new_services, new_workers]\r\n      })\r\n\r\n      this.getAppointments();\r\n\r\n    }\r\n\r\n  changeMainResource(mainResourceName) {\r\n    this.setState({ mainResourceName });\r\n  }\r\n\r\n  onSelectWorker(selectedList, selectedItem) {\r\n    // console.log(selectedList, selectedItem)\r\n    this.setState({ selectedWorkers: selectedList });\r\n  }\r\n\r\n  onRemoveWorker(selectedList, removedItem) {\r\n    // console.log(\"remove\", selectedList, removedItem);\r\n    this.setState({ selectedWorkers: selectedList });\r\n  }\r\n\r\n  onSelectService(selectedList, selectedItem) {\r\n    this.setState({ selectedServices: selectedList });\r\n  }\r\n\r\n  onRemoveService(selectedList, removedItem) {\r\n    this.setState({ selectedServices: selectedList });\r\n  }\r\n\r\n  onSearch() {\r\n\r\n    let includeWorker;\r\n    let includeService;\r\n    let newSelected = [];\r\n\r\n    this.state.appointments.map(appointment => {\r\n      includeWorker = (this.state.selectedWorkers.length==0) ? true : false;\r\n      includeService= (this.state.selectedServices.length==0) ? true : false;\r\n\r\n      this.state.selectedWorkers.map(worker => {\r\n\r\n        if(appointment.workers.includes(worker.id)) {\r\n          includeWorker = true;\r\n        }\r\n      })\r\n      this.state.selectedServices.map(service => {\r\n\r\n        if(appointment.services.includes(service.id)) {\r\n          includeService = true;\r\n        }\r\n      })\r\n\r\n      if(includeService && includeWorker) {\r\n        newSelected.push(appointment);\r\n      }\r\n    })\r\n    this.setState({ selectedAppointments: newSelected });\r\n  }\r\n\r\n\r\n  commitChanges({ added, changed, deleted }) {\r\n    this.setState((state) => {\r\n      let { selectedAppointments } = state;\r\n      let appointments = selectedAppointments;\r\n      if (added) {\r\n        const startingAddedId = appointments.length > 0 ? appointments[appointments.length - 1].id + 1 : 0;\r\n        appointments = [...appointments, { id: startingAddedId, ...added }];\r\n      }\r\n      if (changed) {\r\n        appointments = appointments.map(appointment => (\r\n          changed[appointment.id] ? { ...appointment, ...changed[appointment.id] } : appointment));\r\n      }\r\n      if (deleted !== undefined) {\r\n        appointments = appointments.filter(appointment => appointment.id !== deleted);\r\n      }\r\n      return { appointments };\r\n    });\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    console.log(this.state.selectedAppointments);\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"justify-content-center\">\r\n          <Col>\r\n            <p className=\"title\"> Manage Your Appointments </p>\r\n            <Row style={{marginBottom: 50, marginLeft: '22%', position: 'relative'}}>\r\n            <Multiselect\r\n              // isObject={false}\r\n              options={this.state.resources[0][\"instances\"]}\r\n              // selectedValues={this.state.selected}\r\n              onSelect={this.onSelectService}\r\n              onRemove={this.onRemoveService}\r\n              placeholder=\"Service\"\r\n              closeIcon=\"cancel\"\r\n              displayValue=\"text\"\r\n              style={{multiselectContainer: {marginLeft: '2%', width: '35%'},  groupHeading:{width: 50, maxWidth: 50}, chips: { background: \"#587096\", height: 35 }, inputField: {color: 'black'}, searchBox: { minWidth: 250, width: '100%', height: '30', backgroundColor: 'white', borderRadius: \"5px\" }} }\r\n              />\r\n            <Multiselect\r\n                // isObject={false}\r\n                options={this.state.resources[1][\"instances\"]}\r\n                // selectedValues={this.state.selected}\r\n                onSelect={this.onSelectWorker}\r\n                onRemove={this.onRemoveWorker}\r\n                placeholder=\"Workers\"\r\n                closeIcon=\"cancel\"\r\n                displayValue=\"text\"\r\n                style={{multiselectContainer: {marginLeft: '2%', width: '35%'},  optionContainer:{ zIndex: 10000000}, chips: { background: \"#587096\", height: 35 }, inputField: {color: 'black'}, searchBox: { minWidth: 250, width: '100%', height: '30', backgroundColor: 'white', borderRadius: \"5px\" }} }\r\n              />\r\n              <FiSearch onClick={this.onSearch} size={35} style={{cursor: \"pointer\", marginLeft: 10, paddingRight:\"10px\"}}/>\r\n            </Row>\r\n\r\n           <Paper className=\"react-calendar\">\r\n          <Scheduler\r\n            data={this.state.selectedAppointments}\r\n\r\n          >\r\n          <ViewState\r\n            defaultCurrentDate={this.state.currentDate}\r\n\r\n          />\r\n          <EditingState\r\n           onCommitChanges={this.commitChanges}\r\n         />\r\n         <IntegratedEditing />\r\n\r\n            <WeekView\r\n             startDayHour={8}\r\n             endDayHour={24}\r\n             cellDuration={60}\r\n           />\r\n           <MonthView\r\n             dayScaleCellComponent={DayScaleCell}\r\n             timeTableCellComponent={TimeTableCell}\r\n          />\r\n          <DayView\r\n            startDayHour={8}\r\n            endDayHour={24}\r\n            cellDuration={60}\r\n          />\r\n\r\n            <Toolbar />\r\n            <ViewSwitcher />\r\n            <DateNavigator/>\r\n            <TodayButton />\r\n            <ConfirmationDialog />\r\n            <Appointments\r\n            appointmentComponent={Appointment}/>\r\n            <AppointmentTooltip\r\n            showCloseButton\r\n            showOpenButton/>\r\n            <AppointmentForm\r\n            isRecurrence={false}\r\n            basicLayoutComponent={BasicLayout}\r\n            recurrenceLayoutComponent={RecurrenceLayout}\r\n            // textEditorComponent={TextEditor}\r\n            messages={messages}\r\n            booleanEditorComponent={BooleanEditor}\r\n            />\r\n            <Resources\r\n              data={this.state.resources}\r\n              // mainResourceName={this.state.mainResourceName}\r\n              />\r\n            <DragDropProvider/>\r\n          </Scheduler>\r\n          </Paper>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Calendar);\r\n\r\n// <ResourceSwitcher\r\n//  resources={this.state.resources}\r\n//  mainResourceName={this.state.mainResourceName}\r\n//  onChange={this.changeMainResource}\r\n// />\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport LargeCarousel from '../LargeCarousel';\r\nimport { Button } from 'react-bootstrap';\r\nimport Cookies from 'js-cookie';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  addAlert\r\n} from '../../reduxFolder/actions/alert'\r\nimport store from '../../reduxFolder/store';\r\nimport './StoreDisplay.css'\r\n// import { getPictures } from '../s3'\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nclass StoreDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n      store: {\r\n        id: \"\",\r\n        name: \"\",\r\n        street: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        zipcode: \"\",\r\n        created_at: \"\",\r\n        category: [],\r\n        services: [],\r\n        workers: [],\r\n        owners: [],\r\n        phone: \"\",\r\n        clients: [],\r\n        description: \"\",\r\n        lat: \"\",\r\n        lng: \"\"\r\n      },\r\n      pictures: []\r\n    }\r\n  }\r\n\r\n  triggerStoreEdit() {\r\n    this.props.history.push({\r\n      pathname: '/stores/edit/' + this.props.match.params.store_id,\r\n      state: this.state\r\n    })\r\n  }\r\n\r\n  triggerBook() {\r\n    this.props.history.push({\r\n      pathname: '/book/' + this.props.match.params.store_id,\r\n      state: this.state\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    // if we were passed the store data from calling component\r\n    if(this.props.location.state && this.props.location.state.store){\r\n      let convertedCategory = this.props.location.state.store.category.map((str) => ({ value: str.toLowerCase(), label: str }));\r\n      this.setState({\r\n        store: this.props.location.state.store,\r\n        selectedOption: convertedCategory\r\n      })\r\n    }\r\n    else{\r\n      // retrieve the store data from the database\r\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id , {\r\n        method: \"GET\",\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      })\r\n      .then(function(response){\r\n        if(response.status!==200){\r\n          // throw an error alert\r\n          store.dispatch(addAlert(response))\r\n        }\r\n        else{\r\n          return response.json();\r\n        }\r\n      })\r\n      .then(data => {\r\n        if(data){\r\n          let convertedCategory = data.category.map((str) => ({ value: str.toLowerCase(), label: str }));\r\n          this.setState({\r\n            store: data,\r\n            selectedOption: convertedCategory\r\n          })\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.store !== this.state.store) {\r\n      // let picturesFetched = await getPictures('stores/' + this.state.store.id + '/images/')\r\n      // this.setState({\r\n      //   pictures: picturesFetched\r\n      // })\r\n      \r\n      // can put this for now so we don't have to upload to s3\r\n      this.setState({\r\n        pictures: [\r\n          { \r\n            url: \"/hair.jpg\",\r\n            key: \"/hair.jpg\"\r\n          },\r\n          {\r\n            url: \"/nails.jpg\",\r\n            key: \"/nails.jpg\"\r\n          },\r\n          {\r\n            url: \"/salon.jpg\",\r\n            key: \"/salon.jpg\"\r\n          }\r\n        ]\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let editButton;\r\n    if(Cookies.get('user') && this.state.store.owners.indexOf(JSON.parse(Cookies.get('user').substring(2)).id) > -1){\r\n      editButton = <Button className=\"float-left\" onClick={() =>  this.triggerStoreEdit()}>Edit Store</Button>\r\n    }\r\n\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"justify-content-md-center\" style={{ marginTop: '15px', marginBottom: '15px'}}>\r\n          <Col lg={3}>\r\n            <h1>{this.state.store.name}</h1>\r\n            <h5 style={{color: \"gray\"}}>{this.state.store.street}, {this.state.store.city}, {this.state.store.state}, {this.state.store.zipcode}</h5>\r\n            <hr/>\r\n            <p style={{fontSize: \"25px\"}}>{this.state.store.description}</p>\r\n            <ul>\r\n              {this.state.store.category.map((cat, index) => (\r\n                <li key={\"cat-\" + index}>{cat}</li>\r\n              ))}\r\n            </ul>\r\n            <div id=\"buttonGroup\">\r\n              {editButton}\r\n              <Button className=\"float-left\" onClick={() =>  this.triggerBook()}>Book Now</Button>\r\n            </div>\r\n          </Col>\r\n          <Col xs={10} sm={9} md={8} lg={7}>\r\n            <LargeCarousel className=\"carousel\" pictures={this.state.pictures}/>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          {/* <WorkerDisplay/> */}\r\n        </Row>\r\n        <Row>\r\n          {/* <ServiceDisplay/> */}\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(StoreDisplay);","import React from 'react';\r\nimport '../../App.css';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport GridLoader from 'react-spinners/GridLoader'\r\nimport { FaShoppingCart, FaRoad, FaBuilding, FaUniversity, FaGlobe, FaPen, FaPhone } from 'react-icons/fa';\r\nimport { Formik } from 'formik';\r\nimport { css } from '@emotion/core'\r\nimport * as Yup from 'yup';\r\nimport Select from 'react-select';\r\nimport {\r\n  addAlert\r\n} from '../../reduxFolder/actions/alert'\r\nimport store from '../../reduxFolder/store';\r\nimport { getPictures, deleteHandler, uploadHandler } from '../s3'\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n\r\nclass StoreEditForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      store: {\r\n        // pictures: [],\r\n        name: \"\",\r\n        description: \"\",\r\n        phone: \"\",\r\n        id: \"\",\r\n        street: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        zipcode: \"\",\r\n        category: []\r\n      },\r\n      storeHours: [],\r\n      newHours: [],\r\n      selectedOption: null,\r\n      loading: true,\r\n      pictures: [],\r\n      selectedFiles: [],\r\n      keys: []\r\n    };\r\n\r\n    // options for the categories field\r\n    this.options = [\r\n      { value: 'nails', label: 'Nails' },\r\n      { value: 'hair', label: 'Hair' },\r\n    ];\r\n\r\n    // RegEx for phone number validation\r\n    this.phoneRegExp = /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/\r\n\r\n    // Schema for yup\r\n    this.yupValidationSchema = Yup.object().shape({\r\n      name: Yup.string()\r\n        .min(2, \"Store name must have at least 2 characters\")\r\n        .max(100, \"Store name can't be longer than 100 characters\")\r\n        .required(\"Name is required\"),\r\n      description: Yup.string()\r\n        .min(20, \"Description must have at least 20 characters\")\r\n        .required(\"Description is required\"), // will make it required soon\r\n      phone: Yup.string()\r\n        .matches(this.phoneRegExp, \"Phone number is not valid\")\r\n        .required(\"Phone number is required\"),\r\n      street: Yup.string()\r\n        .min(6, \"Street must have at least 6 characters\")\r\n        .max(100, \"Street can't be longer than 100 characters\")\r\n        .required(\"Street is required\"),\r\n      city: Yup.string()\r\n        .min(2, \"City must have at least 2 characters\")\r\n        .max(40, \"City can't be longer than 40 characters\")\r\n        .required(\"City is required\"),\r\n      state: Yup.string()\r\n        .min(2, \"State must have at least 2 characters\")\r\n        .max(12, \"State can't be longer than 12 characters\")\r\n        .required(\"State is required\"),\r\n      zipcode: Yup.string()\r\n        .max(20, \"Zipcode can't be longer than 100 characters\")\r\n        .required(\"Zipcode is required\"),\r\n      category: Yup.array()\r\n        .required(\"Category is required\")\r\n        .nullable(),\r\n      pictureCount: Yup.number()\r\n        .required(\"Pictures are required\")\r\n        .min(1, \"Must have at least one picture\")\r\n    });\r\n\r\n    this.triggerStoreDisplay = this.triggerStoreDisplay.bind(this);\r\n  }\r\n\r\n  // redirect to the store display page and pass the new store data\r\n  triggerStoreDisplay(returnedStore) {\r\n    this.props.history.push({\r\n      pathname: '/stores/' + this.props.match.params.store_id,\r\n      state: {\r\n        store: returnedStore\r\n      }\r\n    })\r\n  }\r\n\r\n  convertMinsToHrsMins(mins) {\r\n    let h = Math.floor(mins / 60);\r\n    let m = mins % 60;\r\n    let am = false\r\n    if (h == 24) {\r\n      am = true\r\n      h -= 12\r\n    }\r\n    else if (h < 12) {\r\n      am = true\r\n    } else if (h != 12) {\r\n      h -= 12\r\n    }\r\n    h = h < 10 ? '0' + h : h;\r\n    if(h == 0) {\r\n      h = '12'\r\n    }\r\n    m = m < 10 ? '0' + m : m;\r\n    if (am) {\r\n      return `${h}:${m}am`;\r\n    } else {\r\n      return `${h}:${m}pm`;\r\n    }\r\n\r\n  }\r\n\r\n  handleSelectChange = (event) => {\r\n    var days = ['formHoursMonday', 'formHoursTuesday', 'formHoursWednesday', 'formHoursThursday', 'formHoursFriday', 'formHoursSaturday', 'formHoursSunday']\r\n    var day = days.indexOf(event.target.id)\r\n    var updateNewHours = this.state.newHours\r\n    var old_open_time = 0\r\n    var old_close_time = 0\r\n    var newStoreHours = []\r\n    if(this.state.newHours[day]) {\r\n      old_open_time = this.state.newHours[day].open_time\r\n      old_close_time = this.state.newHours[day].close_time\r\n    } else {\r\n      old_open_time = this.state.storeHours[day].open_time\r\n      old_close_time = this.state.storeHours[day].close_time\r\n    }\r\n    if(parseInt(event.target.querySelector('option').value) <= 840) {\r\n      updateNewHours[day] = {open_time: parseInt(event.target.value), close_time: old_close_time}\r\n      newStoreHours = [\r\n        ...this.state.storeHours.slice(0, day),\r\n        {open_time: parseInt(event.target.value), close_time: old_close_time},\r\n        ...this.state.storeHours.slice(day + 1)\r\n      ]\r\n    } else {\r\n      updateNewHours[day] = {open_time: old_open_time, close_time: parseInt(event.target.value)}\r\n      newStoreHours = [\r\n        ...this.state.storeHours.slice(0, day),\r\n        {open_time: old_open_time, close_time: parseInt(event.target.value)},\r\n        ...this.state.storeHours.slice(day + 1)\r\n      ]\r\n    }\r\n    \r\n    this.setState({\r\n      newHours: updateNewHours,\r\n      storeHours: newStoreHours\r\n    })\r\n  };\r\n\r\n  deleteFileChangeHandler = async (event, setFieldValue, newPictureLength) => {\r\n    if(event.target.checked){\r\n      await this.state.keys.push(event.target.id)\r\n      console.log(this.state.pictures.length, newPictureLength, this.state.keys.length)\r\n      setFieldValue('pictureCount', this.state.pictures.length + newPictureLength - this.state.keys.length)\r\n    }\r\n    else{\r\n      await this.state.keys.pop(event.target.id)\r\n      console.log(this.state.pictures.length, newPictureLength, this.state.keys.length)\r\n      setFieldValue('pictureCount', this.state.pictures.length + newPictureLength - this.state.keys.length)\r\n    }\r\n  }\r\n\r\n  fileChangedHandler = (event, setFieldValue, pictures) => {\r\n    this.setState({ selectedFiles: event.target.files })\r\n    setFieldValue('pictureCount', this.state.pictures.length + event.target.files.length - this.state.keys.length)\r\n    setFieldValue('pictures', event.target.files)\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.store !== this.state.store) {\r\n      let picturesFetched = await getPictures('stores/' + this.state.store.id + '/images/')\r\n      this.setState({\r\n        pictures: picturesFetched\r\n      })\r\n    }\r\n\r\n    // can put this for now so we don't have to upload to s3\r\n    // this.setState({\r\n      // pictures: [\r\n      //   { \r\n      //     url: \"/hair.jpg\",\r\n      //     key: \"/hair.jpg\"\r\n      //   },\r\n      //   {\r\n      //     url: \"/nails.jpg\",\r\n      //     key: \"/nails.jpg\"\r\n      //   },\r\n      //   {\r\n      //     url: \"/salon.jpg\",\r\n      //     key: \"/salon.jpg\"\r\n      //   }\r\n      // ]\r\n    // })\r\n  }\r\n\r\n  componentDidMount() {\r\n    // if we were given the existing data from calling component use that, else fetch\r\n    // check if categories are empty, if they are then cache/store needs to be updated. \r\n    if (this.props.location.state && this.props.location.state.store) {\r\n      let convertedCategory = this.props.location.state.store.category.map((str) => ({ value: str.toLowerCase(), label: str }));\r\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/storeHours', {\r\n        method: \"GET\",\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      })\r\n      .then(function(response){\r\n        if(response.status!==200){\r\n          // throw an error alert\r\n          store.dispatch(addAlert(response))\r\n        }\r\n        else{\r\n          return response.json();\r\n        }\r\n      })\r\n      .then(data => {\r\n        this.setState({\r\n          store: this.props.location.state.store,\r\n          selectedOption: convertedCategory,\r\n          storeHours: data,\r\n          loading: false\r\n        })\r\n      });\r\n    }\r\n    else {\r\n      Promise.all([\r\n        fetch(fetchDomain + '/stores/' + this.props.match.params.store_id, {\r\n        method: \"GET\",\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      }).then(value => value.json()),\r\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/storeHours', {\r\n        method: \"GET\",\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      }).then(value => value.json())\r\n      ]).then(allResponses => {\r\n        const response1 = allResponses[0]\r\n        const response2 = allResponses[1]\r\n        let convertedCategory = response1.category.map((str) => ({ value: str.toLowerCase(), label: str }));\r\n        this.setState({\r\n          store: response1,\r\n          selectedOption: convertedCategory,\r\n          storeHours: response2,\r\n          loading: false\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const DisplayWithLoading = (props) => {\r\n      if (this.state.loading) {\r\n        return <Row className=\"vertical-center\">\r\n            <Col>\r\n              <GridLoader\r\n                css={override}\r\n                size={20}\r\n                color={\"#2196f3\"}\r\n                loading={this.state.isLoading}\r\n              />\r\n            </Col>\r\n          </Row>\r\n      } else {\r\n        return <Row className=\"justify-content-center\">\r\n        <Col xs={8} sm={7} md={6} lg={5}>\r\n          <Formik\r\n            enableReinitialize\r\n            initialValues={{\r\n              name: this.state.store.name,\r\n              description: this.state.store.description,\r\n              phone: this.state.store.phone,\r\n              street: this.state.store.street,\r\n              city: this.state.store.city,\r\n              state: this.state.store.state,\r\n              zipcode: this.state.store.zipcode,\r\n              category: this.state.selectedOption,\r\n              services: null,\r\n              owners: null,\r\n              pictures: this.state.pictures,\r\n              pictureCount: this.state.pictures.length - this.state.keys.length,\r\n              storeHours: this.state.storeHours\r\n            }}\r\n            validationSchema={this.yupValidationSchema}\r\n            onSubmit={async (values) => {\r\n              values.category = values.category.map(function (val) {\r\n                return val.label;\r\n              })\r\n\r\n                let store_id = this.props.match.params.store_id\r\n                let triggerStoreDisplay = this.triggerStoreDisplay\r\n\r\n                values.services = this.state.store.services\r\n                values.owners = this.state.store.owners\r\n                values.id = store_id\r\n                values.storeHours = this.state.newHours\r\n\r\n                // remove files from s3\r\n                await deleteHandler(this.state.keys)\r\n\r\n                // upload new images to s3 from client to avoid burdening back end\r\n                let prefix = 'stores/' + this.props.match.params.store_id + '/services/' + values.name + '/'\r\n                await uploadHandler(prefix, this.state.selectedFiles)\r\n\r\n                fetch(fetchDomain + '/stores/edit/' + store_id , {\r\n                  method: \"POST\",\r\n                  headers: {\r\n                    'Content-type': 'application/json'\r\n                  },\r\n                  credentials: 'include',\r\n                  body: JSON.stringify(values)\r\n                })\r\n                .then(function(response){\r\n                  if(response.status!==200){\r\n                    store.dispatch(addAlert(response))\r\n                  }\r\n                  else {\r\n                    // redirect to home page signed in\r\n                    return response.json()\r\n                  }\r\n                })\r\n                .then(data => {\r\n                  if(data){\r\n                    triggerStoreDisplay(data)\r\n                  }\r\n                });\r\n            }}\r\n          >\r\n            {({ values,\r\n              errors,\r\n              touched,\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              setFieldValue }) => (\r\n                <Form className=\"formBody rounded\">\r\n                  <h3>Store Edit</h3>\r\n\r\n                  <Form.Group controlId=\"formName\">\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <FaShoppingCart />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={values.name}\r\n                        placeholder=\"Business Name\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        className={touched.name && errors.name ? \"error\" : null} />\r\n                    </InputGroup>\r\n                    {touched.name && errors.name ? (\r\n                      <div className=\"error-message\">{errors.name}</div>\r\n                    ) : null}\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formDescription\">\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <FaPen />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows={3}\r\n                        name=\"description\"\r\n                        value={values.description}\r\n                        placeholder=\"Description\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        className={touched.description && errors.description ? \"error\" : null} />\r\n                    </InputGroup>\r\n                    {touched.description && errors.description ? (\r\n                      <div className=\"error-message\">{errors.description}</div>\r\n                    ) : null}\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formPhone\">\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <FaPhone />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control type=\"text\"\r\n                        value={values.phone}\r\n                        placeholder=\"Phone Number\"\r\n                        name=\"phone\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        className={touched.phone && errors.phone ? \"error\" : null} />\r\n                    </InputGroup>\r\n                    {touched.phone && errors.phone ? (\r\n                      <div className=\"error-message\">{errors.phone}</div>\r\n                    ) : null}\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formStreet\">\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <FaRoad />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control type=\"text\"\r\n                        value={values.street}\r\n                        placeholder=\"Street\"\r\n                        name=\"street\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        className={touched.street && errors.street ? \"error\" : null} />\r\n                    </InputGroup>\r\n                    {touched.street && errors.street ? (\r\n                      <div className=\"error-message\">{errors.street}</div>\r\n                    ) : null}\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formCity\">\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <FaBuilding />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control type=\"text\"\r\n                        value={values.city}\r\n                        placeholder=\"City\"\r\n                        name=\"city\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        className={touched.city && errors.city ? \"error\" : null} />\r\n                    </InputGroup>\r\n                    {touched.city && errors.city ? (\r\n                      <div className=\"error-message\">{errors.city}</div>\r\n                    ) : null}\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formState\">\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <FaUniversity />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        value={values.state}\r\n                        placeholder=\"State\"\r\n                        name=\"state\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        className={touched.state && errors.state ? \"error\" : null} />\r\n                    </InputGroup>\r\n                    {touched.state && errors.state ? (\r\n                      <div className=\"error-message\">{errors.state}</div>\r\n                    ) : null}\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formZipcode\">\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <FaGlobe />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        value={values.zipcode}\r\n                        placeholder=\"Zipcode\"\r\n                        name=\"zipcode\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        className={touched.zipcode && errors.zipcode ? \"error\" : null} />\r\n                    </InputGroup>\r\n                    {touched.zipcode && errors.zipcode ? (\r\n                      <div className=\"error-message\">{errors.zipcode}</div>\r\n                    ) : null}\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formCategory\">\r\n                    <Select\r\n                      value={values.category}\r\n                      onChange={option => setFieldValue(\"category\", option)}\r\n                      name=\"category\"\r\n                      options={this.options}\r\n                      isMulti={true}\r\n                      placeholder={\"Category\"}\r\n                      className={touched.category && errors.category ? \"error\" : null}\r\n                    />\r\n                    {touched.category && errors.category ? (\r\n                      <div className=\"error-message\">{errors.category}</div>\r\n                    ) : null}\r\n                  </Form.Group>\r\n\r\n                  <h4>Store Hours</h4>\r\n\r\n                  <Form.Group controlId=\"formHoursMonday\">\r\n                    <h5 className=\"text-left\">Monday</h5>\r\n                    <Form.Row>\r\n                      <Col>\r\n                        <Form.Control as=\"select\" value={this.state.storeHours[0].open_time} onChange={this.handleSelectChange.bind(this)}>\r\n                          <option value={0}>{this.convertMinsToHrsMins(0)}</option>\r\n                          <option value={60}>{this.convertMinsToHrsMins(60)}</option>\r\n                          <option value={120}>{this.convertMinsToHrsMins(120)}</option>\r\n                          <option value={180}>{this.convertMinsToHrsMins(180)}</option>\r\n                          <option value={240}>{this.convertMinsToHrsMins(240)}</option>\r\n                          <option value={300}>{this.convertMinsToHrsMins(300)}</option>\r\n                          <option value={360}>{this.convertMinsToHrsMins(360)}</option>\r\n                          <option value={420}>{this.convertMinsToHrsMins(420)}</option>\r\n                          <option value={480}>{this.convertMinsToHrsMins(480)}</option>\r\n                          <option value={540}>{this.convertMinsToHrsMins(540)}</option>\r\n                          <option value={600}>{this.convertMinsToHrsMins(600)}</option>\r\n                          <option value={660}>{this.convertMinsToHrsMins(660)}</option>\r\n                          <option value={720}>{this.convertMinsToHrsMins(720)}</option>\r\n                          <option value={780}>{this.convertMinsToHrsMins(780)}</option>\r\n                          <option value={840}>{this.convertMinsToHrsMins(840)}</option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Control as=\"select\" value={this.state.storeHours[0].close_time} onChange={this.handleSelectChange.bind(this)}>\r\n                          <option value={900}>{this.convertMinsToHrsMins(900)}</option>\r\n                          <option value={960}>{this.convertMinsToHrsMins(960)}</option>\r\n                          <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\r\n                          <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\r\n                          <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\r\n                          <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\r\n                          <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\r\n                          <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\r\n                          <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\r\n                          <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formHoursTuesday\">\r\n                    <h5 className=\"text-left\">Tuesday</h5>\r\n                    <Form.Row>\r\n                      <Col>\r\n                        <Form.Control as=\"select\" value={this.state.storeHours[1].open_time} onChange={this.handleSelectChange.bind(this)}>\r\n                          <option value={0}>{this.convertMinsToHrsMins(0)}</option>\r\n                          <option value={60}>{this.convertMinsToHrsMins(60)}</option>\r\n                          <option value={120}>{this.convertMinsToHrsMins(120)}</option>\r\n                          <option value={180}>{this.convertMinsToHrsMins(180)}</option>\r\n                          <option value={240}>{this.convertMinsToHrsMins(240)}</option>\r\n                          <option value={300}>{this.convertMinsToHrsMins(300)}</option>\r\n                          <option value={360}>{this.convertMinsToHrsMins(360)}</option>\r\n                          <option value={420}>{this.convertMinsToHrsMins(420)}</option>\r\n                          <option value={480}>{this.convertMinsToHrsMins(480)}</option>\r\n                          <option value={540}>{this.convertMinsToHrsMins(540)}</option>\r\n                          <option value={600}>{this.convertMinsToHrsMins(600)}</option>\r\n                          <option value={660}>{this.convertMinsToHrsMins(660)}</option>\r\n                          <option value={720}>{this.convertMinsToHrsMins(720)}</option>\r\n                          <option value={780}>{this.convertMinsToHrsMins(780)}</option>\r\n                          <option value={840}>{this.convertMinsToHrsMins(840)}</option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Control as=\"select\" value={this.state.storeHours[1].close_time} onChange={this.handleSelectChange.bind(this)}>\r\n                          <option value={900}>{this.convertMinsToHrsMins(900)}</option>\r\n                          <option value={960}>{this.convertMinsToHrsMins(960)}</option>\r\n                          <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\r\n                          <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\r\n                          <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\r\n                          <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\r\n                          <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\r\n                          <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\r\n                          <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\r\n                          <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n\r\n\r\n                  <Form.Group controlId=\"formHoursWednesday\">\r\n                    <h5 className=\"text-left\">Wednesday</h5>\r\n                    <Form.Row>\r\n                      <Col>\r\n                        <Form.Control as=\"select\" value={this.state.storeHours[2].open_time} onChange={this.handleSelectChange.bind(this)}>\r\n                          <option value={0}>{this.convertMinsToHrsMins(0)}</option>\r\n                          <option value={60}>{this.convertMinsToHrsMins(60)}</option>\r\n                          <option value={120}>{this.convertMinsToHrsMins(120)}</option>\r\n                          <option value={180}>{this.convertMinsToHrsMins(180)}</option>\r\n                          <option value={240}>{this.convertMinsToHrsMins(240)}</option>\r\n                          <option value={300}>{this.convertMinsToHrsMins(300)}</option>\r\n                          <option value={360}>{this.convertMinsToHrsMins(360)}</option>\r\n                          <option value={420}>{this.convertMinsToHrsMins(420)}</option>\r\n                          <option value={480}>{this.convertMinsToHrsMins(480)}</option>\r\n                          <option value={540}>{this.convertMinsToHrsMins(540)}</option>\r\n                          <option value={600}>{this.convertMinsToHrsMins(600)}</option>\r\n                          <option value={660}>{this.convertMinsToHrsMins(660)}</option>\r\n                          <option value={720}>{this.convertMinsToHrsMins(720)}</option>\r\n                          <option value={780}>{this.convertMinsToHrsMins(780)}</option>\r\n                          <option value={840}>{this.convertMinsToHrsMins(840)}</option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Control as=\"select\" value={this.state.storeHours[2].close_time} onChange={this.handleSelectChange.bind(this)}>\r\n                          <option value={900}>{this.convertMinsToHrsMins(900)}</option>\r\n                          <option value={960}>{this.convertMinsToHrsMins(960)}</option>\r\n                          <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\r\n                          <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\r\n                          <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\r\n                          <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\r\n                          <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\r\n                          <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\r\n                          <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\r\n                          <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formHoursThursday\">\r\n                    <h5 className=\"text-left\">Thursday</h5>\r\n                    <Form.Row>\r\n                      <Col>\r\n                        <Form.Control as=\"select\" value={this.state.storeHours[3].open_time} onChange={this.handleSelectChange.bind(this)}>\r\n                          <option value={0}>{this.convertMinsToHrsMins(0)}</option>\r\n                          <option value={60}>{this.convertMinsToHrsMins(60)}</option>\r\n                          <option value={120}>{this.convertMinsToHrsMins(120)}</option>\r\n                          <option value={180}>{this.convertMinsToHrsMins(180)}</option>\r\n                          <option value={240}>{this.convertMinsToHrsMins(240)}</option>\r\n                          <option value={300}>{this.convertMinsToHrsMins(300)}</option>\r\n                          <option value={360}>{this.convertMinsToHrsMins(360)}</option>\r\n                          <option value={420}>{this.convertMinsToHrsMins(420)}</option>\r\n                          <option value={480}>{this.convertMinsToHrsMins(480)}</option>\r\n                          <option value={540}>{this.convertMinsToHrsMins(540)}</option>\r\n                          <option value={600}>{this.convertMinsToHrsMins(600)}</option>\r\n                          <option value={660}>{this.convertMinsToHrsMins(660)}</option>\r\n                          <option value={720}>{this.convertMinsToHrsMins(720)}</option>\r\n                          <option value={780}>{this.convertMinsToHrsMins(780)}</option>\r\n                          <option value={840}>{this.convertMinsToHrsMins(840)}</option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Control as=\"select\" value={this.state.storeHours[3].close_time} onChange={this.handleSelectChange.bind(this)}>\r\n                          <option value={900}>{this.convertMinsToHrsMins(900)}</option>\r\n                          <option value={960}>{this.convertMinsToHrsMins(960)}</option>\r\n                          <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\r\n                          <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\r\n                          <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\r\n                          <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\r\n                          <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\r\n                          <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\r\n                          <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\r\n                          <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n\r\n\r\n                  <Form.Group controlId=\"formHoursFriday\">\r\n                    <h5 className=\"text-left\">Friday</h5>\r\n                    <Form.Row>\r\n                      <Col>\r\n                        <Form.Control as=\"select\" value={this.state.storeHours[4].open_time} onChange={this.handleSelectChange.bind(this)}>\r\n                          <option value={0}>{this.convertMinsToHrsMins(0)}</option>\r\n                          <option value={60}>{this.convertMinsToHrsMins(60)}</option>\r\n                          <option value={120}>{this.convertMinsToHrsMins(120)}</option>\r\n                          <option value={180}>{this.convertMinsToHrsMins(180)}</option>\r\n                          <option value={240}>{this.convertMinsToHrsMins(240)}</option>\r\n                          <option value={300}>{this.convertMinsToHrsMins(300)}</option>\r\n                          <option value={360}>{this.convertMinsToHrsMins(360)}</option>\r\n                          <option value={420}>{this.convertMinsToHrsMins(420)}</option>\r\n                          <option value={480}>{this.convertMinsToHrsMins(480)}</option>\r\n                          <option value={540}>{this.convertMinsToHrsMins(540)}</option>\r\n                          <option value={600}>{this.convertMinsToHrsMins(600)}</option>\r\n                          <option value={660}>{this.convertMinsToHrsMins(660)}</option>\r\n                          <option value={720}>{this.convertMinsToHrsMins(720)}</option>\r\n                          <option value={780}>{this.convertMinsToHrsMins(780)}</option>\r\n                          <option value={840}>{this.convertMinsToHrsMins(840)}</option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Control as=\"select\" value={this.state.storeHours[4].close_time} onChange={this.handleSelectChange.bind(this)}>\r\n                          <option value={900}>{this.convertMinsToHrsMins(900)}</option>\r\n                          <option value={960}>{this.convertMinsToHrsMins(960)}</option>\r\n                          <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\r\n                          <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\r\n                          <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\r\n                          <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\r\n                          <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\r\n                          <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\r\n                          <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\r\n                          <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formHoursSaturday\">\r\n                    <h5 className=\"text-left\">Saturday</h5>\r\n                    <Form.Row>\r\n                      <Col>\r\n                        <Form.Control as=\"select\" value={this.state.storeHours[5].open_time} onChange={this.handleSelectChange.bind(this)}>\r\n                          <option value={0}>{this.convertMinsToHrsMins(0)}</option>\r\n                          <option value={60}>{this.convertMinsToHrsMins(60)}</option>\r\n                          <option value={120}>{this.convertMinsToHrsMins(120)}</option>\r\n                          <option value={180}>{this.convertMinsToHrsMins(180)}</option>\r\n                          <option value={240}>{this.convertMinsToHrsMins(240)}</option>\r\n                          <option value={300}>{this.convertMinsToHrsMins(300)}</option>\r\n                          <option value={360}>{this.convertMinsToHrsMins(360)}</option>\r\n                          <option value={420}>{this.convertMinsToHrsMins(420)}</option>\r\n                          <option value={480}>{this.convertMinsToHrsMins(480)}</option>\r\n                          <option value={540}>{this.convertMinsToHrsMins(540)}</option>\r\n                          <option value={600}>{this.convertMinsToHrsMins(600)}</option>\r\n                          <option value={660}>{this.convertMinsToHrsMins(660)}</option>\r\n                          <option value={720}>{this.convertMinsToHrsMins(720)}</option>\r\n                          <option value={780}>{this.convertMinsToHrsMins(780)}</option>\r\n                          <option value={840}>{this.convertMinsToHrsMins(840)}</option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Control as=\"select\" value={this.state.storeHours[5].close_time} onChange={this.handleSelectChange.bind(this)}>\r\n                          <option value={900}>{this.convertMinsToHrsMins(900)}</option>\r\n                          <option value={960}>{this.convertMinsToHrsMins(960)}</option>\r\n                          <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\r\n                          <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\r\n                          <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\r\n                          <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\r\n                          <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\r\n                          <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\r\n                          <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\r\n                          <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n\r\n\r\n                  <Form.Group controlId=\"formHoursSunday\">\r\n                    <h5 className=\"text-left\">Sunday</h5>\r\n                    <Form.Row>\r\n                      <Col>\r\n                        <Form.Control as=\"select\" value={this.state.storeHours[6].open_time} onChange={this.handleSelectChange.bind(this)}>\r\n                          <option value={0}>{this.convertMinsToHrsMins(0)}</option>\r\n                          <option value={60}>{this.convertMinsToHrsMins(60)}</option>\r\n                          <option value={120}>{this.convertMinsToHrsMins(120)}</option>\r\n                          <option value={180}>{this.convertMinsToHrsMins(180)}</option>\r\n                          <option value={240}>{this.convertMinsToHrsMins(240)}</option>\r\n                          <option value={300}>{this.convertMinsToHrsMins(300)}</option>\r\n                          <option value={360}>{this.convertMinsToHrsMins(360)}</option>\r\n                          <option value={420}>{this.convertMinsToHrsMins(420)}</option>\r\n                          <option value={480}>{this.convertMinsToHrsMins(480)}</option>\r\n                          <option value={540}>{this.convertMinsToHrsMins(540)}</option>\r\n                          <option value={600}>{this.convertMinsToHrsMins(600)}</option>\r\n                          <option value={660}>{this.convertMinsToHrsMins(660)}</option>\r\n                          <option value={720}>{this.convertMinsToHrsMins(720)}</option>\r\n                          <option value={780}>{this.convertMinsToHrsMins(780)}</option>\r\n                          <option value={840}>{this.convertMinsToHrsMins(840)}</option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Control as=\"select\" value={this.state.storeHours[6].close_time} onChange={this.handleSelectChange.bind(this)}>\r\n                          <option value={900}>{this.convertMinsToHrsMins(900)}</option>\r\n                          <option value={960}>{this.convertMinsToHrsMins(960)}</option>\r\n                          <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\r\n                          <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\r\n                          <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\r\n                          <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\r\n                          <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\r\n                          <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\r\n                          <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\r\n                          <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"pictureCount\">\r\n                    <Form.Label>Delete Images</Form.Label>\r\n                    {this.state.pictures.map((picture, index) => (\r\n                      <div key={\"pic-\" + index}>\r\n                        <img className=\"img-fluid\" src={picture.url} alt={\"Slide \" + index} />\r\n                        <Form.Check\r\n                          // style={{marginLeft: 30}}\r\n                          id={picture.key}\r\n                          label={picture.key.split('/').slice(-1)[0]}\r\n                          onChange={event => this.deleteFileChangeHandler(event, setFieldValue, values.pictures.length)}\r\n                        />\r\n                      </div>\r\n                    ))}\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"pictures\">\r\n                    <Form.Label>Add Images</Form.Label>\r\n                    <br/>\r\n                    <input \r\n                      onChange={event => this.fileChangedHandler(event, setFieldValue, values.pictures)}\r\n                      type=\"file\"\r\n                      multiple\r\n                      className={touched.pictures && errors.pictures ? \"error\" : null}\r\n                    />\r\n                    {touched.pictureCount && errors.pictureCount ? (\r\n                      <div className=\"error-message\">{errors.pictureCount}</div>\r\n                    ): null}\r\n                  </Form.Group>\r\n\r\n\r\n                  <Button onClick={handleSubmit}>Submit</Button>\r\n                </Form>\r\n              )}\r\n          </Formik>\r\n        </Col>\r\n      </Row>\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Container fluid>\r\n        <DisplayWithLoading/>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StoreEditForm;\r\n","//CITATION: https://medium.com/@faizanv/authentication-for-your-react-and-express-application-w-json-web-tokens-923515826e0\r\nimport React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nexport default function redirectWithoutAuth(ComponentToProtect) {\r\n  return class extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        loading: true,\r\n        redirect: false,\r\n      };\r\n    }\r\n    componentDidMount() {\r\n      fetch(fetchDomain + '/checkToken' , {\r\n        method: \"GET\",\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      }).then(res => {\r\n          if (res.status === 200) {\r\n            this.setState({ loading: false });\r\n          } else {\r\n            const error = new Error(res.error);\r\n            throw error;\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n          this.setState({ loading: false, redirect: true });\r\n        });\r\n    }\r\n    render() {\r\n      const { loading, redirect } = this.state;\r\n      if (loading) {\r\n        return null;\r\n      }\r\n      if (redirect) {\r\n        return <Redirect to=\"/login\" />;\r\n      }\r\n      else {\r\n        return <ComponentToProtect {...this.props} />;\r\n      }\r\n    }\r\n  }\r\n}","import React from 'react';\r\nimport '../../App.css';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport { FaLockOpen, FaLock, FaUser, FaPhone } from 'react-icons/fa';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport {editUser} from '../../reduxFolder/redux.js'\r\n\r\nclass EditProfileForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: {\r\n        first_name: '',\r\n        last_name: '',\r\n        phone: '',\r\n        password: '',\r\n        password_confirmation: '',\r\n        id: ''\r\n      }\r\n    }\r\n    // RegEx for phone number validation\r\n    this.phoneRegExp = /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/\r\n    // this.emailRegExp = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/\r\n    // Schema for yup\r\n    this.yupValidationSchema = Yup.object().shape({\r\n      first_name: Yup.string()\r\n      .min(2, \"First name must have at least 2 characters\")\r\n      .max(100, \"First name can't be longer than 100 characters\")\r\n      .required(\"First name is required\"),\r\n      last_name: Yup.string()\r\n      .min(2, \"Last name must have at least 2 characters\")\r\n      .max(100, \"Last name can't be longer than 100 characters\")\r\n      .required(\"Last name is required\"),\r\n      // email: Yup.string()\r\n      // .email(\"Must be a valid email address\")\r\n      // .max(100, \"Email must be less than 100 characters\")\r\n      // .required(\"Email is required\"),\r\n      phone: Yup.string()\r\n      .matches(this.phoneRegExp, \"Phone number is not valid\"),\r\n      password: Yup.string()\r\n      .min(6, \"Password must have at least 6 characters\")\r\n      .max(100, \"Password can't be longer than 100 characters\")\r\n      .required(\"Password is required\"),\r\n      password_confirmation: Yup.string()\r\n      .oneOf([Yup.ref('password')], 'Passwords do not match')\r\n      .required(\"Password confirmation is required\"),\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState)  {\r\n    if (prevProps.user !== this.props.user) {\r\n      this.props.history.push({\r\n        pathname: '/users/' + this.props.user.id,\r\n      })\r\n    }\r\n  }\r\n    \r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"justify-content-center\">\r\n          <Col xs={8} sm={7} md={6} lg={5}>\r\n            <Formik\r\n              enableReinitialize\r\n              initialValues={{\r\n                first_name: this.props.user.first_name,\r\n                last_name: this.props.user.last_name,\r\n                phone: this.props.user.phone,\r\n                password: '',\r\n                password_confirmation: '',\r\n                id: 0\r\n              }}\r\n              validationSchema={this.yupValidationSchema}\r\n              onSubmit={(values) => {\r\n                values.id = this.props.match.params.user_id\r\n\r\n                this.props.editProfile(values)\r\n              }}\r\n            >\r\n            {( {values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit}) => (\r\n              <Form className=\"formBody rounded\">\r\n                <h3>Edit Profile</h3>\r\n\r\n                <Form.Group controlId=\"formFirstName\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaUser/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control \r\n                      type=\"text\" \r\n                      name=\"first_name\"\r\n                      value={values.first_name} \r\n                      placeholder=\"First Name\" \r\n                      onChange={handleChange} \r\n                      onBlur={handleBlur}\r\n                      className={touched.first_name && errors.first_name ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.first_name && errors.first_name ? (\r\n                    <div className=\"error-message\">{errors.first_name}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formLastName\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaUser/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control type=\"text\" \r\n                    value={values.last_name}\r\n                    placeholder=\"Last Name\" \r\n                    name=\"last_name\" \r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={touched.last_name && errors.last_name ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.last_name && errors.last_name ? (\r\n                    <div className=\"error-message\">{errors.last_name}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formPhone\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaPhone/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control type=\"text\" \r\n                      value={values.phone} \r\n                      placeholder=\"Phone Number\" \r\n                      name=\"phone\" \r\n                      onChange={handleChange} \r\n                      onBlur={handleBlur}\r\n                      className={touched.phone && errors.phone ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.phone && errors.phone ? (\r\n                    <div className=\"error-message\">{errors.phone}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formPassword\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaLockOpen/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control \r\n                      type=\"password\" \r\n                      value={values.password} \r\n                      placeholder=\"Password\" \r\n                      name=\"password\" \r\n                      onChange={handleChange} \r\n                      onBlur={handleBlur}\r\n                      className={touched.password && errors.password ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.password && errors.password ? (\r\n                    <div className=\"error-message\">{errors.password}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formPasswordConfirmation\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaLock/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control \r\n                      type=\"password\" \r\n                      value={values.password_confirmation}\r\n                      placeholder=\"Confirm Password\" \r\n                      name=\"password_confirmation\" \r\n                      onChange={handleChange} \r\n                      onBlur={handleBlur}\r\n                      className={touched.password_confirmation && errors.password_confirmation ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.password_confirmation && errors.password_confirmation ? (\r\n                    <div className=\"error-message\">{errors.password_confirmation}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n                <Button onClick={handleSubmit}>Submit</Button>\r\n              </Form>\r\n            )}\r\n            </Formik>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.userReducer.user\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n  editProfile: (email, password, auth_token) => editUser(email, password, auth_token)\r\n}, dispatch)\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfileForm);\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { connect } from 'react-redux';\r\n\r\nclass Profile extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  render() {\r\n    // fix later to render all users not just current one? this.props.match.params.user_id\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"justify-content-center\">\r\n            <Col>\r\n              <h1>{this.props.user.first_name} {this.props.user.last_name}</h1>\r\n              <h1>{this.props.user.phone}</h1>\r\n              <h1>{this.props.user.email}</h1>\r\n            </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.userReducer.user\r\n})\r\n\r\nexport default connect(mapStateToProps)(Profile);\r\n","import React from \"react\"\r\nimport ContentLoader from \"react-content-loader\" \r\n\r\nconst UserStoresDashboardLoader = () => (\r\n  <ContentLoader \r\n    speed={1}\r\n    style={{ width: '100%', height: '100%' }}\r\n    viewBox=\"0 0 1000 1500\"\r\n    backgroundColor=\"#f3f3f3\"\r\n    foregroundColor=\"#eae8e8\"\r\n  >\r\n    <rect className={'d-none d-md-block'} x=\"50\" y=\"30\" rx=\"0\" ry=\"0\" width=\"500\" height=\"250\" /> \r\n    <rect className={'d-none d-md-block'} x=\"630\" y=\"71\" rx=\"3\" ry=\"3\" width=\"200\" height=\"15\" /> \r\n    <rect className={'d-none d-md-block'} x=\"645\" y=\"105\" rx=\"3\" ry=\"3\" width=\"164\" height=\"6\" /> \r\n    <rect className={'d-none d-md-block'} x=\"630\" y=\"130\" rx=\"3\" ry=\"3\" width=\"200\" height=\"25\" /> \r\n    <rect className={'d-none d-md-block'} x=\"630\" y=\"170\" rx=\"3\" ry=\"3\" width=\"200\" height=\"25\" /> \r\n    <rect className={'d-none d-md-block'} x=\"630\" y=\"210\" rx=\"3\" ry=\"3\" width=\"200\" height=\"25\" /> \r\n    \r\n    <rect className={'d-block d-md-none'} x=\"66\" y=\"0\" rx=\"0\" ry=\"0\" width=\"858\" height=\"614\" /> \r\n    <rect className={'d-block d-md-none'}x=\"69\" y=\"689\" rx=\"3\" ry=\"3\" width=\"858\" height=\"115\" /> \r\n    <rect className={'d-block d-md-none'}x=\"104\" y=\"869\" rx=\"3\" ry=\"3\" width=\"788\" height=\"55\" /> \r\n    <rect className={'d-block d-md-none'}x=\"49\" y=\"999\" rx=\"3\" ry=\"3\" width=\"900\" height=\"115\" /> \r\n    <rect className={'d-block d-md-none'}x=\"49\" y=\"1169\" rx=\"3\" ry=\"3\" width=\"900\" height=\"115\" /> \r\n    <rect className={'d-block d-md-none'}x=\"49\" y=\"1339\" rx=\"3\" ry=\"3\" width=\"900\" height=\"115\" /> \r\n  </ContentLoader>\r\n)\r\n\r\nexport default UserStoresDashboardLoader","import React from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { Button, Image } from 'react-bootstrap';\r\n// import SearchCard from '../Search/SearchCard';\r\nimport Carousel from 'react-bootstrap/Carousel'\r\n// import salon from '../../assets/salon.jpg';\r\nimport salon2 from '../../assets/salon2.jpeg';\r\nimport hair from '../../assets/hair_salon.jpg';\r\nimport { FaEdit } from 'react-icons/fa';\r\nimport './UserStoresDashboard.css'\r\nimport {\r\n  addAlert\r\n} from '../../reduxFolder/actions/alert'\r\nimport store from '../../reduxFolder/store';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport {addStore} from '../../reduxFolder/actions/stores.js'\r\nimport UserStoresDashboardLoader from './UserStoresDashboardLoader';\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\n// ***** NOTE: fix to properly display all the stores\r\n\r\nclass UserStoresDashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n      stores: [\r\n        {\r\n          id: \"\",\r\n          name: \"\",\r\n          street: \"\",\r\n          city: \"\",\r\n          state: \"\",\r\n          zipcode: \"\",\r\n          created_at: \"\",\r\n          category: [],\r\n          services: [],\r\n          workers: [],\r\n          owners: [],\r\n          phone: \"\",\r\n          clients: [],\r\n          description: \"\",\r\n          lat: \"\",\r\n          lng: \"\"\r\n        }\r\n      ],\r\n      redirectToWorkerForm: null,\r\n      store_id: null,\r\n      loading: true\r\n    }\r\n  }\r\n\r\n  triggerStoreEdit(passedStore) {\r\n    this.props.history.push({\r\n      pathname: '/stores/edit/' + passedStore.id,\r\n      state: {\r\n        store: passedStore\r\n      }\r\n    })\r\n  }\r\n\r\n  triggerAddWorker(id) {\r\n    this.props.history.push({\r\n      pathname: '/stores/addWorker/' + id\r\n    })\r\n  }\r\n\r\n  triggerShowWorkers(id) {\r\n    this.props.history.push({\r\n      pathname: '/stores/' + id + '/workers'\r\n    })\r\n  }\r\n\r\n  triggerStoreShow(passedStore) {\r\n    this.props.history.push({\r\n      pathname: '/stores/' + passedStore.id,\r\n      state: {\r\n        store: passedStore\r\n      }\r\n    })\r\n  }\r\n\r\n  triggerShowServices(id) {\r\n    this.props.history.push({\r\n      pathname: '/stores/' + id + '/services'\r\n    })\r\n  }\r\n\r\n  triggerAddService(id) {\r\n    this.props.history.push({\r\n      pathname: '/stores/addService/' + id,\r\n    })\r\n  }\r\n\r\n  triggerShowCalendar(store) {\r\n    this.props.history.push({\r\n      pathname: '/storeCalendar/' + store.id,\r\n      state: {\r\n        store: store\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(fetchDomain + '/stores/users/' + this.props.match.params.user_id , {\r\n      method: \"GET\",\r\n      headers: {\r\n          'Content-type': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    .then(function(response){\r\n      if(response.status!==200){\r\n        // throw an error alert\r\n        store.dispatch(addAlert(response))\r\n      }\r\n      else{\r\n        return response.json();\r\n      }\r\n    })\r\n    .then(data => {\r\n      if(data){\r\n        // let convertedCategory = data.category.map((str) => ({ value: str.toLowerCase(), label: str }));\r\n        this.setState({\r\n          stores: data,\r\n          loading: false\r\n        })\r\n      }\r\n      this.props.addStore(data);\r\n\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const DisplayWithLoading = (props) => {\r\n      if (this.state.loading) {\r\n        return <Row className=\"mt-5\">\r\n            <Col xs=\"12\">\r\n              <UserStoresDashboardLoader/>\r\n            </Col>\r\n          </Row>\r\n      } else {\r\n        return(\r\n          <>{this.state.stores.map((store, index) => (\r\n            <div key={\"store\" + index}>\r\n              <Row className=\"justify-content-center align-content-center my-5\">\r\n                <Col md={6} className=\"vertical-align-contents\">\r\n                  <Carousel className=\"dashboard-carousel\" interval=\"\">\r\n                      <Carousel.Item>\r\n                        <Image fluid src={salon2} alt=\"test\"/>\r\n                      </Carousel.Item>\r\n                      <Carousel.Item >\r\n                        <Image fluid src={hair} alt=\"test2\"/>\r\n                      </Carousel.Item>\r\n                  </Carousel>\r\n                </Col>\r\n                <Col md={5} className=\"vertical-align-contents\">\r\n                  <Row className={\"justify-content-center\"}>\r\n                    <Col sm={12}>\r\n                      <span className=\"name\" onClick={() => this.triggerStoreShow(store)} style={{cursor: 'pointer'}}> {store.name} </span>\r\n                      <FaEdit className=\"edit mb-3\" size={25} onClick={() => this.triggerStoreEdit(store)}/>\r\n                    </Col>\r\n                    <Col sm={12}>\r\n                      <p className=\"address\">{store.street}, {store.city}, {store.state} </p>\r\n                    </Col>\r\n                    <Col sm={8} className={\"py-1\"}>\r\n                      <Button block className=\"update_button\"  onClick={() =>  this.triggerShowCalendar(store)}>Calendar</Button> &nbsp;\r\n                    </Col>\r\n                    <Col sm={8} className={\"py-1\"}>\r\n                      <Button block className=\"update_button\" onClick={() =>  this.triggerShowWorkers(store.id)}>Workers</Button> &nbsp;\r\n                    </Col>\r\n                    <Col sm={8} className={\"py-1\"}>\r\n                      <Button block className=\"update_button\" onClick={() =>  this.triggerShowServices(store.id)}>Services</Button> &nbsp;\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          ))}</>\r\n        )\r\n      }\r\n    }\r\n    return (\r\n      <Container fluid>\r\n        <DisplayWithLoading/>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  stores: state.storeReducer.stores,\r\n  user: state.userReducer.user\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n  addStore: (store) => addStore(store),\r\n}, dispatch)\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserStoresDashboard);\r\n","import React from 'react';\r\nimport '../../App.css';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport { FaEnvelope } from 'react-icons/fa';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Select from 'react-select';\r\nimport {\r\n  addAlert\r\n} from '../../reduxFolder/actions/alert'\r\nimport store from '../../reduxFolder/store';\r\nimport GridLoader from 'react-spinners/GridLoader'\r\nimport { css } from '@emotion/core'\r\n\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n\r\nclass AddWorkerForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      options: [\r\n        { value: 0, label: 'Brazilian Blowout' },\r\n        { value: 1, label: 'Manicure' },\r\n      ],\r\n      workerHours: [],\r\n      storeHours: [],\r\n      weekIsWorking: [true, true, true, true, true, true, true],\r\n      loading: true\r\n    };\r\n    this.emailRegExp = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/\r\n    // Schema for yup\r\n    this.yupValidationSchema = Yup.object().shape({\r\n      email: Yup.string()\r\n        .email(\"Must be a valid email address\")\r\n        .max(100, \"Email must be less than 100 characters\")\r\n        .required(\"Email is required\"),\r\n    });\r\n\r\n    this.triggerWorkerDisplay = this.triggerWorkerDisplay.bind(this);\r\n  }\r\n\r\n  convertMinsToHrsMins(mins) {\r\n    let h = Math.floor(mins / 60);\r\n    let m = mins % 60;\r\n    let am = false\r\n    if (h == 24) {\r\n      am = true\r\n      h -= 12\r\n    }\r\n    else if (h < 12) {\r\n      am = true\r\n    } else if (h != 12) {\r\n      h -= 12\r\n    }\r\n    h = h < 10 ? '0' + h : h;\r\n    if (h == 0) {\r\n      h = '12'\r\n    }\r\n    m = m < 10 ? '0' + m : m;\r\n    if (am) {\r\n      return `${h}:${m}am`;\r\n    } else {\r\n      return `${h}:${m}pm`;\r\n    }\r\n\r\n  }\r\n\r\n  handleSelectChange = (event) => {\r\n    var days = ['formHoursMonday', 'formHoursTuesday', 'formHoursWednesday', 'formHoursThursday', 'formHoursFriday', 'formHoursSaturday', 'formHoursSunday']\r\n    var day = days.indexOf(event.target.id)\r\n    var old_start_time = 0\r\n    var old_end_time = 0\r\n    var newWorkerHours = []\r\n    old_start_time = this.state.workerHours[day].start_time\r\n    old_end_time = this.state.workerHours[day].end_time\r\n    if (parseInt(event.target.querySelector('option').value) <= 840) {\r\n      newWorkerHours = [\r\n        ...this.state.workerHours.slice(0, day),\r\n        { start_time: parseInt(event.target.value), end_time: old_end_time },\r\n        ...this.state.workerHours.slice(day + 1)\r\n      ]\r\n    } else {\r\n      newWorkerHours = [\r\n        ...this.state.workerHours.slice(0, day),\r\n        { start_time: old_start_time, end_time: parseInt(event.target.value) },\r\n        ...this.state.workerHours.slice(day + 1)\r\n      ]\r\n    }\r\n\r\n    this.setState({\r\n      workerHours: newWorkerHours\r\n    })\r\n  };\r\n\r\n  handleDayStatusChange = (day) => {\r\n    var updateWeekIsWorking = [\r\n      ...this.state.weekIsWorking.slice(0, day),\r\n      !this.state.weekIsWorking[day],\r\n      ...this.state.weekIsWorking.slice(day + 1)\r\n    ]\r\n\r\n    this.setState({\r\n      weekIsWorking: updateWeekIsWorking\r\n    })\r\n  };\r\n\r\n  // redirect to the worker display page and pass the new worker data\r\n  triggerWorkerDisplay(returnedWorker) {\r\n    this.props.history.push({\r\n      pathname: '/stores/' + this.props.match.params.store_id + '/workers/' + returnedWorker.id,\r\n      state: {\r\n        worker: returnedWorker\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/storeHours\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n      .then(function (response) {\r\n        if (response.status !== 200) {\r\n          // throw an error alert\r\n          store.dispatch(addAlert(response))\r\n        }\r\n        else {\r\n          return response.json();\r\n        }\r\n      })\r\n      .then(data => {\r\n        if (data) {\r\n          let receivedWorkerHours = data.map((day) => ({ start_time: day.open_time, end_time: day.close_time }));\r\n          this.setState({\r\n            storeHours: data, \r\n            workerHours: receivedWorkerHours,\r\n            loading: false\r\n          })\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const CreateStartTimesForDay = (props) => {\r\n      let items = [];\r\n      for (let i = this.state.storeHours[props.day].open_time; i <= 840; i += 60) {\r\n        items.push(<option key={i} value={i}>{this.convertMinsToHrsMins(i)}</option>);\r\n      }\r\n      return items;\r\n    }\r\n    const CreateEndTimesForDay = (props) => {\r\n      let items = [];\r\n      for (let i = 900; i <= this.state.storeHours[props.day].close_time; i += 60) {\r\n        items.push(<option key={i} value={i}>{this.convertMinsToHrsMins(i)}</option>);\r\n      }\r\n      return items;\r\n    }\r\n    const DisplayWithLoading = (props) => {\r\n      if (this.state.loading) {\r\n        return <Row className=\"vertical-center\">\r\n          <Col>\r\n            <GridLoader\r\n              css={override}\r\n              size={20}\r\n              color={\"#2196f3\"}\r\n              loading={this.state.isLoading}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      } else { \r\n        return <Row className=\"justify-content-center\">\r\n          <Col xs={8} sm={7} md={6} lg={5}>\r\n            <Formik\r\n              initialValues={{\r\n                email: '',\r\n                services: '',\r\n                workerHours: []\r\n              }}\r\n              validationSchema={this.yupValidationSchema}\r\n              onSubmit={(values) => {\r\n                let store_id = this.props.match.params.store_id\r\n                let triggerWorkerDisplay = this.triggerWorkerDisplay\r\n\r\n                values.services = values.services.map(function (val) {\r\n                  return val.value;\r\n                })\r\n\r\n                fetch(fetchDomain + '/stores/addWorker/' + store_id, {\r\n                  method: \"POST\",\r\n                  headers: {\r\n                    'Content-type': 'application/json'\r\n                  },\r\n                  credentials: 'include',\r\n                  body: JSON.stringify(values)\r\n                })\r\n                  .then(function (response) {\r\n                    if (response.status !== 200) {\r\n                      store.dispatch(addAlert(response))\r\n                    }\r\n                    else {\r\n                      return response.json();\r\n                    }\r\n                  })\r\n                  .then(function (data) {\r\n                    // redirect to home page signed in\r\n                    if (data) {\r\n                      triggerWorkerDisplay(data)\r\n                    }\r\n                  })\r\n              }}\r\n            >\r\n              {({ values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                setFieldValue }) => (\r\n                  <Form className=\"formBody rounded\">\r\n                    <h3>Add Worker</h3>\r\n\r\n                    <Form.Group controlId=\"formEmail\">\r\n                      <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                          <InputGroup.Text>\r\n                            <FaEnvelope />\r\n                          </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control\r\n                          type=\"email\"\r\n                          value={values.email}\r\n                          placeholder=\"Email\"\r\n                          name=\"email\"\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          className={touched.email && errors.email ? \"error\" : null} />\r\n                      </InputGroup>\r\n                      {touched.email && errors.email ? (\r\n                        <div className=\"error-message\">{errors.email}</div>\r\n                      ) : null}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formServices\">\r\n                      <Select\r\n                        value={values.services}\r\n                        onChange={option => setFieldValue(\"services\", option)}\r\n                        name=\"services\"\r\n                        options={this.state.options}\r\n                        isMulti={true}\r\n                        placeholder={\"Services\"}\r\n                        className={touched.services && errors.services ? \"error\" : null}\r\n                      />\r\n                      {touched.services && errors.services ? (\r\n                        <div className=\"error-message\">{errors.services}</div>\r\n                      ) : null}\r\n                    </Form.Group>\r\n\r\n                    {/* Later make this work with store hours*/}\r\n                    <h4>Worker Hours</h4>\r\n\r\n                    <Form.Group controlId=\"formHoursMonday\">\r\n                      <Form.Row className=\"text-left\">\r\n                        <Col>\r\n                          <h5>Monday</h5>\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"monday-toggle\"\r\n                            label=\"Working Today?\"\r\n                            checked={this.state.weekIsWorking[0]}\r\n                            onChange={() => this.handleDayStatusChange(0)}\r\n                          />\r\n                        </Col>\r\n                      </Form.Row>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[0]} value={this.state.workerHours[0].start_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateStartTimesForDay day={0} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[0]} value={this.state.workerHours[0].end_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateEndTimesForDay day={0} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formHoursTuesday\">\r\n                      <Form.Row className=\"text-left\">\r\n                        <Col>\r\n                          <h5>Tuesday</h5>\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"tuesday-toggle\"\r\n                            label=\"Working Today?\"\r\n                            checked={this.state.weekIsWorking[1]}\r\n                            onChange={() => this.handleDayStatusChange(1)}\r\n                          />\r\n                        </Col>\r\n                      </Form.Row>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[1]} value={this.state.workerHours[1].start_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateStartTimesForDay day={1} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[1]} value={this.state.workerHours[1].end_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateEndTimesForDay day={1} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group controlId=\"formHoursWednesday\">\r\n                      <Form.Row className=\"text-left\">\r\n                        <Col>\r\n                          <h5>Wednesday</h5>\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"wednesday-toggle\"\r\n                            label=\"Working Today?\"\r\n                            checked={this.state.weekIsWorking[2]}\r\n                            onChange={() => this.handleDayStatusChange(2)}\r\n                          />\r\n                        </Col>\r\n                      </Form.Row>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[2]} value={this.state.workerHours[2].start_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateStartTimesForDay day={2} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[2]} value={this.state.workerHours[2].end_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateEndTimesForDay day={2} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formHoursThursday\">\r\n                      <Form.Row className=\"text-left\">\r\n                        <Col>\r\n                          <h5>Thursday</h5>\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"thursday-toggle\"\r\n                            label=\"Working Today?\"\r\n                            checked={this.state.weekIsWorking[3]}\r\n                            onChange={() => this.handleDayStatusChange(3)}\r\n                          />\r\n                        </Col>\r\n                      </Form.Row>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[3]} value={this.state.workerHours[3].start_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateStartTimesForDay day={3} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[3]} value={this.state.workerHours[3].end_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateEndTimesForDay day={3} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group controlId=\"formHoursFriday\">\r\n                      <Form.Row className=\"text-left\">\r\n                        <Col>\r\n                          <h5>Friday</h5>\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"friday-toggle\"\r\n                            label=\"Working Today?\"\r\n                            checked={this.state.weekIsWorking[4]}\r\n                            onChange={() => this.handleDayStatusChange(4)}\r\n                          />\r\n                        </Col>\r\n                      </Form.Row>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[4]} value={this.state.workerHours[4].start_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateStartTimesForDay day={4} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[4]} value={this.state.workerHours[4].end_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateEndTimesForDay day={4} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formHoursSaturday\">\r\n                      <Form.Row className=\"text-left\">\r\n                        <Col>\r\n                          <h5>Saturday</h5>\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"saturday-toggle\"\r\n                            label=\"Working Today?\"\r\n                            checked={this.state.weekIsWorking[5]}\r\n                            onChange={() => this.handleDayStatusChange(5)}\r\n                          />\r\n                        </Col>\r\n                      </Form.Row>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[5]} value={this.state.workerHours[5].start_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateStartTimesForDay day={5} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[5]} value={this.state.workerHours[5].end_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateEndTimesForDay day={5} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group controlId=\"formHoursSunday\">\r\n                      <Form.Row className=\"text-left\">\r\n                        <Col>\r\n                          <h5>Sunday</h5>\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"sunday-toggle\"\r\n                            label=\"Working Today?\"\r\n                            checked={this.state.weekIsWorking[6]}\r\n                            onChange={() => this.handleDayStatusChange(6)}\r\n                          />\r\n                        </Col>\r\n                      </Form.Row>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[6]} value={this.state.workerHours[6].start_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateStartTimesForDay day={6} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[6]} value={this.state.workerHours[6].end_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateEndTimesForDay day={6} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n                    <Button onClick={handleSubmit}>Submit</Button>\r\n                  </Form>\r\n                )}\r\n            </Formik>\r\n          </Col>\r\n        </Row>\r\n      } \r\n    }\r\n\r\n    return (\r\n      <Container fluid>\r\n        <DisplayWithLoading/>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddWorkerForm;\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { Button } from 'react-bootstrap';\r\nimport './Worker.css'\r\n// import {\r\n//   addAlert\r\n// } from '../../reduxFolder/actions'\r\n// import store from '../../reduxFolder/store';\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nclass WorkerDashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n      workers: [],\r\n      redirectToWorkerEditForm: null,\r\n      redirectToWorkerDisplay: null\r\n    }\r\n  }\r\n\r\n  triggerWorkerEditForm(workerPassed) {\r\n    this.props.history.push({\r\n      pathname: '/stores/' + this.props.match.params.store_id + '/workers/' + workerPassed.id + '/edit',\r\n      state: {\r\n        worker: workerPassed\r\n      }\r\n    })\r\n  }\r\n\r\n  triggerWorkerDisplay(workerPassed) {\r\n    this.props.history.push({\r\n      pathname: '/stores/' + this.props.match.params.store_id + '/workers/' + workerPassed.id,\r\n      state: {\r\n        worker: workerPassed\r\n      }\r\n    })\r\n  }\r\n\r\n  triggerAddWorker() {\r\n    this.props.history.push({\r\n      pathname: '/stores/addWorker/' + this.props.match.params.store_id\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    if(this.props.location.state && this.props.location.state.workers){\r\n      this.setState({\r\n        workers: this.props.location.state.workers\r\n      })\r\n    }\r\n    else{\r\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/workers', {\r\n        method: \"GET\",\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      })\r\n      .then(function(response){\r\n        if(response.status!==200){\r\n          // throw an error alert\r\n          // store.dispatch(addAlert(response))\r\n        }\r\n        else{\r\n          return response.json();\r\n        }\r\n      })\r\n      .then(data => {\r\n        if(data){\r\n          this.setState({\r\n            workers: data\r\n          })\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let workers = null;\r\n    if(this.state.workers.length != 0){\r\n      workers = <div>\r\n                  {this.state.workers.map(worker => (\r\n                    <Col key={\"worker-\" + worker.id}>\r\n                      <Button onClick={() => this.triggerWorkerDisplay(worker)}>Show Worker</Button>\r\n                      <Button onClick={() => this.triggerWorkerEditForm(worker)}>Edit Worker</Button>\r\n                    </Col>\r\n                  ))}\r\n                </div>\r\n    }\r\n    else{\r\n      workers = <div>\r\n                  <p className=\"noResults\">No Workers!</p>\r\n                  <Button onClick={() => this.triggerAddWorker()}>Add Worker</Button>\r\n                </div>\r\n    }\r\n\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"justify-content-center\">\r\n          {workers}\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WorkerDashboard;","import React from 'react';\r\nimport '../../App.css';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Select from 'react-select';\r\nimport {\r\n  addAlert\r\n} from '../../reduxFolder/actions/alert'\r\nimport store from '../../reduxFolder/store';\r\nimport GridLoader from 'react-spinners/GridLoader'\r\nimport { css } from '@emotion/core'\r\nimport { withRouter } from \"react-router\"\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n\r\n\r\nclass WorkerEditForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      worker: {\r\n        id: 0,\r\n        store_id: 0,\r\n        services: [],\r\n        user_id: 0,\r\n        created_at: \"\",\r\n        first_name: \"\",\r\n        last_name: \"\"\r\n      },\r\n      options: [\r\n        { value: 0, label: 'Brazilian Blowout' },\r\n        { value: 1, label: 'Manicure' },\r\n      ],\r\n      serviceMapping: {\r\n        0: \"Brazilian Blowout\",\r\n        1: \"Manicure\"\r\n      },\r\n      storeHours: [\r\n        { day_of_the_week: 0, start_time: 0, end_time: 0}, \r\n        { day_of_the_week: 1, start_time: 0, end_time: 0},\r\n        { day_of_the_week: 2, start_time: 0, end_time: 0},\r\n        { day_of_the_week: 3, start_time: 0, end_time: 0},\r\n        { day_of_the_week: 4, start_time: 0, end_time: 0},\r\n        { day_of_the_week: 5, start_time: 0, end_time: 0},\r\n        { day_of_the_week: 6, start_time: 0, end_time: 0}\r\n      ],\r\n      workerHours: [\r\n        { day_of_the_week: 0, start_time: 0, end_time: 0}, \r\n        { day_of_the_week: 1, start_time: 0, end_time: 0},\r\n        { day_of_the_week: 2, start_time: 0, end_time: 0},\r\n        { day_of_the_week: 3, start_time: 0, end_time: 0},\r\n        { day_of_the_week: 4, start_time: 0, end_time: 0},\r\n        { day_of_the_week: 5, start_time: 0, end_time: 0},\r\n        { day_of_the_week: 6, start_time: 0, end_time: 0}\r\n      ],\r\n      loading: true,\r\n      newHours: [],\r\n      weekIsWorking: [true, true, true, true, true, true, true]\r\n    };\r\n\r\n    // Schema for yup\r\n    // this.yupValidationSchema = Yup.object().shape({\r\n    //   services: Yup.string()\r\n    //     .required(\"Service is required\")\r\n    //   // .nullable()\r\n    // });\r\n\r\n    this.triggerWorkerDisplay = this.triggerWorkerDisplay.bind(this);\r\n  }\r\n\r\n  // redirect to the store display page and pass the new store data\r\n  triggerWorkerDisplay(returnedWorker) {\r\n    this.props.history.push({\r\n      pathname: '/stores/' + this.props.match.params.store_id + '/workers/' + this.props.match.params.worker_id,\r\n      state: {\r\n        worker: returnedWorker\r\n      }\r\n    })\r\n  }\r\n\r\n  convertMinsToHrsMins(mins) {\r\n    let h = Math.floor(mins / 60);\r\n    let m = mins % 60;\r\n    let am = false\r\n    if (h == 24) {\r\n      am = true\r\n      h -= 12\r\n    }\r\n    else if (h < 12) {\r\n      am = true\r\n    } else if (h != 12) {\r\n      h -= 12\r\n    }\r\n    h = h < 10 ? '0' + h : h;\r\n    if (h == 0) {\r\n      h = '12'\r\n    }\r\n    m = m < 10 ? '0' + m : m;\r\n    if (am) {\r\n      return `${h}:${m}am`;\r\n    } else {\r\n      return `${h}:${m}pm`;\r\n    }\r\n\r\n  }\r\n\r\n  handleSelectChange = (event) => {\r\n    var days = ['formHoursMonday', 'formHoursTuesday', 'formHoursWednesday', 'formHoursThursday', 'formHoursFriday', 'formHoursSaturday', 'formHoursSunday']\r\n    var day = days.indexOf(event.target.id)\r\n    var updateNewHours = this.state.newHours\r\n    var old_start_time = 0\r\n    var old_end_time = 0\r\n    var newWorkerHours = []\r\n    if (this.state.newHours[day]) {\r\n      old_start_time = this.state.newHours[day].start_time\r\n      old_end_time = this.state.newHours[day].end_time\r\n    } else {\r\n      old_start_time = this.state.workerHours[day].start_time\r\n      old_end_time = this.state.workerHours[day].end_time\r\n    }\r\n\r\n    if (parseInt(event.target.querySelector('option').value) <= 840) {\r\n      updateNewHours[day] = { start_time: parseInt(event.target.value), end_time: old_end_time }\r\n      newWorkerHours = [\r\n        ...this.state.workerHours.slice(0, day),\r\n        { start_time: parseInt(event.target.value), end_time: old_end_time },\r\n        ...this.state.workerHours.slice(day + 1)\r\n      ]\r\n    } else {\r\n      updateNewHours[day] = { start_time: old_start_time, end_time: parseInt(event.target.value) }\r\n      newWorkerHours = [\r\n        ...this.state.workerHours.slice(0, day),\r\n        { start_time: old_start_time, end_time: parseInt(event.target.value) },\r\n        ...this.state.workerHours.slice(day + 1)\r\n      ]\r\n    }\r\n\r\n    this.setState({\r\n      newHours: updateNewHours,\r\n      workerHours: newWorkerHours\r\n    })\r\n  };\r\n\r\n  handleDayStatusChange = (day) => {\r\n    var updateWeekIsWorking = [\r\n      ...this.state.weekIsWorking.slice(0, day),\r\n      !this.state.weekIsWorking[day],\r\n      ...this.state.weekIsWorking.slice(day + 1)\r\n    ]\r\n\r\n    this.setState({\r\n      weekIsWorking: updateWeekIsWorking\r\n    })\r\n  };\r\n\r\n  componentDidMount() {\r\n    if(this.props.location.state && this.props.location.state.worker){\r\n      this.setState({\r\n        worker: this.props.location.state.worker\r\n      })\r\n    }\r\n    else{\r\n      // first we fetch the service itself\r\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/workers/' + this.props.match.params.worker_id, {\r\n        method: \"GET\",\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      })\r\n      .then(function(response){\r\n        if(response.status!==200){\r\n          // throw an error alert\r\n          store.dispatch(addAlert(response))\r\n        }\r\n        else{\r\n          return response.json();\r\n        }\r\n      })\r\n      .then(data => {\r\n        if(data){\r\n          this.setState({\r\n            worker: this.props.location.state.worker\r\n          })\r\n        }\r\n      });\r\n    }\r\n\r\n    Promise.all([\r\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/workers/' + this.props.match.params.worker_id + '/hours', {\r\n        method: \"GET\",\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      }).then(value => value.json()),\r\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/storeHours\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      }).then(value => value.json())\r\n    ]).then(allResponses => {\r\n      this.setState({\r\n        storeHours: allResponses[1],\r\n        workerHours: allResponses[0],\r\n        loading: false\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const CreateStartTimesForDay = (props) => {\r\n      let items = [];\r\n      for (let i = this.state.storeHours[props.day].open_time; i <= 840; i += 60) {\r\n        items.push(<option key={i} value={i}>{this.convertMinsToHrsMins(i)}</option>);\r\n      }\r\n      return items;\r\n    }\r\n    const CreateEndTimesForDay = (props) => {\r\n      let items = [];\r\n      for (let i = 900; i <= this.state.storeHours[props.day].close_time; i += 60) {\r\n        items.push(<option key={i} value={i}>{this.convertMinsToHrsMins(i)}</option>);\r\n      }\r\n      return items;\r\n    }\r\n\r\n    const DisplayWithLoading = (props) => {\r\n      if (this.state.loading) {\r\n        return <Row className=\"vertical-center\">\r\n          <Col>\r\n            <GridLoader\r\n              css={override}\r\n              size={20}\r\n              color={\"#2196f3\"}\r\n              loading={this.state.isLoading}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      } else {\r\n        return <Row className=\"justify-content-center\">\r\n          <Col>\r\n            <Formik\r\n              enableReinitialize\r\n              initialValues={{\r\n                services: this.state.worker.services,\r\n                id: this.state.worker.id,\r\n                store_id: this.state.worker.store_id,\r\n                user_id: this.state.worker.user_id,\r\n                created_at: this.state.worker.created_at,\r\n                first_name: this.state.worker.first_name,\r\n                last_name: this.state.worker.last_name,\r\n                newHours: this.state.newHours,\r\n                noChange: false\r\n              }}\r\n              validationSchema={this.yupValidationSchema}\r\n              onSubmit={(values) => {\r\n\r\n                let store_id = this.props.match.params.store_id\r\n                let worker_id = this.props.match.params.worker_id\r\n                let triggerWorkerDisplay = this.triggerWorkerDisplay;\r\n                values.newHours.map((day, index) => {\r\n                  if(this.state.weekIsWorking[index]){\r\n                    return day\r\n                  } else {\r\n                    return {start_time: null, end_time: null}\r\n                  }\r\n                })\r\n                // not sure if we need this, commenting it out for now\r\n                // if(JSON.stringify(values.services)==JSON.stringify(this.state.receivedServices)) {\r\n                //   values.noChange = true\r\n                // }\r\n\r\n                fetch(fetchDomain + '/stores/' + store_id + '/workers/' + worker_id, {\r\n                  method: \"POST\",\r\n                  headers: {\r\n                    'Content-type': 'application/json'\r\n                  },\r\n                  credentials: 'include',\r\n                  body: JSON.stringify(values)\r\n                })\r\n                  .then(function (response) {\r\n                    if (response.status !== 200) {\r\n                      store.dispatch(addAlert(response))\r\n                    }\r\n                    else {\r\n                      // redirect to worker page\r\n                      return response.json()\r\n                    }\r\n                  })\r\n                  .then(data => {\r\n                    if (data) {\r\n                      // this.props.updateWorker(this.state.worker, this.state.newHours, values.services)\r\n                      triggerWorkerDisplay(data)\r\n                    }\r\n                  });\r\n              }}\r\n            >\r\n              {({ values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                setFieldValue }) => (\r\n                  <Form>\r\n                    <h3>Worker Edit</h3>\r\n\r\n                    {/* Later make this work with store hours*/}\r\n                    <h4>Worker Hours</h4>\r\n\r\n                    <Form.Group controlId=\"formHoursMonday\">\r\n                      <Form.Row className=\"text-left\">\r\n                        <Col>\r\n                          <h5>Monday</h5>\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"monday-toggle\"\r\n                            label=\"Working Today?\"\r\n                            checked={this.state.weekIsWorking[0]}\r\n                            onChange={() => this.handleDayStatusChange(0)}\r\n                          />\r\n                        </Col>\r\n                      </Form.Row>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[0]} value={this.state.workerHours[0].start_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateStartTimesForDay day={0} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[0]} value={this.state.workerHours[0].end_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateEndTimesForDay day={0} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formHoursTuesday\">\r\n                      <Form.Row className=\"text-left\">\r\n                        <Col>\r\n                          <h5>Tuesday</h5>\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"tuesday-toggle\"\r\n                            label=\"Working Today?\"\r\n                            checked={this.state.weekIsWorking[1]}\r\n                            onChange={() => this.handleDayStatusChange(1)}\r\n                          />\r\n                        </Col>\r\n                      </Form.Row>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[1]} value={this.state.workerHours[1].start_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateStartTimesForDay day={1} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[1]} value={this.state.workerHours[1].end_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateEndTimesForDay day={1} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group controlId=\"formHoursWednesday\">\r\n                      <Form.Row className=\"text-left\">\r\n                        <Col>\r\n                          <h5>Wednesday</h5>\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"wednesday-toggle\"\r\n                            label=\"Working Today?\"\r\n                            checked={this.state.weekIsWorking[2]}\r\n                            onChange={() => this.handleDayStatusChange(2)}\r\n                          />\r\n                        </Col>\r\n                      </Form.Row>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[2]} value={this.state.workerHours[2].start_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateStartTimesForDay day={2} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[2]} value={this.state.workerHours[2].end_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateEndTimesForDay day={2} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formHoursThursday\">\r\n                      <Form.Row className=\"text-left\">\r\n                        <Col>\r\n                          <h5>Thursday</h5>\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"thursday-toggle\"\r\n                            label=\"Working Today?\"\r\n                            checked={this.state.weekIsWorking[3]}\r\n                            onChange={() => this.handleDayStatusChange(3)}\r\n                          />\r\n                        </Col>\r\n                      </Form.Row>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[3]} value={this.state.workerHours[3].start_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateStartTimesForDay day={3} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[3]} value={this.state.workerHours[3].end_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateEndTimesForDay day={3} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group controlId=\"formHoursFriday\">\r\n                      <Form.Row className=\"text-left\">\r\n                        <Col>\r\n                          <h5>Friday</h5>\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"friday-toggle\"\r\n                            label=\"Working Today?\"\r\n                            checked={this.state.weekIsWorking[4]}\r\n                            onChange={() => this.handleDayStatusChange(4)}\r\n                          />\r\n                        </Col>\r\n                      </Form.Row>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[4]} value={this.state.workerHours[4].start_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateStartTimesForDay day={4} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[4]} value={this.state.workerHours[4].end_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateEndTimesForDay day={4} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formHoursSaturday\">\r\n                      <Form.Row className=\"text-left\">\r\n                        <Col>\r\n                          <h5>Saturday</h5>\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"saturday-toggle\"\r\n                            label=\"Working Today?\"\r\n                            checked={this.state.weekIsWorking[5]}\r\n                            onChange={() => this.handleDayStatusChange(5)}\r\n                          />\r\n                        </Col>\r\n                      </Form.Row>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[5]} value={this.state.workerHours[5].start_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateStartTimesForDay day={5} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[5]} value={this.state.workerHours[5].end_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateEndTimesForDay day={5} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group controlId=\"formHoursSunday\">\r\n                      <Form.Row className=\"text-left\">\r\n                        <Col>\r\n                          <h5>Sunday</h5>\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"sunday-toggle\"\r\n                            label=\"Working Today?\"\r\n                            checked={this.state.weekIsWorking[6]}\r\n                            onChange={() => this.handleDayStatusChange(6)}\r\n                          />\r\n                        </Col>\r\n                      </Form.Row>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[6]} value={this.state.workerHours[6].start_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateStartTimesForDay day={6} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[6]} value={this.state.workerHours[6].end_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateEndTimesForDay day={6} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n                    <Button onClick={handleSubmit}>Submit</Button>\r\n                  </Form>\r\n                )}\r\n            </Formik>\r\n          </Col>\r\n        </Row>\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Container fluid>\r\n        <DisplayWithLoading />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(WorkerEditForm);\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Image from 'react-bootstrap/Image'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport './WorkerDisplay.css'\r\nimport Calendar from '../Calendar/CalendarPage'\r\nimport WorkerEditForm from './WorkerEditForm';\r\nimport GridLoader from 'react-spinners/GridLoader'\r\nimport { css } from '@emotion/core'\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n\r\nclass WorkerDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      worker: {\r\n        id: 0,\r\n        store_id: 0,\r\n        services: [],\r\n        user_id: 0,\r\n        created_at: \"\",\r\n        first_name: [],\r\n        last_name: \"\"\r\n      },\r\n      serviceMapping: {\r\n        0: \"Brazilian Blowout\",\r\n        1: \"Manicure\"\r\n      },\r\n      loading: true,\r\n      workerHours: [],\r\n      receivedServices: [],\r\n      selectedOption: [],\r\n      storeHours: [],\r\n      choice: 0,\r\n      daysOfWeek: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\r\n    }\r\n  }\r\n\r\n  convertMinsToHrsMins(mins) {\r\n    let h = Math.floor(mins / 60);\r\n    let m = mins % 60;\r\n    let am = false\r\n    if (h == 24) {\r\n      am = true\r\n      h -= 12\r\n    }\r\n    else if (h < 12) {\r\n      am = true\r\n    } else if (h != 12) {\r\n      h -= 12\r\n    }\r\n    h = h < 10 ? '0' + h : h;\r\n    if (h == 0) {\r\n      h = '12'\r\n    }\r\n    m = m < 10 ? '0' + m : m;\r\n    if (am) {\r\n      return `${h}:${m}am`;\r\n    } else {\r\n      return `${h}:${m}pm`;\r\n    }\r\n\r\n  }\r\n\r\n  updateWorker = (worker, newHours, services) => {\r\n    let updateHours = this.state.workerHours.map((dayHours, index) =>{\r\n      if(newHours[index] != null) {\r\n        return newHours[index]\r\n      } else {\r\n        return dayHours\r\n      }\r\n    })\r\n    this.setState({\r\n      worker: worker,\r\n      workerHours: updateHours,\r\n      receivedServices: services\r\n    })\r\n  }\r\n\r\n  updateContent = (selectedChoice) => {\r\n    this.setState({\r\n      choice: selectedChoice\r\n    })\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.location && this.props.location.state && this.props.location.state.worker) {\r\n      let convertedServices = this.props.location.state.worker.services.map((service) => ({ value: service, label: this.state.serviceMapping[service] }));\r\n      Promise.all([\r\n        fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/workers/' + this.props.match.params.worker_id + '/hours', {\r\n          method: \"GET\",\r\n          headers: {\r\n            'Content-type': 'application/json'\r\n          },\r\n          credentials: 'include'\r\n        }).then(value => value.json()),\r\n        fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/storeHours\", {\r\n          method: \"GET\",\r\n          headers: {\r\n            'Content-type': 'application/json'\r\n          },\r\n          credentials: 'include'\r\n        }).then(value => value.json())\r\n      ]).then(allResponses => {\r\n        let receivedWorkerHours = allResponses[1].map((day) => ({ start_time: day.open_time, end_time: day.close_time }));\r\n        if (allResponses[0] && allResponses[0].length == 7) {\r\n          receivedWorkerHours = allResponses[0]\r\n        } else {\r\n          this.setState({\r\n            newHours: receivedWorkerHours\r\n          })\r\n        }\r\n        this.setState({\r\n          worker: this.props.location.state.worker,\r\n          receivedServices: this.props.location.state.worker.services,\r\n          storeHours: allResponses[1],\r\n          workerHours: receivedWorkerHours,\r\n          loading: false\r\n        })\r\n      })\r\n    }\r\n    else {\r\n      Promise.all([\r\n        fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/workers/' + this.props.match.params.worker_id, {\r\n          method: \"GET\",\r\n          headers: {\r\n            'Content-type': 'application/json'\r\n          },\r\n          credentials: 'include'\r\n        }).then(value => value.json()),\r\n        fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/storeHours\", {\r\n          method: \"GET\",\r\n          headers: {\r\n            'Content-type': 'application/json'\r\n          },\r\n          credentials: 'include'\r\n        }).then(value => value.json()),\r\n        fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/workers/' + this.props.match.params.worker_id + '/hours', {\r\n          method: \"GET\",\r\n          headers: {\r\n            'Content-type': 'application/json'\r\n          },\r\n          credentials: 'include'\r\n        }).then(value => value.json())\r\n      ]).then(allResponses => {\r\n        let convertedServices = allResponses[0].services.map((service) => ({ value: service, label: this.state.serviceMapping[service] }));\r\n        let receivedWorkerHours = allResponses[1].map((day) => ({ start_time: day.open_time, end_time: day.close_time }));\r\n\r\n        // If worker hours are not complete, we default them to store hours. Worker hours should be complete though. \r\n        if (allResponses[2] && allResponses[2].length == 7) {\r\n          receivedWorkerHours = allResponses[2]\r\n        } else {\r\n          this.setState({\r\n            newHours: receivedWorkerHours\r\n          })\r\n        }\r\n        this.setState({\r\n          worker: allResponses[0],\r\n          receivedServices: allResponses[0].services,\r\n          selectedOption: convertedServices,\r\n          storeHours: allResponses[1],\r\n          workerHours: receivedWorkerHours,\r\n          loading: false\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const ListWorkingHours = () => {\r\n      let items = [];\r\n      for (let i = 0; i < this.state.workerHours.length; i++) {\r\n        if (this.state.workerHours[i].start_time != null) {\r\n          items.push(<Col sm=\"11\" md=\"10\" key={i}><ListGroup.Item>{this.state.daysOfWeek[i]}: {this.convertMinsToHrsMins(this.state.workerHours[i].start_time)}-{this.convertMinsToHrsMins(this.state.workerHours[i].end_time)}</ListGroup.Item></Col>);\r\n        }\r\n        else {\r\n          items.push(<Col sm=\"11\" md=\"10\" key={i}><ListGroup.Item>{this.state.daysOfWeek[i]}: Off</ListGroup.Item></Col>);\r\n        }\r\n      }\r\n      return items;\r\n    }\r\n\r\n    const RenderProfileContent = () => {\r\n      if(this.state.choice == 0) {\r\n        return <Calendar/>\r\n      } else if(this.state.choice == 1) {\r\n        return <WorkerEditForm worker={this.state.worker} receivedServices={this.state.receivedServices} selectedOption={this.state.selectedOption} storeHours={this.state.storeHours} workerHours={this.state.workerHours} updateWorker={this.updateWorker}/>\r\n      } else {\r\n        return <p>Past Appointments go here....</p>\r\n      }\r\n    }\r\n\r\n    const DisplayWithLoading = (props) => {\r\n      if (this.state.loading) {\r\n        return <Row className=\"vertical-center\">\r\n          <Col>\r\n            <GridLoader\r\n              css={override}\r\n              size={20}\r\n              color={\"#2196f3\"}\r\n              loading={this.state.isLoading}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      } else {\r\n        {/* CITATION: https://bootsnipp.com/snippets/M48pA */}\r\n        return <Row className=\"profile\">\r\n        <Col xs=\"11\" md=\"3\">\r\n        <div className=\"profile-sidebar\">\r\n            {/* <!-- SIDEBAR USERPIC --> */}\r\n            <div className=\"profile-userpic\">\r\n              <Image src=\"https://i.redd.it/v0caqchbtn741.jpg\" className=\"img-responsive\" alt=\"\" rounded />\r\n            </div>\r\n            {/* <!-- END SIDEBAR USERPIC --> */}\r\n\r\n            {/* <!-- SIDEBAR USER TITLE --> */}\r\n            <div className=\"profile-usertitle\">\r\n              <div className=\"profile-usertitle-name\">\r\n                {this.state.worker.first_name + \" \" + this.state.worker.last_name}\r\n              </div>\r\n              <div className=\"profile-usertitle-job\">\r\n                Stylist\r\n              </div>\r\n            </div>\r\n            {/* <!-- END SIDEBAR USER TITLE --> */}\r\n\r\n            {/* <!-- SIDEBAR BUTTONS --> */}\r\n            <div className=\"profile-userbuttons\">\r\n              <button type=\"button\" className=\"btn btn-success btn-sm\">Give a Raise</button>\r\n              <button type=\"button\" className=\"btn btn-danger btn-sm\">Lay Off</button>\r\n            </div>\r\n            {/* <!-- END SIDEBAR BUTTONS --> */}\r\n\r\n            {/* WORKING HOURS */}\r\n            <ListGroup variant=\"flush\">\r\n              <Row className=\"justify-content-center mt-4\">\r\n                <h5>Working Hours</h5>\r\n                <ListWorkingHours/>\r\n              </Row>\r\n            </ListGroup>\r\n            {/* END WORKING HOURS */}\r\n\r\n            {/* <!-- SIDEBAR MENU --> */}\r\n            <div className=\"profile-usermenu\">\r\n              <Nav defaultActiveKey=\"link-0\" className=\"flex-column\" variant=\"pills\">\r\n                <Nav.Link eventKey=\"link-0\" active={this.state.choice == 0} onClick={() => this.updateContent(0)}>Calendar</Nav.Link>\r\n                <Nav.Link eventKey=\"link-1\" active={this.state.choice == 1}  onClick={() => this.updateContent(1)}>Edit Profile</Nav.Link>\r\n                <Nav.Link eventKey=\"link-2\" active={this.state.choice == 2} onClick={() => this.updateContent(2)}>Past Appointments</Nav.Link>\r\n              </Nav>\r\n            </div>\r\n            {/* <!-- END MENU --> */}\r\n\r\n          </div>\r\n        </Col>\r\n\r\n        <Col xs=\"11\" md=\"9\">\r\n        <div className=\"profile-content\">\r\n            <RenderProfileContent/>\r\n          </div>\r\n        </Col>\r\n          \r\n      </Row>\r\n      }\r\n    }\r\n    return (\r\n      <Container fluid>\r\n        {/* <Row className=\"justify-content-center\">\r\n          <Col>\r\n            <h1>{this.state.worker.first_name}</h1>\r\n            <p>{this.state.worker.last_name}</p>\r\n            <ul>\r\n                {this.state.worker.services.map((service, index) => (\r\n                  <li key={\"cat-\" + index}>{this.state.serviceMapping[service]}</li>\r\n                ))}\r\n              </ul>\r\n          </Col>\r\n        </Row> */}\r\n        <DisplayWithLoading/>\r\n        \r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WorkerDisplay;","import React from 'react';\r\nimport '../../App.css';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport { FaDollarSign, FaHandshake, FaHourglassHalf, FaPen } from 'react-icons/fa';\r\nimport { Formik } from 'formik';\r\nimport Select from 'react-select';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  addAlert\r\n} from '../../reduxFolder/actions/alert'\r\nimport store from '../../reduxFolder/store';\r\n// import { uploadHandler } from '../s3';\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nclass AddServiceForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '', // assuming this is a unique value for file upload\r\n      cost: '',\r\n      duration: '',\r\n      description: '',\r\n      workers: [],\r\n      category: [],\r\n      store_id: '',\r\n      categoryOptions: [\r\n        { value: 'nails', label: 'Nails' },\r\n        { value: 'hair', label: 'Hair' }\r\n      ],\r\n      workerOptions: [],\r\n      selectedOption: null,\r\n      selectedFiles: null\r\n    };\r\n\r\n    // Schema for yup\r\n    this.yupValidationSchema = Yup.object().shape({\r\n      name: Yup.string()\r\n      .min(2, \"Name must have at least 2 characters\")\r\n      .max(100, \"Name can't be longer than 100 characters\")\r\n      .required(\"Name is required\"),\r\n      description: Yup.string()\r\n      .min(20, \"Description must have at least 20 characters\")\r\n      .required(\"Description is required\"), // will make it required soon,\r\n      cost: Yup.number()\r\n      .positive(\"Cost must be positive\")\r\n      // .integer()\r\n      .required(\"Cost is required\"),\r\n      duration: Yup.number()\r\n      .positive(\"Duration must be positive\")\r\n      .integer(\"Duration must be an integer\")\r\n      .required(\"Duration is required\"),\r\n      workers: Yup.array()\r\n      .required(\"Worker is required\")\r\n      .nullable(),\r\n      category: Yup.array()\r\n      .required(\"Category is required\")\r\n      .nullable()\r\n      // pictures: Yup.array()\r\n      // .required(\"Picture is required\")\r\n      // .nullable()\r\n    });\r\n\r\n    this.triggerServiceDisplay = this.triggerServiceDisplay.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // need to get store category, fetch?\r\n    fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/workers\" , {\r\n      method: \"GET\",\r\n      headers: {\r\n          'Content-type': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    .then(function(response){\r\n      if(response.status!==200){\r\n        // throw an error alert\r\n        store.dispatch(addAlert(response))\r\n      }\r\n      else{\r\n        return response.json();\r\n      }\r\n    })\r\n    .then(data => {\r\n      if(data){\r\n        let convertedWorkers = data.map((worker) => ({ value: worker.id, label: worker.first_name + \" \" + worker.last_name }));\r\n        this.setState({\r\n          workerOptions: convertedWorkers\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  // redirect to the worker display page\r\n  componentDidUpdate(prevProps, prevState)  {\r\n    if (prevProps.service !== this.props.service) {\r\n      this.props.history.push({\r\n        pathname: '/stores/' + this.props.service.store_id + '/services/' + this.props.service.id\r\n      })\r\n    }\r\n  }\r\n\r\n  // redirect to the worker display page and pass the new worker data\r\n  triggerServiceDisplay(service) {\r\n    this.props.history.push({\r\n      pathname: '/stores/' + service.store_id + '/services/' + service.id,\r\n      state: {\r\n        service: service\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  fileChangedHandler = event => {\r\n    this.setState({ selectedFiles: event.target.files })\r\n  }\r\n    \r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"justify-content-center\">\r\n          <Col xs={8} sm={7} md={6} lg={5}>\r\n            <Formik\r\n              enableReinitialize\r\n              initialValues={{\r\n                name: '',\r\n                cost: '',\r\n                duration: '',\r\n                description: '',\r\n                pictures: [],\r\n                workers: [],\r\n                category: [],\r\n                store_id: this.props.match.params.store_id\r\n              }}\r\n              validationSchema={this.yupValidationSchema}\r\n              onSubmit={async (values, {setSubmitting }) => {\r\n                let store_id = this.props.match.params.store_id\r\n                let triggerServiceDisplay = this.triggerServiceDisplay\r\n\r\n                values.category = values.category.map(function(val){ \r\n                  return val.label; \r\n                })\r\n\r\n                values.workers = values.workers.map(function(val){ \r\n                  return val.value; \r\n                })\r\n\r\n                // upload to s3 from client to avoid burdening back end\r\n                // let prefix = 'stores/' + this.props.match.params.store_id + '/services/' + values.name + '/'\r\n                // await uploadHandler(prefix, this.state.selectedFiles)\r\n\r\n                fetch(fetchDomain + '/stores/addService/' + store_id, {\r\n                  method: \"POST\",\r\n                  headers: {\r\n                    'Content-type': 'application/json'\r\n                  },\r\n                  credentials: 'include',\r\n                  body: JSON.stringify(values)\r\n                })\r\n                .then(function(response){\r\n                  if(response.status!==200){\r\n                    store.dispatch(addAlert(response))\r\n                  }\r\n                  else{\r\n                    return response.json();\r\n                  }\r\n                })\r\n                .then(function(data){\r\n                  // redirect to home page signed in\r\n                  if(data){\r\n                    triggerServiceDisplay(data)\r\n                  }\r\n                })\r\n\r\n                setSubmitting(false)\r\n              }}\r\n            >\r\n            {( {values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                setFieldValue}) => (\r\n              <Form className=\"formBody rounded\">\r\n                <h3>Add Service</h3>\r\n\r\n                <Form.Group controlId=\"formService\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaHandshake/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control type=\"text\" \r\n                      value={values.name} \r\n                      placeholder=\"Name of Service\" \r\n                      name=\"name\" \r\n                      onChange={handleChange} \r\n                      onBlur={handleBlur}\r\n                      className={touched.name && errors.name ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.name && errors.name ? (\r\n                    <div className=\"error-message\">{errors.name}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formCost\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaDollarSign/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control type=\"text\" \r\n                    value={values.cost}\r\n                    placeholder=\"Cost\" \r\n                    name=\"cost\" \r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={touched.cost && errors.cost ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.cost && errors.cost ? (\r\n                    <div className=\"error-message\">{errors.cost}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formDuration\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaHourglassHalf/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control \r\n                      type=\"text\"\r\n                      value={values.duration}\r\n                      placeholder=\"Duration (in min)\" \r\n                      name=\"duration\" \r\n                      onChange={handleChange} \r\n                      onBlur={handleBlur}\r\n                      className={touched.duration && errors.duration ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.duration && errors.duration ? (\r\n                    <div className=\"error-message\">{errors.duration}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formDescription\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <FaPen/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control \r\n                      type=\"textarea\"\r\n                      rows={3}\r\n                      value={values.description}\r\n                      placeholder=\"Description\" \r\n                      name=\"description\" \r\n                      onChange={handleChange} \r\n                      onBlur={handleBlur}\r\n                      className={touched.description && errors.description ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.description && errors.description ? (\r\n                    <div className=\"error-message\">{errors.description}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formWorkers\">\r\n                  <Select\r\n                    value={values.workers}\r\n                    onChange={option => setFieldValue(\"workers\", option)}\r\n                    name=\"workers\"\r\n                    options={this.state.workerOptions}\r\n                    isMulti={true}\r\n                    placeholder={\"Assigned Workers\"}\r\n                    className={touched.workers && errors.workers ? \"error\" : null}\r\n                  />\r\n                  {touched.workers && errors.workers ? (\r\n                    <div className=\"error-message\">{errors.workers}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formCategory\">\r\n                  <Select\r\n                    value={values.category}\r\n                    onChange={option => setFieldValue(\"category\", option)}\r\n                    name=\"category\"\r\n                    options={this.state.categoryOptions}\r\n                    isMulti={true}\r\n                    placeholder={\"Category\"}\r\n                    className={touched.category && errors.category ? \"error\" : null}\r\n                  />\r\n                  {touched.category && errors.category ? (\r\n                    <div className=\"error-message\">{errors.category}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formPictures\">\r\n                  <input \r\n                    onChange={this.fileChangedHandler}\r\n                    type=\"file\"\r\n                    multiple\r\n                    className={touched.pictures && errors.pictures ? \"error\" : null}\r\n                  />\r\n                  {touched.pictures && errors.pictures ? (\r\n                    <div className=\"error-message\">{errors.pictures}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Button onClick={handleSubmit}>Submit</Button>\r\n              </Form>\r\n            )}\r\n            </Formik>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => ({\r\n//   service: state.serviceReducer.service,\r\n//   workerOptions: state.workerReducer.workerOptions\r\n// })\r\n\r\n// const mapDispatchToProps = dispatch => bindActionCreators({\r\n//   addService: (service, store_id) => addService(service, store_id),\r\n//   getWorkerOptions: (store_id) => getWorkerOptions(store_id)\r\n// }, dispatch)\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(AddServiceForm);\r\nexport default AddServiceForm;","// this component is ready to be reusable for WorkerDashboard.js, if we decide that it can have the same\r\n// view as this one... just need to rename to StoreserviceDashboard.js\r\n\r\nimport React from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { Button } from 'react-bootstrap';\r\n// import {\r\n//   addAlert\r\n// } from '../../reduxFolder/actions'\r\n// import store from '../../reduxFolder/store';\r\nimport './Services.css';\r\n// import eyelash from '../../assets/eyelash4.png';\r\n// import wedding from '../../assets/wedding.jpg';\r\n// import gel from '../../assets/gel.jpg';\r\nimport { FaEdit } from 'react-icons/fa';\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nconst colors = ['#f0d1d9', '#f7e5e4', '#d6ced3'];\r\n\r\nclass ServiceDashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n      services: [\r\n        // {\r\n        //   id: '0',\r\n        //   name: 'Eyelash Remove',\r\n        //   category: 'Eyelashes',\r\n        //   cost: '25',\r\n        //   duration: '20',\r\n        //   description: 'Remove your eyelashes or something like that',\r\n        //   workers: ['Tiffany', 'Yuki'],\r\n        //   // pictures: [eyelash]\r\n        // },\r\n        // {\r\n        //   id: '1',\r\n        //   name: 'Gel Manicure',\r\n        //   category: 'Nails',\r\n        //   cost: '30',\r\n        //   duration: '60',\r\n        //   description: 'Its like a regular manicure, with gel!',\r\n        //   workers: ['Tiffany', 'Yuki'],\r\n        //   // pictures: [gel]\r\n        // },\r\n        // {\r\n        //   id: '2',\r\n        //   name: 'Wedding Makeup',\r\n        //   category: 'Makeup',\r\n        //   cost: '200',\r\n        //   duration: '120',\r\n        //   description: 'Full face makeup or something for your big day',\r\n        //   workers: ['Tiffany', 'Yuki'],\r\n        //   // pictures: [wedding]\r\n        // },\r\n      ]\r\n    }\r\n  }\r\n\r\n  triggerServiceEdit(servicePassed) {\r\n    this.props.history.push({\r\n      pathname: '/stores/' + this.props.match.params.store_id + \"/services/\" + servicePassed.id + '/edit',\r\n      state: {\r\n        service: servicePassed\r\n      }\r\n    })\r\n  }\r\n\r\n  triggerServiceDisplay(servicePassed) {\r\n    this.props.history.push({\r\n      pathname: '/stores/' + this.props.match.params.store_id + \"/services/\" + servicePassed.id,\r\n      state: {\r\n        service: servicePassed\r\n      }\r\n    })\r\n  }\r\n\r\n  triggerAddService() {\r\n    this.props.history.push({\r\n      pathname: '/stores/addService/' + this.props.match.params.store_id\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    if(this.props.location.state && this.props.location.state.services){\r\n      this.setState({\r\n        services: this.props.location.state.services\r\n      })\r\n    }\r\n    else{\r\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/services/\", {\r\n        method: \"GET\",\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      })\r\n      .then(function(response){\r\n        if(response.status!==200){\r\n          // throw an error alert\r\n          // store.dispatch(addAlert(response))\r\n        }\r\n        else{\r\n          return response.json();\r\n        }\r\n      })\r\n      .then(data => {\r\n        if(data){\r\n          this.setState({\r\n            services: data\r\n          })\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // need to add getPictures****\r\n\r\n\r\n  render() {\r\n    let services = null;\r\n\r\n    if(this.state.services.length > 0){\r\n      services = <Col>\r\n                    <p className=\"services_title\">My Services </p>\r\n                    <Button className=\"buttons\" onClick={() => this.triggerAddService()}>Add Service</Button>\r\n                    {/* <Button className=\"buttons\" onClick={() => this.triggerServiceEditForm()}>Edit Services</Button> */}\r\n                    <div className=\"service_container\">\r\n                      {this.state.services.map((service, indx) => (\r\n                        <Col key={\"service-\" + service.id}>\r\n\r\n                          <div className=\"service_card\">\r\n\r\n                          {/* {((service.id % 2) == 0) ? (\r\n                            <div className=\"service_img\">\r\n                              <img src={service.pictures[0]} style={{height: '500px', width:'100%'}}/>\r\n                            </div>\r\n                          ) : null} */}\r\n\r\n                            <div className=\"service_text\" style={{backgroundColor: `${colors[indx % 3]}`}}>\r\n                              <div className=\"fun_style\"> </div>\r\n                              <Col>\r\n                              <div className=\"title_container\" style={{backgroundColor: `${colors[indx % 3]}`}}>\r\n                                <span className=\"service_title\" onClick={() => this.triggerServiceDisplay(service)}> {service.name} </span>\r\n                                <FaEdit className=\"edit\" size={15} onClick={() => this.triggerServiceEdit(service)}/>\r\n                              </div>\r\n                              <Row>\r\n                                <div className=\"service_subtitle\">\r\n                                  <p> Category </p>\r\n                                  <p> Cost </p>\r\n                                  <p> Duration </p>\r\n                                  <p> Associated Workers </p>\r\n                                  <p> Description </p>\r\n                                </div>\r\n                                <div className=\"subtitle_values\" >\r\n                                  <p>  {service.category}  </p>\r\n                                  <p> $ {service.cost}  </p>\r\n                                  <p>  {service.duration} Minutes  </p>\r\n                                  <p> {service.workers} </p>\r\n                                  <p> {service.description} </p>\r\n                                </div>\r\n                              </Row>\r\n                            </Col>\r\n                            </div>\r\n\r\n                            {/* {((service.id % 2) != 0) ? (\r\n                              <div className=\"service_img\">\r\n                                <img src={service.pictures[0]} style={{height: '500px', width:'100%'}}/>\r\n                              </div>\r\n                            ) : null} */}\r\n\r\n                          </div>\r\n\r\n                        </Col>\r\n                      ))}\r\n                    </div>\r\n                  </Col>\r\n    }\r\n    else{\r\n      services = <div>\r\n                  <p className=\"noResults\">No Services!</p>\r\n                  <Button onClick={() => this.triggerAddService()}>Add Service</Button>\r\n                </div>\r\n    }\r\n    return (\r\n      <Container>\r\n        {services}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ServiceDashboard;\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n// import {\r\n//   addAlert\r\n// } from '../../reduxFolder/actions'\r\n// import store from '../../reduxFolder/store';\r\nimport LargeCarousel from '../LargeCarousel';\r\n// import { getPictures } from '../s3'\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nclass ServiceDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n      service: {\r\n        id: \"\",\r\n        name: \"\",\r\n        cost: \"\",\r\n        workers: [],\r\n        store_id: \"\",\r\n        category: \"\",\r\n        description: \"\"\r\n      },\r\n      pictures: []\r\n    }\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    // if (prevState.service !== this.state.service) {\r\n    //   let picturesFetched = await getPictures('stores/' + this.state.service.store_id + '/services/' + this.state.service.name + '/')\r\n    //   this.setState({\r\n    //     pictures: picturesFetched\r\n    //   })\r\n    // }\r\n\r\n    // can put this for now so we don't have to upload to s3\r\n    if(prevState.service !== this.state.service){\r\n      this.setState({\r\n        pictures: [\r\n          { \r\n            url: \"/hair.jpg\",\r\n            key: \"/hair.jpg\"\r\n          },\r\n          {\r\n            url: \"/nails.jpg\",\r\n            key: \"/nails.jpg\"\r\n          },\r\n          {\r\n            url: \"/salon.jpg\",\r\n            key: \"/salon.jpg\"\r\n          }\r\n        ]\r\n      })\r\n    }\r\n  }\r\n\r\n  async componentDidMount(): Promise<void> {\r\n    if(this.props.location.state && this.props.location.state.service){\r\n      \r\n      this.setState({\r\n        service: this.props.location.state.service\r\n      })\r\n    }\r\n    else{\r\n      const response = await fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/services/' + this.props.match.params.service_id, {\r\n        method: \"GET\",\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      })\r\n\r\n      const data = await response.json()\r\n      this.setState({\r\n        service: data\r\n      })\r\n    }\r\n\r\n    return Promise.resolve()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"justify-content-center\">\r\n          <Col>\r\n            <h1>{this.state.service.name}</h1>\r\n            <p>{this.state.service.description}</p>\r\n          </Col>\r\n\r\n          <Col xs={10} sm={9} md={8} lg={7}>\r\n            <LargeCarousel className=\"carousel\" pictures={this.state.pictures}/>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ServiceDisplay;","import React from 'react';\r\nimport '../../App.css';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport { FaDollarSign, FaHandshake, FaHourglassHalf, FaPen } from 'react-icons/fa';\r\nimport { Formik } from 'formik';\r\nimport Select from 'react-select';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  addAlert\r\n} from '../../reduxFolder/actions/alert'\r\nimport store from '../../reduxFolder/store';\r\nimport { getPictures, deleteHandler, uploadHandler } from '../s3'\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nclass ServiceEditForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      service: {\r\n        id: \"\",\r\n        name: \"\",\r\n        cost: \"\",\r\n        workers: [],\r\n        store_id: \"\",\r\n        category: \"\",\r\n        description: \"\"\r\n      },\r\n      categoryOptions: [\r\n        { value: 'nails', label: 'Nails' },\r\n        { value: 'hair', label: 'Hair' }\r\n      ],\r\n      convertedCategory: [],\r\n      workerOptions: [],\r\n      selectedOption: null,\r\n      pictures: [],\r\n      keys: [],\r\n      selectedFiles: []\r\n    };\r\n\r\n    // Schema for yup\r\n    this.yupValidationSchema = Yup.object().shape({\r\n      name: Yup.string()\r\n      .min(2, \"Name must have at least 2 characters\")\r\n      .max(100, \"Name can't be longer than 100 characters\")\r\n      .required(\"Name is required\"),\r\n      description: Yup.string()\r\n      .min(20, \"Description must have at least 20 characters\")\r\n      .required(\"Description is required\"), // will make it required soon,\r\n      cost: Yup.number()\r\n      .positive(\"Cost must be positive\")\r\n      // .integer()\r\n      .required(\"Cost is required\"),\r\n      duration: Yup.number()\r\n      .positive(\"Duration must be positive\")\r\n      .integer(\"Duration must be an integer\")\r\n      .required(\"Duration is required\"),\r\n      workers: Yup.array()\r\n      .required(\"Worker is required\")\r\n      .nullable(),\r\n      category: Yup.array()\r\n      .required(\"Category is required\")\r\n      .nullable(),\r\n      pictureCount: Yup.number()\r\n      .required(\"Pictures are required\")\r\n      .min(1, \"Must have at least one picture\")\r\n    });\r\n\r\n    this.triggerServiceDisplay = this.triggerServiceDisplay.bind(this);\r\n  }\r\n\r\n  // redirect to the service display page and pass the new store data\r\n  triggerServiceDisplay(returnedService) {\r\n    this.props.history.push({\r\n      pathname: '/stores/' + this.props.match.params.store_id + '/services/' + this.props.match.params.service_id,\r\n      state: {\r\n        service: returnedService\r\n      }\r\n    })\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.service !== this.state.service) {\r\n      let picturesFetched = await getPictures('stores/' + this.state.service.store_id + '/services/' + this.state.service.name + '/')\r\n      this.setState({\r\n        pictures: picturesFetched\r\n      })\r\n    }\r\n\r\n    // can put this for now so we don't have to upload to s3\r\n    // this.setState({\r\n      // pictures: [\r\n      //   { \r\n      //     url: \"/hair.jpg\",\r\n      //     key: \"/hair.jpg\"\r\n      //   },\r\n      //   {\r\n      //     url: \"/nails.jpg\",\r\n      //     key: \"/nails.jpg\"\r\n      //   },\r\n      //   {\r\n      //     url: \"/salon.jpg\",\r\n      //     key: \"/salon.jpg\"\r\n      //   }\r\n      // ]\r\n    // })\r\n  }\r\n\r\n  deleteFileChangeHandler = async (event, setFieldValue, newPictureLength) => {\r\n    if(event.target.checked){\r\n      await this.state.keys.push(event.target.id)\r\n      console.log(this.state.pictures.length, newPictureLength, this.state.keys.length)\r\n      setFieldValue('pictureCount', this.state.pictures.length + newPictureLength - this.state.keys.length)\r\n    }\r\n    else{\r\n      await this.state.keys.pop(event.target.id)\r\n      console.log(this.state.pictures.length, newPictureLength, this.state.keys.length)\r\n      setFieldValue('pictureCount', this.state.pictures.length + newPictureLength - this.state.keys.length)\r\n    }\r\n  }\r\n\r\n  fileChangedHandler = (event, setFieldValue, pictures) => {\r\n    this.setState({ selectedFiles: event.target.files })\r\n    setFieldValue('pictureCount', this.state.pictures.length + event.target.files.length - this.state.keys.length)\r\n    setFieldValue('pictures', event.target.files)\r\n  }\r\n\r\n  componentDidMount() {\r\n    if(this.props.location.state && this.props.location.state.service){\r\n      // console.log(this.props.location.state.service)\r\n      let convertedCategoryData = this.props.location.state.service.category.map((str) => ({ value: str.toLowerCase(), label: str }));\r\n      // console.log(convertedCategoryData)\r\n      this.setState({\r\n        service: this.props.location.state.service,\r\n        convertedCategory: convertedCategoryData\r\n      })\r\n    }\r\n    else{\r\n      // first we fetch the service itself\r\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/services/' + this.props.match.params.service_id, {\r\n        method: \"GET\",\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      })\r\n      .then(function(response){\r\n        if(response.status!==200){\r\n          // throw an error alert\r\n          store.dispatch(addAlert(response))\r\n        }\r\n        else{\r\n          return response.json();\r\n        }\r\n      })\r\n      .then(data => {\r\n        if(data){\r\n          let convertedCategoryData = data.category.map((str) => ({ value: str.toLowerCase(), label: str }));\r\n          this.setState({\r\n            service: data,\r\n            convertedCategory: convertedCategoryData\r\n          })\r\n        }\r\n      });\r\n\r\n\r\n\r\n      // // then we get the worker data to display for user\r\n      // // need to get store category, fetch?\r\n      // // refactor later to make it a get request\r\n      // // maybe have to refactor the whole table to keep track of names...?\r\n      // fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/workers\" , {\r\n      //   method: \"POST\",\r\n      //   headers: {\r\n      //       'Content-type': 'application/json'\r\n      //   },\r\n      //   credentials: 'include',\r\n      //   body: JSON.stringify(values)\r\n      // })\r\n      // .then(function(response){\r\n      //   console.log(response)\r\n      //   if(response.status!==200){\r\n      //     // should throw an error here\r\n      //     console.log(\"Error!\", response.status)\r\n      //     // throw new Error(response.status)\r\n      //     // window.location.href='/'\r\n      //   }\r\n      //   else{\r\n      //     return response.json();\r\n      //   }\r\n      // })\r\n      // .then(data => {\r\n      //   console.log(\"Limited store data from server:\", data)\r\n      //   let convertedWorkers = data.map((worker) => ({ value: worker.id, label: worker.first_name + \" \" + worker.last_name }));\r\n      //   this.setState({\r\n      //     workerOptions: convertedWorkers\r\n      //   })\r\n      // });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"justify-content-center\">\r\n          <Col xs={8} sm={7} md={6} lg={5}>\r\n          <Formik\r\n              enableReinitialize\r\n              initialValues={{\r\n                name: this.state.service.name,\r\n                cost: this.state.service.cost,\r\n                duration: this.state.service.duration,\r\n                description: this.state.service.description,\r\n                pictures: [],\r\n                pictureCount: this.state.pictures.length - this.state.keys.length,\r\n                workers: this.state.service.workers,\r\n                category: this.state.convertedCategory,\r\n                store_id: this.props.match.params.store_id\r\n              }}\r\n              validationSchema={this.yupValidationSchema}\r\n              onSubmit={async (values) => {\r\n                let store_id = this.props.match.params.store_id\r\n                let service_id = this.props.match.params.service_id\r\n                let triggerServiceDisplay = this.triggerServiceDisplay\r\n\r\n                values.category = values.category.map(function(val){ \r\n                  return val.label; \r\n                })\r\n\r\n                // remove files from s3\r\n                // await deleteHandler(this.state.keys)\r\n\r\n                // upload new images to s3 from client to avoid burdening back end\r\n                // let prefix = 'stores/' + this.props.match.params.store_id + '/services/' + values.name + '/'\r\n                // await uploadHandler(prefix, this.state.selectedFiles)\r\n\r\n                // need to figure out this...\r\n                // values.workers = values.workers.map(function(val){ \r\n                //   return val.value; \r\n                // })\r\n\r\n                fetch(fetchDomain + '/stores/' + store_id + \"/services/\" + service_id, {\r\n                  method: \"POST\",\r\n                  headers: {\r\n                    'Content-type': 'application/json'\r\n                  },\r\n                  credentials: 'include',\r\n                  body: JSON.stringify(values)\r\n                })\r\n                .then(function(response){\r\n                  if(response.status!==200){\r\n                    store.dispatch(addAlert(response))\r\n                  }\r\n                  else{\r\n                    return response.json();\r\n                  }\r\n                })\r\n                .then(function(data){\r\n                  // redirect to home page signed in\r\n                  if(data){\r\n                    triggerServiceDisplay()\r\n                  }\r\n                })\r\n              }}\r\n            >\r\n            {( {values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                setFieldValue}) => (\r\n              <Form className=\"formBody rounded\">\r\n                <h3>Edit Service</h3>\r\n\r\n                <Form.Group controlId=\"formService\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaHandshake/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control type=\"text\" \r\n                      value={values.name} \r\n                      placeholder=\"Name of Service\" \r\n                      name=\"name\" \r\n                      onChange={handleChange} \r\n                      onBlur={handleBlur}\r\n                      className={touched.name && errors.name ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.name && errors.name ? (\r\n                    <div className=\"error-message\">{errors.name}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formCost\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaDollarSign/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control type=\"text\" \r\n                    value={values.cost}\r\n                    placeholder=\"Cost\" \r\n                    name=\"cost\" \r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={touched.cost && errors.cost ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.cost && errors.cost ? (\r\n                    <div className=\"error-message\">{errors.cost}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formDuration\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaHourglassHalf/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control \r\n                      type=\"text\"\r\n                      value={values.duration}\r\n                      placeholder=\"Duration (in min)\" \r\n                      name=\"duration\" \r\n                      onChange={handleChange} \r\n                      onBlur={handleBlur}\r\n                      className={touched.duration && errors.duration ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.duration && errors.duration ? (\r\n                    <div className=\"error-message\">{errors.duration}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formDescription\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <FaPen/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control \r\n                      type=\"textarea\"\r\n                      rows={3}\r\n                      value={values.description}\r\n                      placeholder=\"Description\" \r\n                      name=\"description\" \r\n                      onChange={handleChange} \r\n                      onBlur={handleBlur}\r\n                      className={touched.description && errors.description ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.description && errors.description ? (\r\n                    <div className=\"error-message\">{errors.description}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                {/* <Form.Group controlId=\"formWorkers\">\r\n                  <Select\r\n                    value={values.workers}\r\n                    onChange={option => setFieldValue(\"workers\", option)}\r\n                    name=\"workers\"\r\n                    options={this.state.workerOptions}\r\n                    isMulti={true}\r\n                    placeholder={\"Assigned Workers\"}\r\n                    className={touched.workers && errors.workers ? \"error\" : null}\r\n                  />\r\n                  {touched.workers && errors.workers ? (\r\n                    <div className=\"error-message\">{errors.workers}</div>\r\n                  ): null}\r\n                </Form.Group> */}\r\n\r\n                <Form.Group controlId=\"formCategory\">\r\n                  <Select\r\n                    value={values.category}\r\n                    onChange={option => setFieldValue(\"category\", option)}\r\n                    name=\"category\"\r\n                    options={this.state.categoryOptions}\r\n                    isMulti={true}\r\n                    placeholder={\"Category\"}\r\n                    className={touched.category && errors.category ? \"error\" : null}\r\n                  />\r\n                  {touched.category && errors.category ? (\r\n                    <div className=\"error-message\">{errors.category}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"pictureCount\">\r\n                  <Form.Label>Delete Images</Form.Label>\r\n                  {this.state.pictures.map((picture, index) => (\r\n                    <div key={\"pic-\" + index}>\r\n                      <img className=\"img-fluid\" src={picture.url} alt={\"Slide \" + index} />\r\n                      <Form.Check\r\n                        // style={{marginLeft: 30}}\r\n                        id={picture.key}\r\n                        label={picture.key.split('/').slice(-1)[0]}\r\n                        onChange={event => this.deleteFileChangeHandler(event, setFieldValue, values.pictures.length)}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"pictures\">\r\n                  <Form.Label>Add Images</Form.Label>\r\n                  <br/>\r\n                  <input \r\n                    onChange={event => this.fileChangedHandler(event, setFieldValue, values.pictures)}\r\n                    type=\"file\"\r\n                    multiple\r\n                    className={touched.pictures && errors.pictures ? \"error\" : null}\r\n                  />\r\n                  {touched.pictureCount && errors.pictureCount ? (\r\n                    <div className=\"error-message\">{errors.pictureCount}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Button onClick={handleSubmit}>Submit</Button>\r\n              </Form>\r\n            )}\r\n            </Formik>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ServiceEditForm;\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { Button, Card, ListGroup } from 'react-bootstrap';\r\nimport Cookies from 'js-cookie';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  addAlert\r\n} from '../../reduxFolder/actions/alert'\r\nimport store from '../../reduxFolder/store';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport { css } from '@emotion/core'\r\nimport GridLoader from 'react-spinners/GridLoader'\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nclass AppointmentDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      appointment: [],\r\n      start_time: 0,\r\n      user_id: 0,\r\n      end_time: 0,\r\n      store_name: '',\r\n      cost: 0,\r\n      service_names: [],\r\n      workers: [],\r\n      loading: true\r\n    }\r\n  }\r\n\r\n  deleteAppointment = () => {\r\n    fetch(fetchDomain + '/appointments/delete/' + this.props.match.params.group_id, {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n      .then(function (response) {\r\n        if (response.status !== 200) {\r\n          store.dispatch(addAlert(response))\r\n        }\r\n        else {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(data => {\r\n        store.dispatch(addAlert('Deleted Appointment'))\r\n        this.props.history.push({\r\n          pathname: '/'\r\n        })\r\n      });\r\n  }\r\n\r\n  triggerAppointmentCancel = () => {\r\n    confirmAlert({\r\n      title: 'Are you sure?',\r\n      message: 'You will be charged a cancellation fee by this store.',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => this.deleteAppointment()\r\n        },\r\n        {\r\n          label: 'No'\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  convertMinsToHrsMins(mins) {\r\n    let h = Math.floor(mins / 60);\r\n    let m = mins % 60;\r\n    let am = false\r\n    if (h == 24) {\r\n      am = true\r\n      h -= 12\r\n    }\r\n    else if (h < 12) {\r\n      am = true\r\n    } else if (h != 12) {\r\n      h -= 12\r\n    }\r\n    h = h < 10 ? '0' + h : h;\r\n    if (h == 0) {\r\n      h = '12'\r\n    }\r\n    m = m < 10 ? '0' + m : m;\r\n    if (am) {\r\n      return `${h}:${m}am`;\r\n    } else {\r\n      return `${h}:${m}pm`;\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Refactor to optimize if we were passed the appointment data from calling component\r\n    // if (this.props.location && this.props.location.state && this.props.location.state.appointment) {\r\n    //   this.setState({\r\n    //     appointment: this.props.location.state.appointment,\r\n    //     user_id: this.props.location.state.user_id,\r\n    //     start_time: this.props.location.state.start_time,\r\n    //     end_time: this.props.location.state.end_time,\r\n    //     store_name: this.props.location.state.store_name,\r\n    //     cost: this.props.location.state.cost,\r\n    //     workers: this.props.location.state.workers,\r\n    //     loading: false\r\n    //   })\r\n    // }\r\n    // else {\r\n      // retrieve the appointment data from the database\r\n      fetch(fetchDomain + '/appointments/display/' + this.props.match.params.group_id, {\r\n        method: \"GET\",\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      })\r\n        .then(function (response) {\r\n          if (response.status !== 200) {\r\n            // throw an error alert\r\n            store.dispatch(addAlert(response))\r\n          }\r\n          else {\r\n            return response.json();\r\n          }\r\n        })\r\n        .then(data => {\r\n          if (data) {\r\n            this.setState({\r\n              appointment: data.appointment,\r\n              user_id: data.user_id,\r\n              start_time: data.start_time,\r\n              end_time: data.end_time,\r\n              store_name: data.store_name,\r\n              cost: data.cost,\r\n              service_names: data.service_names,\r\n              workers: data.workers,\r\n              loading: false\r\n            })\r\n          }\r\n        });\r\n    // }\r\n  }\r\n\r\n  render() {\r\n    const DisplayWithLoading = (props) => {\r\n      if (this.state.loading) {\r\n        return <Row className=\"vertical-center\">\r\n          <Col>\r\n            <GridLoader\r\n              css={override}\r\n              size={20}\r\n              color={\"#2196f3\"}\r\n              loading={this.state.isLoading}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      } else {\r\n        let cancelButton;\r\n        if (Cookies.get('user') && this.state.user_id == JSON.parse(Cookies.get('user').substring(2)).id) {\r\n          cancelButton = <Button variant=\"danger\" className=\"float-left\" onClick={() => this.triggerAppointmentCancel()}>Cancel Appointment</Button>\r\n        }\r\n        return <Row className=\"justify-content-md-center\">\r\n          <Col lg={5}>\r\n            <Card className=\"mt-5\">\r\n              <Card.Header as=\"h5\">Your Appointment at: {this.state.store_name}</Card.Header>\r\n              <Card.Body>\r\n                <Card.Text as=\"div\">\r\n                  <ListGroup as=\"div\" variant=\"flush\">\r\n                    <ListGroup.Item>Appointment Start Time: {this.convertMinsToHrsMins(this.state.start_time)}</ListGroup.Item>\r\n                    <ListGroup.Item>Appointment End Time: {this.convertMinsToHrsMins(this.state.end_time)}</ListGroup.Item>\r\n                    <ListGroup.Item>Services: {this.state.service_names.toString()}</ListGroup.Item>\r\n                    <ListGroup.Item>Total Cost: {this.state.cost}</ListGroup.Item>\r\n                    <ListGroup.Item>Scheduled Technicians: {this.state.workers.toString()}</ListGroup.Item>\r\n                  </ListGroup>\r\n                </Card.Text>\r\n                {cancelButton}\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Container fluid>\r\n        <DisplayWithLoading />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(AppointmentDisplay);","import React from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { Button, Card, ListGroup, Image } from 'react-bootstrap';\r\nimport Cookies from 'js-cookie';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  addAlert\r\n} from '../../reduxFolder/actions/alert'\r\nimport store from '../../reduxFolder/store';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport { css } from '@emotion/core'\r\nimport GridLoader from 'react-spinners/GridLoader'\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nclass AppointmentDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      appointment: [],\r\n      start_time: 0,\r\n      user_id: 0,\r\n      end_time: 0,\r\n      store_name_mappings: [],\r\n      store_ids: [],\r\n      cost: 0,\r\n      service_name_mappings: [],\r\n      grouped_service_ids: [],\r\n      workers: [],\r\n      loading: true\r\n    }\r\n  }\r\n\r\n  deleteAppointment = () => {\r\n    fetch(fetchDomain + '/appointments/delete/' + this.props.match.params.group_id, {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n      .then(function (response) {\r\n        if (response.status !== 200) {\r\n          store.dispatch(addAlert(response))\r\n        }\r\n        else {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(data => {\r\n        store.dispatch(addAlert('Deleted Appointment'))\r\n        this.props.history.push({\r\n          pathname: '/'\r\n        })\r\n      });\r\n  }\r\n\r\n  triggerAppointmentCancel = () => {\r\n    confirmAlert({\r\n      title: 'Are you sure?',\r\n      message: 'You will be charged a cancellation fee by this store.',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => this.deleteAppointment()\r\n        },\r\n        {\r\n          label: 'No'\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  triggerAppointmentDisplay = (group_id) => {\r\n    this.props.history.push({\r\n      pathname: '/appointments/' + group_id\r\n    })\r\n  }\r\n\r\n  convertMinsToHrsMins(mins) {\r\n    let h = Math.floor(mins / 60);\r\n    let m = mins % 60;\r\n    let am = false\r\n    if (h == 24) {\r\n      am = true\r\n      h -= 12\r\n    }\r\n    else if (h < 12) {\r\n      am = true\r\n    } else if (h != 12) {\r\n      h -= 12\r\n    }\r\n    h = h < 10 ? '0' + h : h;\r\n    if (h == 0) {\r\n      h = '12'\r\n    }\r\n    m = m < 10 ? '0' + m : m;\r\n    if (am) {\r\n      return `${h}:${m}am`;\r\n    } else {\r\n      return `${h}:${m}pm`;\r\n    }\r\n\r\n  }\r\n\r\n  formatDate(date) {\r\n    var d = new Date(date),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n    if (month.length < 2) \r\n        month = '0' + month;\r\n    if (day.length < 2) \r\n        day = '0' + day;\r\n\r\n    return [month, day, year].join('-');\r\n}\r\n\r\n  componentDidMount() {\r\n    // Refactor to optimize if we were passed the appointment data from calling component\r\n    // if (this.props.location && this.props.location.state && this.props.location.state.appointment) {\r\n    //   this.setState({\r\n    //     appointment: this.props.location.state.appointment,\r\n    //     user_id: this.props.location.state.user_id,\r\n    //     start_time: this.props.location.state.start_time,\r\n    //     end_time: this.props.location.state.end_time,\r\n    //     store_name: this.props.location.state.store_name,\r\n    //     cost: this.props.location.state.cost,\r\n    //     workers: this.props.location.state.workers,\r\n    //     loading: false\r\n    //   })\r\n    // }\r\n    // else {\r\n      // retrieve the appointment data from the database\r\n      fetch(fetchDomain + '/appointments/' + JSON.parse(Cookies.get('user').substring(2)).id, {\r\n        method: \"GET\",\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      })\r\n        .then(function (response) {\r\n          if (response.status !== 200) {\r\n            // throw an error alert\r\n            store.dispatch(addAlert(response))\r\n          }\r\n          else {\r\n            return response.json();\r\n          }\r\n        })\r\n        .then(data => {\r\n          if (data) {\r\n            if(Object.keys(data).length === 0 && data.constructor === Object) {\r\n              this.setState({\r\n                loading: false,\r\n                hasAppointments: false\r\n              })\r\n            } else {\r\n              this.setState({\r\n                store_ids: data.store_ids,\r\n                store_name_mappings: data.store_name_mappings,\r\n                dates: data.dates,\r\n                start_times: data.start_times, \r\n                end_times: data.end_times,\r\n                costs: data.costs,\r\n                group_ids: data.group_ids,\r\n                service_name_mappings: data.service_name_mappings,\r\n                grouped_service_ids: data.grouped_service_ids,\r\n                loading: false,\r\n                hasAppointments: true\r\n              })\r\n            }\r\n            \r\n          }\r\n        });\r\n    // }\r\n  }\r\n\r\n  render() {\r\n    //remove these props args if not needed\r\n    const ShowServices = (props) => {\r\n      let listGroupItems = [];\r\n      for (let i = 0; i < this.state.grouped_service_ids[props.index].length; i ++) {\r\n        listGroupItems.push(<ListGroup.Item key={this.state.grouped_service_ids[props.index][i]}>{this.state.service_name_mappings.find((element) => element.id == this.state.grouped_service_ids[props.index][i]).name}</ListGroup.Item>);\r\n      }\r\n      return listGroupItems;\r\n    }\r\n\r\n    const AppointmentList = (props) => {\r\n      let cards = [];\r\n      for (let i = 0; i < this.state.group_ids.length; i ++) {\r\n        cards.push(<Card style={{cursor: 'pointer'}} key={this.state.group_ids[i]}className=\"my-5\" onClick={() => this.triggerAppointmentDisplay(this.state.group_ids[i])}>\r\n          <Card.Header as=\"h4\">{this.state.store_name_mappings.find((element) => element.id == this.state.store_ids[i]).name} on {this.formatDate(this.state.dates[i])}</Card.Header>\r\n          <Card.Body>\r\n            <Card.Text as=\"div\">\r\n              <Row>\r\n                <Col>\r\n                  {this.convertMinsToHrsMins(this.state.start_times[i])} - {this.convertMinsToHrsMins(this.state.end_times[i])} ${this.state.costs[i]}\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <h5>Services Booked for Today</h5>\r\n                  <ListGroup as=\"div\" variant=\"flush\">\r\n                    <ShowServices index={i}/>\r\n                  </ListGroup>\r\n                </Col>\r\n              </Row>\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>);\r\n      }\r\n      return cards;\r\n    }\r\n\r\n    const DisplayWithLoading = (props) => {\r\n      if (this.state.loading) {\r\n        return <Row className=\"vertical-center\">\r\n          <Col>\r\n            <GridLoader\r\n              css={override}\r\n              size={20}\r\n              color={\"#2196f3\"}\r\n              loading={this.state.isLoading}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      } else if (this.state.hasAppointments) {\r\n        let cancelButton;\r\n        if (Cookies.get('user') && this.state.user_id == JSON.parse(Cookies.get('user').substring(2)).id) {\r\n          cancelButton = <Button variant=\"danger\" className=\"float-left\" onClick={() => this.triggerAppointmentCancel()}>Cancel Appointment</Button>\r\n        }\r\n        return <Row className=\"justify-content-md-center\">\r\n          <Col lg={5}>\r\n            <AppointmentList/>\r\n          </Col>\r\n        </Row>\r\n      } else {\r\n        return <Card>\r\n          <Card.Header as=\"h4\">My Appointments</Card.Header>\r\n            <Card.Body>\r\n              <Card.Text as=\"div\">\r\n                <h5>Whoops, looks like you need to book an appointment with us first. </h5>\r\n                <Image src=\"https://s3.amazonaws.com/thumbnails.thecrimson.com/photos/2018/11/15/001152_1334195.jpg.1500x998_q95_crop-smart_upscale.jpg\"/>\r\n              </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Container fluid>\r\n        <DisplayWithLoading />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(AppointmentDisplay);","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport LoginForm from './components/User/LoginForm';\r\nimport SignupForm from './components/User/SignupForm';\r\nimport MainNavbar from './components/Navbar/MainNavbar';\r\nimport Homepage from './components/Home/Homepage';\r\nimport StaticPage from './components/StaticPages/StaticPage';\r\nimport SearchDisplay from './components/Search/SearchDisplay';\r\nimport ReservationPage from './components/Reservation/ReservationPage'\r\nimport './App.css';\r\nimport StoreSignupForm from './components/Store/StoreSignupForm';\r\nimport Calendar from './components/Calendar/CalendarPage';\r\nimport StoreDisplay from './components/Store/StoreDisplay';\r\nimport StoreEditForm from './components/Store/StoreEditForm';\r\nimport redirectWithoutAuth from './components/redirectWithoutAuth';\r\nimport redirectWithAuth from './components/redirectWithAuth';\r\nimport EditProfileForm from './components/User/EditProfileForm';\r\nimport Cookies from 'js-cookie';\r\nimport Profile from './components/User/Profile';\r\nimport UserStoresDashboard from './components/Store/UserStoresDashboard';\r\nimport AddWorkerForm from './components/Worker/AddWorkerForm';\r\nimport WorkerDashboard from './components/Worker/WorkerDashboard';\r\nimport WorkerDisplay from './components/Worker/WorkerDisplay';\r\nimport WorkerEditForm from './components/Worker/WorkerEditForm';\r\nimport AddServiceForm from './components/Service/AddServiceForm';\r\nimport ServiceDashboard from './components/Service/ServiceDashboard';\r\nimport ServiceDisplay from './components/Service/ServiceDisplay';\r\nimport ServiceEditForm from './components/Service/ServiceEditForm';\r\nimport AppointmentDisplay from './components/Appointments/AppointmentDisplay';\r\nimport {\r\n  userLogout\r\n} from './reduxFolder/actions/user'\r\nimport store from './reduxFolder/store';\r\nimport UserAppointments from './components/Appointments/UserAppointments';\r\n\r\nfunction App() {\r\n  function handleLogout() {\r\n    Cookies.remove(\"token\");\r\n    Cookies.remove(\"user\"); // don't think we need any cookies anymore now that redux persists to local storage for us...\r\n    store.dispatch(userLogout())\r\n    window.location.href='/'\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <MainNavbar/>\r\n        <div className=\"App-body\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Homepage} />\r\n            <Route exact path=\"/help\" component={StaticPage} />\r\n            <Route exact path=\"/about\" component={StaticPage} />\r\n            <Route path=\"/search\" component={SearchDisplay} />\r\n\r\n            <Route exact path=\"/login\" component={redirectWithAuth(LoginForm)} />\r\n            <Route exact path=\"/logout\" component={handleLogout}/>\r\n            <Route exact path=\"/signup\" component={SignupForm} />\r\n            <Route path=\"/users/edit/:user_id\" component={redirectWithoutAuth(EditProfileForm)}/>\r\n            <Route path=\"/users/:user_id/stores\" component={redirectWithoutAuth(UserStoresDashboard)}/>\r\n            <Route path=\"/users/:user_id/appointments\" component={redirectWithoutAuth(UserAppointments)}/>\r\n            <Route path=\"/users/:user_id\" component={redirectWithoutAuth(Profile)}/>\r\n\r\n            <Route exact path=\"/storeCalendar/:store_id\" component={redirectWithoutAuth(Calendar)} />\r\n            <Route path=\"/book/:store_id\" component={ReservationPage} />\r\n            <Route exact path=\"/store/signup\" component={redirectWithoutAuth(StoreSignupForm)} />\r\n            <Route path=\"/stores/edit/:store_id\" component={redirectWithoutAuth(StoreEditForm)}/>\r\n\r\n            <Route path=\"/stores/addService/:store_id\" component={redirectWithoutAuth(AddServiceForm)}/>\r\n            <Route path=\"/stores/:store_id/services/:service_id/edit\" component={redirectWithoutAuth(ServiceEditForm)}/>\r\n            <Route path=\"/stores/:store_id/services/:service_id\" component={redirectWithoutAuth(ServiceDisplay)}/>\r\n            <Route path=\"/stores/:store_id/services\" component={redirectWithoutAuth(ServiceDashboard)}/>\r\n\r\n            <Route path=\"/stores/addWorker/:store_id\" component={redirectWithoutAuth(AddWorkerForm)}/>\r\n            <Route path=\"/stores/:store_id/workers/:worker_id/edit\" component={redirectWithoutAuth(WorkerEditForm)}/>\r\n            <Route path=\"/stores/:store_id/workers/:worker_id\" component={redirectWithoutAuth(WorkerDisplay)}/>\r\n            <Route path=\"/stores/:store_id/workers\" component={redirectWithoutAuth(WorkerDashboard)}/>\r\n            <Route path=\"/stores/:store_id\" component={StoreDisplay}/>\r\n\r\n            <Route path=\"/appointments/:group_id\" component={redirectWithoutAuth(AppointmentDisplay)}/>\r\n\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nexport default function redirectWithAuth(ComponentToProtect, addAlert) {\r\n  return class extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        loading: true,\r\n        redirect: false,\r\n      };\r\n    }\r\n    componentDidMount() {\r\n      fetch(fetchDomain + '/checkToken' , {\r\n        method: \"GET\",\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      }).then(res => {\r\n          if (res.status === 200) {\r\n            this.setState({ loading: false, redirect: true });\r\n          } else {\r\n            this.setState({ loading: false, redirect: false });\r\n          }\r\n        })\r\n    }\r\n    render() {\r\n      const { loading, redirect } = this.state;\r\n      if (loading) {\r\n        return null;\r\n      }\r\n      if (redirect) {\r\n        return <Redirect to=\"/\"/>;\r\n      }\r\n      else {\r\n        return <ComponentToProtect addAlertPassed={addAlert} {...this.props}/>;\r\n      }\r\n    }\r\n  }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux'\r\nimport store from './reduxFolder/store';\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <App/>\r\n</Provider>,\r\ndocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}