{"version":3,"sources":["assets/abstract-painting.jpg","components/Search/helper.js","assets/barber.jpg","assets/facials.jpg","assets/hair.jpg","assets/lipstics2.jpg","assets/massage3.jpg","assets/nails3.jpg","assets/salon.jpg","assets/paint_line.png","assets/salon2.jpeg","assets/hair_salon.jpg","reduxFolder/actions/alert.js","reduxFolder/redux.js","components/User/LoginForm.js","reduxFolder/actions/user.js","components/User/SignupForm.js","components/Navbar/MainNavbar.js","reduxFolder/reducers/user.js","reduxFolder/reducers/alert.js","reduxFolder/reducers/index.js","reduxFolder/store.js","components/Search/AdvancedSearch.js","components/Home/Category.js","components/Home/Homepage.js","components/StaticPages/StaticPage.js","components/LargeCarousel.js","components/Search/SearchCard.js","components/Map/MapContainer.js","components/Search/SearchDisplay.js","components/Reservation/ServiceSelection.js","components/Reservation/DateSelection.js","components/Reservation/BookingPage.js","components/Reservation/ReservationPage.js","components/s3.js","components/Store/StoreSignupForm.js","components/Calendar/CalendarPage.js","components/Store/StoreDisplay.js","components/Store/StoreEditForm.js","components/redirectWithoutAuth.jsx","components/User/EditProfileForm.js","components/User/Profile.js","components/Store/UserStoresDashboard.js","components/Worker/AddWorkerForm.js","components/Worker/WorkerDashboard.js","components/Worker/WorkerEditForm.js","components/Worker/WorkerDisplay.js","components/Service/AddServiceForm.js","components/Service/ServiceDashboard.js","components/Service/ServiceDisplay.js","components/Service/ServiceEditForm.js","components/Appointments/AppointmentDisplay.js","components/Flash/Alert.js","components/Appointments/UserAppointments.js","App.js","components/redirectWithAuth.jsx","serviceWorker.js","index.js"],"names":["module","exports","queryString","query","qs","Object","entries","filter","pair","undefined","map","i","encodeURIComponent","join","addAlert","messagePassed","type","message","fetchDomain","process","successGoogle","response","console","log","accessToken","failureGoogle","error","successFacebook","failureFacebook","status","LoginForm","props","state","email","password","handleChange","bind","handleSubmit","event","this","setState","target","id","value","prevProps","prevState","user","history","push","pathname","preventDefault","loginUser","Container","fluid","src","paint","alt","style","top","left","position","height","width","Row","className","Col","xs","sm","md","lg","Form","marginTop","Group","marginLeft","InputGroup","Prepend","Text","Control","placeholder","onChange","Button","variant","onClick","clientId","buttonText","onSuccess","onFailure","cookiePolicy","render","renderProps","backgroundColor","color","paddingRight","marginBottom","fontSize","size","appId","fields","xfbml","cssClass","icon","callback","to","React","Component","connect","userReducer","dispatch","bindActionCreators","auth_token","fetch","headers","credentials","method","body","JSON","stringify","then","json","data","login","SignupForm","phoneRegExp","emailRegExp","yupValidationSchema","Yup","shape","first_name","min","max","required","last_name","phone","matches","password_confirmation","oneOf","initialValues","role","validationSchema","onSubmit","values","signUpUser","errors","touched","handleBlur","controlId","name","onBlur","failure","window","location","href","signup","MainNavbar","userComponents","storeDisplay","keys","length","constructor","Nav","NavDropdown","title","Item","Divider","Navbar","collapseOnSelect","expand","bg","fixed","fontFamily","Toggle","aria-controls","Collapse","marginRight","initialState","action","assign","alert","alertReducer","rootReducer","combineReducers","persistedState","serializedState","localStorage","getItem","parse","e","loadFromLocalStorage","store","createStore","reducers","applyMiddleware","thunk","subscribe","setItem","saveToLocalStorage","getState","AdvancedSearch","address","distance","nails","hair","redirect","autocomplete","handlePlaceSelect","google","maps","places","Autocomplete","document","getElementById","addListener","getPlace","address_components","elem","long_name","parseInt","require","stateRep","stores","center","lat","lng","search","Label","autoComplete","as","Check","label","border","withRouter","Category","img","text","ScreenWidth","listen","children","useState","xys","setPosition","useEffect","setFromEvent","setLeaveEvent","mounted","x","clientX","y","clientY","innerHeight","innerWidth","addEventListener","removeEventListener","setWidth","handleResize","useScreenWidth","Homepage","Visible","transform","alignItem","isVisible","active","fontWeight","avgTypingDelay","startDelay","cursor","show","blink","element","Backspace","count","delay","lipstics","barber","facials","massage","paint_line","salon","StaticPage","LargeCarousel","Carousel","interval","pictures","picture","index","key","url","SearchCard","image","button","carousel","zIndex","omitBookOption","onClickFunctionBook","Card","Title","onClickFunctionStore","description","styleVal","Body","flexWrap","MapContainer","onMarkerClick","marker","selectedPlace","activeMarker","showingInfoWindow","activeMarkerIndex","onClose","zoom","mapStyles","initialCenter","displayMarkers","visible","onClickFunction","SearchDisplay","onSelect","onRemove","selectedList","selectedItem","selected","removedItem","link","split","getResults","category","storeCards","right","paddingTop","display","flexDirection","paddingBottom","disabled","isObject","options","closeIcon","multiselectContainer","groupHeading","maxWidth","chips","background","inputField","searchBox","minWidth","borderRadius","ServiceSelection","categories","currService","services","find","selectedServices","updateReservation","service","custom","checked","cost","toFixed","block","override","css","DateSelection","handleDateChange","date","getMonth","startDate","loading","store_id","parsedData","appointment","Date","appointments","currDate","handleSelectChange","selectedTime","handleSlotClick","schedule","updateAppointments","mins","h","Math","floor","m","am","SlotsAtSelectedTime","slots","schedules","currTime","foundSchedule","currSchedule","currDaySchedules","workersSchedules","day_of_the_week","getDay","scheduleStillWorks","currScheduleCurrTime","currScheduleCurrWorkerIndex","currScheduleServiceIndex","available","currScheduleCurrService","currScheduleCurrWorker","worker_id","start_time","end_time","duration","currWorkerAppointments","setHours","service_id","price","convertMinsToHrsMins","time","storeHours","close_time","minDate","items","open_time","isLoading","firstName","lastName","user_id","triggerAppointmentDisplay","returnedAppointment","appointmentGroupId","Cookies","get","substring","a","setFieldValue","ReservationPage","removal","total","selectedService","backStep","newStep","currentStep","receivedAppointments","pluralize","val","word","plural","_pluralize","num","includes","Number","timeConvert","n","hours","rhours","minutes","rminutes","round","prefetchSchedules","Promise","all","match","params","allResponses","storeName","workers","response1","response2","that","noGutters","Header","servicesList","ListGroup","getPictures","prefixPassed","prefix","uploadHandler","selectedFiles","tempDate","getFullYear","getDate","getHours","getMinutes","getSeconds","fileName","fileType","deleteHandler","keysPassed","StoreSignupForm","day","indexOf","newStoreHours","querySelector","slice","fileChangedHandler","files","street","city","zipcode","nullable","triggerStoreDisplay","returnedStore","owner_id","rows","option","isMulti","multiple","today","isWeekEnd","DayScaleCell","restProps","classes","TimeTableCell","BasicLayout","appointmentData","onFieldChange","TextEditor","onValueChange","nextValue","messages","allDayLabel","repeatLabel","BooleanEditor","RecurrenceLayout","Appointment","Calendar","selectedWorkers","selectedAppointments","endDate","mainResourceName","resources","fieldName","allowMultiple","instances","currentDate","commitChanges","changeMainResource","onSelectWorker","onRemoveWorker","onSelectService","onRemoveService","onSearch","includeWorker","includeService","newSelected","worker","added","changed","deleted","startingAddedId","displayValue","optionContainer","Paper","defaultCurrentDate","onCommitChanges","startDayHour","endDayHour","cellDuration","dayScaleCellComponent","timeTableCellComponent","appointmentComponent","showCloseButton","showOpenButton","isRecurrence","basicLayoutComponent","recurrenceLayoutComponent","booleanEditorComponent","StoreDisplay","created_at","owners","clients","convertedCategory","str","toLowerCase","selectedOption","editButton","triggerStoreEdit","cat","triggerBook","StoreEditForm","updateNewHours","newHours","old_open_time","old_close_time","deleteFileChangeHandler","newPictureLength","pop","pictureCount","picturesFetched","enableReinitialize","redirectWithoutAuth","ComponentToProtect","res","Error","catch","err","EditProfileForm","editProfile","Profile","UserStoresDashboard","redirectToWorkerForm","passedStore","salon2","triggerStoreShow","triggerShowWorkers","triggerAddWorker","triggerShowServices","triggerAddService","AddWorkerForm","old_start_time","old_end_time","newWorkerHours","workerHours","handleDayStatusChange","updateWeekIsWorking","weekIsWorking","triggerWorkerDisplay","returnedWorker","receivedWorkerHours","CreateStartTimesForDay","CreateEndTimesForDay","WorkerDashboard","redirectToWorkerEditForm","redirectToWorkerDisplay","triggerWorkerEditForm","WorkerEditForm","serviceMapping","0","1","receivedServices","noChange","updateWorker","WorkerDisplay","updateHours","dayHours","updateContent","selectedChoice","choice","daysOfWeek","convertedServices","ListWorkingHours","RenderProfileContent","Image","rounded","defaultActiveKey","Link","eventKey","AddServiceForm","categoryOptions","workerOptions","positive","integer","triggerServiceDisplay","convertedWorkers","setSubmitting","colors","ServiceDashboard","servicePassed","indx","triggerServiceEdit","ServiceDisplay","resolve","ServiceEditForm","returnedService","convertedCategoryData","AppointmentDisplay","deleteAppointment","group_id","triggerAppointmentCancel","confirmAlert","buttons","store_name","service_names","cancelButton","toString","Alert","removeAlert","alertClass","400","300","500","200","success","alertTag","alertClassName","statusText","store_name_mappings","store_ids","service_name_mappings","grouped_service_ids","d","month","year","hasAppointments","dates","start_times","end_times","costs","group_ids","ShowServices","listGroupItems","AppointmentList","cards","formatDate","App","exact","path","component","addAlertPassed","remove","UserAppointments","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0a9ca79c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/abstract-painting.4f80cf3e.jpg\";","// CITATION: https://stackoverflow.com/questions/37230555/get-with-query-string-with-fetch-in-react-native\r\nfunction queryString(query) {\r\n  // get array of key value pairs ([[k1, v1], [k2, v2]])\r\n  const qs = Object.entries(query)\r\n    // filter pairs with undefined value\r\n    .filter(pair => pair[1] !== undefined)\r\n    // encode keys and values, remove the value if it is null, but leave the key\r\n    .map(pair => pair.filter(i => i !== null).map(encodeURIComponent).join('='))\r\n    .join('&');\r\n\r\n  return qs && '?' + qs;\r\n}\r\n\r\n exports.queryString = queryString;","module.exports = __webpack_public_path__ + \"static/media/barber.d2f9dfa8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/facials.ed0b2cb9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hair.d4215e0f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lipstics2.6d47408d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/massage3.55e106f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nails3.81962b22.jpg\";","module.exports = __webpack_public_path__ + \"static/media/salon.140a41f2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/paint_line.bb971069.png\";","module.exports = __webpack_public_path__ + \"static/media/salon2.5edf0e42.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/hair_salon.5e677ff9.jpg\";","export const ADD_ALERT = 'ADD_ALERT'\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT'\r\n\r\nexport function addAlert(messagePassed) {\r\n  return {\r\n    type: ADD_ALERT,\r\n    message: messagePassed\r\n  }\r\n}\r\n\r\nexport function removeAlert() {\r\n  return { \r\n    type: REMOVE_ALERT\r\n  }\r\n}\r\n","import {userLoginSuccess, userLoginFailure, editUserSuccess} from './actions/user';\r\n// import {addServiceSuccess} from './actions/service';\r\n// import {getWorkerOptionsSuccess, addWorker} from './actions/worker';\r\nimport {failure} from './actions/index'\r\nimport {addAlert} from './actions/alert';\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\n// USER FUNCTIONS \r\n\r\nexport function signup(values){\r\n  return dispatch => {\r\n    fetch(fetchDomain + '/signUp' , {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(values)\r\n    })\r\n    .then(function(response){\r\n      dispatch(addAlert(response))  // seems this alert is not persisting...\r\n\r\n      if(response.status!==200){\r\n        dispatch(failure(response))\r\n      }\r\n      else{\r\n        // redirect to home page signed in\r\n        // NOTE: do we want them to be signed in after login? if so we can change this...\r\n        window.location.href='/'\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport function login(email, password, auth_token) {\r\n  return dispatch => {\r\n    fetch(fetchDomain + '/login' , {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      credentials: 'include',\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        \"email\": email,\r\n        \"password\": password\r\n      })\r\n    })\r\n    .then(function(response){\r\n      dispatch(addAlert(response))\r\n\r\n      if(response.status!==200){\r\n        dispatch(userLoginFailure(response));\r\n      }\r\n      else{\r\n        return response.json()\r\n      }\r\n    })\r\n    .then(data => {\r\n      if(data){\r\n        dispatch(userLoginSuccess(data.user));\r\n        return data;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function editUser(values){\r\n  return dispatch => {\r\n    fetch(fetchDomain + '/users/' + values.id , {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      credentials: 'include',\r\n      body: JSON.stringify(values)\r\n    })\r\n    .then(function(response){\r\n      dispatch(addAlert(response))\r\n      \r\n      if(response.status!==200){\r\n        dispatch(failure(response))\r\n      }\r\n      else{\r\n        // redirect to home page signed in\r\n        return response.json()\r\n      }\r\n    })\r\n    .then(data => {\r\n      if(data){\r\n        dispatch(editUserSuccess(data))\r\n        return data\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// not going to refactor other code unless extra time left, too time consuming\r\n\r\n// SERVICE FUNCTIONS\r\n\r\n// export function addService(values, store_id){\r\n//   return dispatch => {\r\n//     fetch(fetchDomain + '/stores/addService/' + store_id, {\r\n//       method: \"POST\",\r\n//       headers: {\r\n//         'Content-type': 'application/json'\r\n//       },\r\n//       credentials: 'include',\r\n//       body: JSON.stringify(values)\r\n//     })\r\n//     .then(function(response){\r\n//       dispatch(addAlert(response))\r\n\r\n//       if(response.status!==200){\r\n//         dispatch(failure(response))\r\n//       }\r\n//       else{\r\n//         return response.json();\r\n//       }\r\n//     })\r\n//     .then(function(data){\r\n//       if(data){\r\n//         dispatch(addServiceSuccess(data))\r\n//         return data\r\n//       }\r\n//     })\r\n//   }\r\n// }\r\n\r\n// WORKER FUNCTIONS\r\n\r\n// export function getWorkerOptions(store_id){\r\n//   return dispatch => {\r\n//     fetch(fetchDomain + '/stores/' + store_id + \"/workers\" , {\r\n//       method: \"GET\",\r\n//       headers: {\r\n//           'Content-type': 'application/json'\r\n//       },\r\n//       credentials: 'include'\r\n//     })\r\n//     .then(function(response){\r\n//       if(response.status!==200){\r\n//         // throw an error alert\r\n//         dispatch(addAlert(response))\r\n//       }\r\n//       else{\r\n//         return response.json();\r\n//       }\r\n//     })\r\n//     .then(data => {\r\n//       if(data){\r\n//         let convertedWorkers = data.map((worker) => ({ value: worker.id, label: worker.first_name + \" \" + worker.last_name }));\r\n//         dispatch(getWorkerOptionsSuccess(convertedWorkers))\r\n//         return data\r\n//       }\r\n//     });\r\n//   }\r\n// }\r\n\r\n// export function addWorker(values, store_id){\r\n//   fetch(fetchDomain + '/stores/addWorker/' + store_id, {\r\n//     method: \"POST\",\r\n//     headers: {\r\n//       'Content-type': 'application/json'\r\n//     },\r\n//     credentials: 'include',\r\n//     body: JSON.stringify(values)\r\n//   })\r\n//   .then(function(response){\r\n//     dispatch(addAlert(response))\r\n\r\n//     if(response.status!==200){\r\n//       dispatch(failure(response))\r\n//     }\r\n//     else{\r\n//       return response.json();\r\n//     }\r\n//   })\r\n//   .then(function(data){\r\n//     // redirect to home page signed in\r\n//     if(data){\r\n//       dispatch(addWorkerSuccess(data))\r\n//       return data\r\n//     }\r\n//   })\r\n// }","import React from 'react';\r\nimport './LoginForm.css'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport { FaEnvelope, FaLock } from 'react-icons/fa';\r\nimport GoogleLogin from 'react-google-login';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport {TiSocialFacebookCircular, TiSocialGooglePlus} from 'react-icons/ti';\r\nimport paint from '../../assets/abstract-painting.jpg';\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport {login} from '../../reduxFolder/redux.js'\r\n// import ReactDOM from 'react-dom';\r\n// import { useGoogleLogin } from 'react-google-login';\r\n// import FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\r\n\r\n\r\nconst successGoogle = (response) => {\r\n  console.log(\"Google Success: \", response.accessToken);\r\n}\r\n\r\nconst failureGoogle = (response) => {\r\n  console.log(\"Google Failure:\", response.error);\r\n}\r\n\r\nconst successFacebook = (response) => {\r\n  console.log(\"Facebook Success:\", response.accessToken);\r\n}\r\n\r\nconst failureFacebook = (response) => {\r\n  if(response.status){\r\n    console.log(\"Facebook Failure\");\r\n  }\r\n}\r\n\r\nclass LoginForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      message: {}\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({[event.target.id]: event.target.value});\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState)  {\r\n    // means we updated redux store with the user and have successfully logged in\r\n    if (prevProps.user !== this.props.user) {\r\n      this.props.history.push({\r\n        pathname: '/'\r\n      })\r\n    }\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    //there might be a CORS issue with the backend, this doesn't work without preventDefault..\r\n    event.preventDefault();\r\n    this.props.loginUser(this.state.email, this.state.password, \"\")\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n      <img src={paint} alt=\"paint\" style={{top: 0, left: 0, position: 'absolute', height: '100%', width:'100%', filter: 'grayscale(0.4)'}}/>\r\n\r\n        <Row className=\"justify-content-center\">\r\n          <Col xs={8} sm={7} md={6} lg={5}>\r\n            <Form className=\"formBody rounded container\" style={{marginTop: 120}}>\r\n              <h3>Login</h3>\r\n              <Form.Group style={{marginTop: 40, width: '65%', marginLeft: '17%'}}>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend >\r\n                      <InputGroup.Text>\r\n                          <FaEnvelope/>\r\n                      </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <Form.Control id=\"email\" type=\"email\" placeholder=\"Email\" onChange={this.handleChange}/>\r\n                </InputGroup>\r\n              </Form.Group>\r\n\r\n              <Form.Group style={{width: '65%', marginLeft: '17%'}}>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                      <InputGroup.Text>\r\n                          <FaLock/>\r\n                      </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <Form.Control id=\"password\" type=\"password\" placeholder=\"Password\" onChange={this.handleChange}/>\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Col xs={8} sm={8} md={8} lg={8} style={{marginLeft: '17%'}}>\r\n                <Button  className=\"login\" type=\"submit\" variant=\"primary\" onClick={this.handleSubmit}>Login</Button>\r\n                  <p><b> OR </b></p>\r\n                  <GoogleLogin\r\n                    clientId={process.env.REACT_APP_GOOGLE_ID}\r\n                    buttonText=\"Login with Google\"\r\n                    onSuccess={successGoogle}\r\n                    onFailure={failureGoogle}\r\n                    cookiePolicy={'single_host_origin'}\r\n                    render={renderProps => (\r\n                      <button onClick={renderProps.onClick} style={{ width: '100%', backgroundColor:\"#db4a39\", color: 'white', paddingRight: '30px',\r\n                    marginBottom: '10px', height: '48px', fontSize: '14px'}}> <TiSocialGooglePlus  size={45} style={{paddingRight:\"15px\"}}/>Login with Google</button>\r\n                    )}\r\n                  />\r\n\r\n                  <FacebookLogin\r\n                    appId={process.env.REACT_APP_FACEBOOK_ID} //APP ID NOT CREATED YET\r\n                    fields=\"name,email,picture\"\r\n                    onFailure={failureFacebook}\r\n                    xfbml={true}\r\n                    cssClass=\"facebookButton\"\r\n                    icon={<TiSocialFacebookCircular size={45} style={{paddingRight:\"15px\"}}/>}\r\n                    callback={successFacebook}\r\n                    />\r\n                  <p> Don't have a Bloom account yet? <Link to=\"/signup\" style={{color: 'black'}}><b> Sign Up. </b></Link></p>\r\n              </Col>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.userReducer.user\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n  loginUser: (email, password, auth_token) => login(email, password, auth_token)\r\n}, dispatch)\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n","export const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAILURE = 'USER_LOGIN_FAILURE'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\nexport const EDIT_USER_SUCCESS = 'EDIT_USER_SUCCESS'\r\n\r\n\r\nexport function userLoginSuccess(userPassed) {\r\n  return {\r\n    type: USER_LOGIN_SUCCESS,\r\n    user: userPassed\r\n  }\r\n}\r\n\r\nexport function userLoginFailure(error) {\r\n  return {\r\n    type: USER_LOGIN_FAILURE,\r\n    error: error\r\n  }\r\n}\r\n\r\nexport function editUserSuccess(userPassed) {\r\n  return {\r\n    type: EDIT_USER_SUCCESS,\r\n    user: userPassed\r\n  }\r\n}\r\n\r\nexport function userLogout() {\r\n  return {\r\n    type: USER_LOGOUT\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport '../../App.css';\r\nimport './LoginForm.css'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport { FaEnvelope, FaLockOpen, FaLock, FaUser, FaPhone } from 'react-icons/fa';\r\nimport { Formik } from 'formik';\r\nimport paint from '../../assets/abstract-painting.jpg';\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Yup from 'yup';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport {signup} from '../../reduxFolder/redux.js'\r\n\r\nclass SignupForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // RegEx for phone number validation\r\n    this.phoneRegExp = /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/\r\n    this.emailRegExp = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/\r\n    // Schema for yup\r\n    this.yupValidationSchema = Yup.object().shape({\r\n      first_name: Yup.string()\r\n      .min(2, \"First name must have at least 2 characters\")\r\n      .max(100, \"First name can't be longer than 100 characters\")\r\n      .required(\"First name is required\"),\r\n      last_name: Yup.string()\r\n      .min(2, \"Last name must have at least 2 characters\")\r\n      .max(100, \"Last name can't be longer than 100 characters\")\r\n      .required(\"Last name is required\"),\r\n      email: Yup.string()\r\n      .email(\"Must be a valid email address\")\r\n      .max(100, \"Email must be less than 100 characters\")\r\n      .required(\"Email is required\"),\r\n      phone: Yup.string()\r\n      .matches(this.phoneRegExp, \"Phone number is not valid\"),\r\n      password: Yup.string()\r\n      .min(6, \"Password must have at least 6 characters\")\r\n      .max(100, \"Password can't be longer than 100 characters\")\r\n      .required(\"Password required\"),\r\n      password_confirmation: Yup.string()\r\n      .oneOf([Yup.ref('password')], 'Passwords do not match')\r\n      .required(\"Password Confirmation required\")\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n      <img src={paint} alt=\"paint\" style={{top: 0, left: 0, position: 'absolute', height: '100%', width:'100%', filter: 'grayscale(0.4)'}}/>\r\n        <Row className=\"justify-content-center\">\r\n          <Col xs={8} sm={7} md={6} lg={5}>\r\n            <Formik\r\n              initialValues={{\r\n                first_name: '',\r\n                last_name: '',\r\n                email: '',\r\n                role: '0',\r\n                phone: '',\r\n                password: '',\r\n                password_confirmation: ''\r\n              }}\r\n              validationSchema={this.yupValidationSchema}\r\n              onSubmit={(values) => {\r\n                this.props.signUpUser(values)\r\n              }}\r\n            >\r\n            {( {values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit}) => (\r\n              <Form className=\"formBody rounded\" style={{marginTop: 120}}>\r\n                <h3 style={{marginBottom: 40}}>Sign Up</h3>\r\n\r\n                <Form.Group controlId=\"formFirstName\" className=\"form\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaUser/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"first_name\"\r\n                      value={values.first_name}\r\n                      placeholder=\"First Name\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      className={touched.first_name && errors.first_name ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.first_name && errors.first_name ? (\r\n                    <div className=\"error-message\">{errors.first_name}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId=\"formLastName\" className=\"form\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaUser/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control type=\"text\"\r\n                    value={values.last_name}\r\n                    placeholder=\"Last Name\"\r\n                    name=\"last_name\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={touched.last_name && errors.last_name ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.last_name && errors.last_name ? (\r\n                    <div className=\"error-message\">{errors.last_name}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formPhone\" className=\"form\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaPhone/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control type=\"text\"\r\n                      value={values.phone}\r\n                      placeholder=\"Phone Number\"\r\n                      name=\"phone\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      className={touched.phone && errors.phone ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.phone && errors.phone ? (\r\n                    <div className=\"error-message\">{errors.phone}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formEmail\" className=\"form\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaEnvelope/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control\r\n                      type=\"email\"\r\n                      value={values.email}\r\n                      placeholder=\"Email\"\r\n                      name=\"email\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      className={touched.email && errors.email ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.email && errors.email ? (\r\n                    <div className=\"error-message\">{errors.email}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formPassword\" className=\"form\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaLockOpen/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      value={values.password}\r\n                      placeholder=\"Password\"\r\n                      name=\"password\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      className={touched.password && errors.password ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.password && errors.password ? (\r\n                    <div className=\"error-message\">{errors.password}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formPasswordConfirmation\" className=\"form\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaLock/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      value={values.password_confirmation}\r\n                      placeholder=\"Confirm Password\"\r\n                      name=\"password_confirmation\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      className={touched.password_confirmation && errors.password_confirmation ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.password_confirmation && errors.password_confirmation ? (\r\n                    <div className=\"error-message\">{errors.password_confirmation}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n                <Button className=\"signup\" onClick={handleSubmit}>Sign Up</Button>\r\n                <p> Already have a Bloom account? <Link to=\"/login\" style={{color: 'black'}}><b> Login. </b></Link></p>\r\n              </Form>\r\n            )}\r\n            </Formik>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n  signUpUser: (values) => signup(values)\r\n}, dispatch)\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(SignupForm);\r\n","import React from 'react';\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport './MainNavbar.css'\r\nimport { connect } from 'react-redux';\r\n// import BasicSearch from '../Search/BasicSearch';\r\n\r\nclass MainNavbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    let userComponents = null\r\n    let storeDisplay = null\r\n\r\n    if(this.props.user == null || (Object.keys(this.props.user).length === 0 && this.props.user.constructor === Object)) {\r\n      console.log(this.props.user)\r\n      userComponents = <Nav className=\"left\">\r\n                          <Link to=\"/login\" className=\"nav-link\">Login</Link>\r\n                          <Link to=\"/signup\" className=\"nav-link\">Signup</Link>\r\n                       </Nav>\r\n    }\r\n    else {\r\n      console.log(this.props.user)\r\n      if(this.props.user.role != '0'){\r\n        storeDisplay = <NavDropdown title=\"Manage Stores\" id=\"basic-nav-dropdown\">\r\n                          <NavDropdown.Item href={\"/users/\" + this.props.user.id + \"/stores\"}>Dashboard</NavDropdown.Item>\r\n                          <NavDropdown.Item href=\"/storeCalendar\">Calendar</NavDropdown.Item>\r\n                          {/* <NavDropdown.Item href=\"/stores/:store_id/services\">Services</NavDropdown.Item> */}\r\n                          <NavDropdown.Divider />\r\n                          <NavDropdown.Item href=\"/store/signup\">Create Store</NavDropdown.Item>\r\n                        </NavDropdown>\r\n      }\r\n      else{\r\n        storeDisplay = <Link to=\"/store/signup\" className=\"nav-link\">Create Store</Link>\r\n      }\r\n      userComponents = <Nav>\r\n                          {storeDisplay}\r\n                          <NavDropdown title=\"Profile\" id=\"basic-nav-dropdown\">\r\n                          <NavDropdown.Item href={\"/users/\" + this.props.user.id}>View</NavDropdown.Item>\r\n                            <NavDropdown.Item href={\"/users/edit/\" + this.props.user.id}>Edit</NavDropdown.Item>\r\n                          </NavDropdown>\r\n                          <Link to={\"/users/\" + 'this.props.user.id' + '/appointments'} className=\"nav-link\">My Appointments</Link>\r\n                          <Link to=\"/logout\" className=\"nav-link\">Logout</Link>\r\n                       </Nav>\r\n    }\r\n    return (\r\n      <Navbar collapseOnSelect expand=\"sm\" bg=\"light\" variant=\"light\" fixed=\"top\">\r\n        <Link to=\"/\" className=\"navbar-brand\" style={{fontFamily: 'Megrim, cursive', fontSize: '35px'}}>Bloom</Link>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"left\" style={{marginRight: '120px'}}>\r\n            <Link to=\"/help\" className=\"nav-link\">Help</Link>\r\n            <Link to=\"/about\" className=\"nav-link\">About</Link>\r\n          </Nav>\r\n          {userComponents}\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.userReducer.user\r\n})\r\n\r\nexport default connect(mapStateToProps)(MainNavbar);\r\n","import { USER_LOGIN_SUCCESS, USER_LOGIN_FAILURE, USER_LOGOUT, EDIT_USER_SUCCESS } from \"../actions/user\"\r\n\r\nconst initialState = {\r\n  user: {},\r\n  error: {},\r\n}\r\n\r\nfunction userReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case USER_LOGIN_FAILURE:\r\n      return Object.assign({}, state, {\r\n        error: action.error\r\n      })\r\n      \r\n    case USER_LOGIN_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        user: action.user\r\n      })\r\n\r\n    case EDIT_USER_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        user: action.user\r\n      })\r\n\r\n    case USER_LOGOUT:\r\n      return Object.assign({}, state, {\r\n        user: {}\r\n      })\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default userReducer;\r\n","import { ADD_ALERT, REMOVE_ALERT } from \"../actions/alert\"\r\n\r\nconst initialState = {\r\n  alert: {}\r\n}\r\n\r\nfunction alertReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_ALERT:\r\n      return Object.assign({}, state, {\r\n        alert: action.message\r\n      })\r\n    case REMOVE_ALERT:\r\n      return Object.assign({}, state, {\r\n        alert: {}\r\n      })\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default alertReducer","import { combineReducers } from 'redux'\r\nimport userReducer from './user'\r\nimport alertReducer from './alert'\r\n// import serviceReducer from './service'\r\n// import workerReducer from './worker'\r\n\r\nlet rootReducer = combineReducers({\r\n  userReducer,\r\n  alertReducer,\r\n  // serviceReducer,\r\n  // workerReducer\r\n})\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport reducers from './reducers/index';\r\nimport thunk from 'redux-thunk';\r\n\r\nfunction saveToLocalStorage(state) {\r\n  try {\r\n    const serializedState = JSON.stringify(state)\r\n    localStorage.setItem('state', serializedState)\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nfunction loadFromLocalStorage() {\r\n  try {\r\n    const serializedState = localStorage.getItem('state')\r\n    if(serializedState === null) return undefined\r\n    return JSON.parse(serializedState)\r\n  } catch (e) {\r\n    console.log(e)\r\n    return undefined\r\n  }\r\n}\r\n\r\nconst persistedState = loadFromLocalStorage()\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  persistedState,\r\n  applyMiddleware(thunk)\r\n)\r\n\r\nstore.subscribe(() => saveToLocalStorage(store.getState()))\r\n\r\nexport default store;","import React from 'react';\r\nimport './AdvancedSearch.css'\r\nimport { Form, Row} from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  addAlert\r\n} from '../../reduxFolder/actions/alert'\r\nimport store from '../../reduxFolder/store';\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nclass AdvancedSearch extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      address: '',\r\n      distance: 1,\r\n      nails: false,\r\n      hair: false,\r\n      redirect: false};\r\n    this.autocomplete = null\r\n    this.redirect = false\r\n\r\n    this.handlePlaceSelect = this.handlePlaceSelect.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const google = window.google;\r\n    this.autocomplete = new google.maps.places.Autocomplete(document.getElementById('autocomplete'), { })\r\n\r\n    this.autocomplete.addListener(\"place_changed\", this.handlePlaceSelect)\r\n  }\r\n\r\n  handlePlaceSelect() {\r\n    let addressObject = this.autocomplete.getPlace()\r\n    let address = addressObject.address_components.map(function(elem){\r\n                      return elem.long_name;\r\n                  }).join(\", \");\r\n\r\n    this.setState({\r\n      address: address\r\n    })\r\n  }\r\n\r\n  handleChange(event) {\r\n    if (event.target.type === \"checkbox\") {\r\n      this.setState({[event.target.id]: !this.state[event.target.id]})\r\n    }\r\n    else{\r\n      this.setState({[event.target.id]: parseInt(event.target.value) || event.target.value});\r\n    }\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    // for some reason doesn't work without this..\r\n    event.preventDefault();\r\n\r\n    let queryString = require('./helper.js').queryString;\r\n    let query = queryString(this.state)\r\n    const fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n    console.log(\"environment is: \", process.env.NODE_ENV)\r\n    console.log(\"fetch prod is: \", process.env.REACT_APP_FETCH_DOMAIN_PROD)\r\n    console.log(\"fetch dev is: \", process.env.REACT_APP_FETCH_DOMAIN_DEV)\r\n    console.log(\"fetch domain is: \", fetchDomain)\r\n    fetch(fetchDomain + '/stores' + query, {\r\n      method: \"GET\",\r\n      headers: {\r\n          'Content-type': 'application/json'\r\n      }\r\n    })\r\n    .then(function(response){\r\n      if(response.status!==200){\r\n        // throw an error alert\r\n        store.dispatch(addAlert(response))\r\n      }\r\n      else{\r\n        return response.json();\r\n      }\r\n    })\r\n    .then(data => {\r\n      if(data){\r\n        let stateRep = this.state\r\n        stateRep.stores = data\r\n        stateRep.redirect = true\r\n        stateRep.center = {\r\n          lat: \"34.277639\",\r\n          lng: \"-118.3741806\"\r\n        }\r\n\r\n        this.props.history.push({\r\n          pathname: '/search',\r\n          search: query,\r\n          state: stateRep\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"book_window\">\r\n      <Form className=\"formBody rounded\" onSubmit={this.handleSubmit}>\r\n        <h3>Book Now</h3>\r\n        <Form.Group controlId=\"autocomplete\">\r\n        <Row>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Try 'New Haven, CT'\"\r\n            autoComplete=\"new-password\"\r\n          />\r\n        </Row>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Row>\r\n          <Form.Label>Distance</Form.Label>\r\n          <Form.Control as=\"select\" id=\"distance\" onChange={this.handleChange}>\r\n            <option>1 mile</option>\r\n            <option>5 miles</option>\r\n            <option>10 miles</option>\r\n            <option>25 miles</option>\r\n            <option>50 miles</option>\r\n          </Form.Control>\r\n          </Row>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"category\">\r\n          <Row>\r\n          <Form.Label>Category</Form.Label>\r\n          <Form.Check\r\n            style={{marginLeft: 30}}\r\n            id=\"nails\"\r\n            label=\"Nails\"\r\n            onChange={this.handleChange}\r\n          />\r\n          <Form.Check\r\n            style={{marginLeft: 10}}\r\n            id=\"hair\"\r\n            label=\"Hair\"\r\n            onChange={this.handleChange}\r\n          />\r\n          </Row>\r\n        </Form.Group>\r\n          <Button style={{backgroundColor: '#8CAFCB', border: '0px'}} type=\"submit\">Submit</Button>\r\n      </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(AdvancedSearch);\r\n","import React from 'react';\r\nimport './Homepage.css';\r\n\r\n\r\nclass Category extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"image_container\" style={this.props.style}>\r\n      <img src={this.props.img} alt=\"paint\" className=\"images\"\r\n\r\n      />\r\n      <p className=\"text\"> {this.props.text} </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Category;\r\n","import React from 'react';\r\n// import Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport AdvancedSearch from '../Search/AdvancedSearch';\r\nimport './Homepage.css';\r\nimport paint from '../../assets/abstract-painting.jpg';\r\nimport barber from '../../assets/barber.jpg';\r\n// import bride_hair from '../../assets/bride_hair.jpg';\r\nimport facials from '../../assets/facials.jpg';\r\nimport hair from '../../assets/hair.jpg';\r\nimport lipstics from '../../assets/lipstics2.jpg';\r\nimport massage from '../../assets/massage3.jpg';\r\nimport nails from '../../assets/nails3.jpg';\r\nimport salon from '../../assets/salon.jpg';\r\nimport paint_line from '../../assets/paint_line.png';\r\nimport Typist from 'react-typist';\r\nimport { useState, useEffect } from 'react'\r\n// import { useSpring, animated as a } from 'react-spring'\r\n// import TrackVisibility from 'react-on-screen';\r\nimport VizSensor from 'react-visibility-sensor';\r\n// import Typing from 'react-typing-animation';\r\nimport Category from './Category.js';\r\n\r\nconst calc = (x, y) => [-(y - window.innerHeight / 2) / 20, (x - window.innerWidth / 2) / 80, 1.04]\r\nconst trans = (x, y, s) => `perspective(600px) scale(${s})`\r\n\r\n// const animation = () => {\r\n//\r\n//     const [props, set] = useSpring(() => (\r\n//       { xys: [0, 0, 1], config: { mass: 5, tension: 350, friction: 40 }\r\n//      }))\r\n//\r\n//     const [flipped, setFlipped] = useState(false)\r\n//     const [key, setKey] = useState(0)\r\n//\r\n//\r\n//     const [width, setWidth] = useState(window.innerWidth)\r\n//       useEffect(() => {\r\n//         const handleResize = () => {\r\n//           setWidth(window.innerWidth)\r\n//         }\r\n//         window.addEventListener('resize', handleResize)\r\n//         return () => { window.removeEventListener('resize', handleResize) }\r\n//       })\r\n//\r\n//\r\n//     const { transform, opacity, display } = useSpring({\r\n//       opacity: flipped ? 1 : 0,\r\n//       display: flipped ? '' : 'none',\r\n//       transform: `perspective(500px) rotateX(${flipped ? 180 : 0}deg)`,\r\n//       config: { mass: 5, tension: 400, friction: 80 }})\r\n//\r\n// }\r\n\r\n\r\n\r\n\r\nfunction useScreenWidth(): number {\r\n\r\n  const [position, setPosition] = useState({ xys: [0, 0, 1]});\r\n\r\n\r\n  // const [props, set] = useSpring(() => (\r\n  //       { xys: [0, 0, 1], config: { mass: 5, tension: 350, friction: 40 }\r\n  // }))\r\n\r\n  useEffect(() => {\r\n    let mounted = true\r\n    let setFromEvent;\r\n    let setLeaveEvent;\r\n\r\n    if(mounted){\r\n      setFromEvent = e => setPosition({  xys: calc(e.clientX, e.clientY) });\r\n      setLeaveEvent = e => setPosition({ xys : [0, 0, 1]})\r\n      window.addEventListener(\"mousemove\", setFromEvent);\r\n    }\r\n\r\n    return () => {\r\n      mounted = false;\r\n      window.removeEventListener(\"mousemove\", setLeaveEvent);\r\n    };\r\n  }, []);\r\n  // return position;\r\n\r\n\r\n  const [width, setWidth] = useState(window.innerWidth)\r\n\r\n  useEffect(() => {\r\n    let mounted = true\r\n    let handleResize;\r\n\r\n    if(mounted){\r\n      handleResize = () => {\r\n        setWidth(window.innerWidth)\r\n      }\r\n      window.addEventListener('resize', handleResize)\r\n    }\r\n    return () => { \r\n      mounted = false; \r\n      window.removeEventListener('resize', handleResize) \r\n    }\r\n\r\n  })\r\n\r\n\r\n  return position;\r\n}\r\n\r\n// function useMousePosition(listen=true) {\r\n//   let [ pos, setPos ] = useState({ x: 0, y: 0 })\r\n//   useEffect(() => {\r\n//     if (listen) {\r\n//       let handler = event => {\r\n//         setPos({ x: event.clientX, y: event.clientY })\r\n//       }\r\n//       window.addEventListener('mousemove', handler)\r\n//       return () => {\r\n//         window.removeEventListener('mousemove', handler)\r\n//       }\r\n//     }\r\n//   }, [listen])\r\n//   return pos\r\n// }\r\n\r\n// function MousePosition({ listen, children }) {\r\n//   let pos = useMousePosition(listen)\r\n//   return children(pos)\r\n// }\r\n\r\nfunction ScreenWidth ({ listen, children }) {\r\n  const screenWidth: number = useScreenWidth();\r\n  // console.log(screenWidth);\r\n  return children(screenWidth);\r\n\r\n};\r\n\r\nfunction useScroll() : number {\r\n\r\n  const [scrollPosition, setSrollPosition] = useState(0);\r\n  const handleScroll = () => {\r\n      const position = window.pageYOffset;\r\n      setSrollPosition(position);\r\n  };\r\n\r\n  useEffect(() => {\r\n      window.addEventListener('scroll', handleScroll);\r\n\r\n      return () => {\r\n          window.removeEventListener('scroll', handleScroll);\r\n      };\r\n  }, []);\r\n\r\nreturn scrollPosition;\r\n}\r\n\r\nfunction ScreenScroll ({ listen, children }) {\r\n  const scroll: number = useScroll();\r\n  console.log(scroll);\r\n  return children(scroll);\r\n\r\n};\r\n\r\nclass Homepage extends React.Component {\r\n  constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n        Visible: false\r\n      }\r\n      // this.handleMouseEnter = this.handleMouseEnter.bind(this, this.props.handleMouseEnter)\r\n      // this.handleMouseMove = this.handleMouseMove.bind(this, this.props.handleMouseMove)\r\n      // this.handleMouseLeave = this.handleMouseLeave.bind(this, this.props.handleMouseLeave)\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    // console.log(this.state.Visible)\r\n    return (\r\n      <div className=\"container\">\r\n        <div>\r\n          <ScreenWidth>\r\n            {(position) =>\r\n            <img src={paint} alt=\"paint\" style={{top: 0, left: 0, position: 'absolute', height: '700px', width:'100%', transform: `perspective(600px) rotateX(${position.xys[0]/10}deg) rotateY(${position.xys[1]/10}deg) scale(${position.xys[2]})` }}\r\n              // onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\r\n              // onMouseLeave={() => set({ xys: [0, 0, 1] })}\r\n            />\r\n            }\r\n          </ScreenWidth>\r\n        </div>\r\n        <div className=\"search\">\r\n            <Row>\r\n            <AdvancedSearch/>\r\n\r\n            <Col>\r\n\r\n            <Row>\r\n            <p className=\"welcome\"> Welcome to </p>\r\n\r\n            <p className=\"bloom\"> Bloom </p>\r\n\r\n            </Row>\r\n            <p className=\"subtitle\"> A platform that helps you find\r\n            salons, beauty experts and stylists that are located near your house\r\n            and will soon become your favorite salons. ETC ETC We can change that later. </p>\r\n\r\n          </Col>\r\n          </Row>\r\n\r\n        </div>\r\n        <div style={{position: 'absolute', height: '1000px', marginTop: '80px', alignItem: 'center'}}>\r\n\r\n          <div className=\"type_container\">\r\n            <VizSensor\r\n             onChange={(isVisible) => {\r\n               this.setState({Visible: isVisible})\r\n             }}\r\n             active={!this.state.Visible}>\r\n\r\n           <p style={{fontSize: 25, fontFamily: 'Bellota, cursive', fontWeight: 'bold'}}> At Bloom </p>\r\n           </VizSensor>\r\n\r\n           <div>\r\n            {(this.state.Visible) ?\r\n              <Typist\r\n                className=\"typist\"\r\n                avgTypingDelay={100}\r\n                startDelay={10}\r\n                cursor={{\r\n                  show: true,\r\n                  blink: true,\r\n                  element: '|',\r\n                }}\r\n              >\r\n                You can find hair salons.\r\n\r\n                <Typist.Backspace count={12} delay={200} />\r\n                  <span> nail salons.</span>\r\n                <Typist.Backspace count={12} delay={200} />\r\n                  <span> beauty salons and more.</span>\r\n\r\n\r\n            </Typist>\r\n           : null}\r\n          </div>\r\n        </div>\r\n\r\n            <div className=\"cards\">\r\n              <Col>\r\n                <Row>\r\n                <Category style={{ marginLeft: -105}} img={hair} text={\"Hair Salons\"}/>\r\n                <Category img={lipstics} text={\"Makeup Artists\"}/>\r\n                <Category img={barber} text={\"Barber Shops\"}/>\r\n                </Row>\r\n                <Row>\r\n                <Category style={{ marginLeft: -105}} img={nails} text={\"Nail Salons\"}/>\r\n                <Category img={facials} text={\"Facials\"}/>\r\n                <Category img={massage} text={\"Spa\"}/>\r\n                </Row>\r\n              </Col>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"salon_container\" style={{width:'1500px', height: '800px', marginLeft: -200, marginTop: '1400px', backgroundColor: '#bdcddb'}}>\r\n          <Row>\r\n          <img src={paint_line} className=\"paint_line\" alt=\"paint\"/>\r\n          <Col className=\"salon_text\">\r\n          <p className=\"header\"> Are you a salon owner? </p>\r\n          <p style={{fontSize: 20}}> Join our community by signing up your salon today! Join our community by signing up your salon today. Join our community by signing up your salon today.\r\n          Join our community by signing up your salon today. Join our community by signing up your salon today. </p>\r\n          </Col>\r\n          <img src={salon} className=\"salon\" alt=\"paint\"/>\r\n          </Row>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Homepage;\r\n//\r\n","import React from 'react';\r\nimport './StaticPage.css';\r\n// import Container from 'react-bootstrap/Container'\r\n\r\nclass StaticPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"backStuff\">\r\n        <br/>\r\n        <div className=\"body justify-content-center\">\r\n          <h1>Help/About</h1>\r\n          <div>\r\n            <p>\r\n            Lorem Ipsum is simply dummy text of the printing and typesetting industry.\r\n            Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,\r\n            when an unknown printer took a galley of type and scrambled it to make a type\r\n            specimen book. It has survived not only five centuries, but also the leap into\r\n            electronic typesetting, remaining essentially unchanged. It was popularised in\r\n            the 1960s with the release of Letraset sheets containing Lorem Ipsum passages,\r\n            and more recently with desktop publishing software like Aldus PageMaker including\r\n            versions of Lorem Ipsum\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StaticPage;\r\n","import React from 'react';\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nimport './LargeCarousel.css'\r\n\r\n\r\nclass LargeCarousel extends React.Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <Carousel style={this.props.style} interval=\"\">\r\n        {this.props.pictures.map((picture, index) => (\r\n          <Carousel.Item key={\"pic-\" + index}>\r\n            <img style={this.props.img} src={picture.url} alt={\"Slide \" + index} />\r\n          </Carousel.Item>\r\n        ))}\r\n      </Carousel>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LargeCarousel;\r\n","import React from 'react';\r\nimport LargeCarousel from '../LargeCarousel';\r\nimport Card from 'react-bootstrap/Card'\r\nimport { Button } from 'react-bootstrap';\r\nimport Row from 'react-bootstrap/Row'\r\n// import { getPictures } from '../s3'\r\n\r\nclass SearchCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pictures: []\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    // let picturesFetched = await getPictures('stores/' + this.props.store.id + '/images/')\r\n    // this.setState({\r\n    //   pictures: picturesFetched\r\n    // })\r\n\r\n    // can put this for now so we don't have to upload to s3\r\n    this.setState({\r\n      pictures: [\r\n        {\r\n          url: \"/hair.jpg\",\r\n          key: \"/hair.jpg\"\r\n        },\r\n        {\r\n          url: \"/nails.jpg\",\r\n          key: \"/nails.jpg\"\r\n        },\r\n        {\r\n          url: \"/salon.jpg\",\r\n          key: \"/salon.jpg\"\r\n        }\r\n      ]\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let image;\r\n    if(this.props.carousel){\r\n      image = <LargeCarousel img={{marginLeft: 20, height: 390, width: 380}} style={{width: 380, height: 400, zIndex: 1}} pictures={this.state.pictures}/>\r\n    }\r\n    else{\r\n      image = <img src={this.state.pictures[0]} alt={\"1\"} />\r\n    }\r\n\r\n    let button\r\n    if(!this.props.omitBookOption){\r\n      button = <Button style={{marginTop:170, backgroundColor: '#8CAFCA', border: 0}} onClick={() => this.props.onClickFunctionBook(this.props.store.id)}>Book Now</Button>\r\n    }\r\n\r\n    let body\r\n    if(this.props.store){\r\n      body = <div>\r\n                <Card.Title onClick={() => this.props.onClickFunctionStore(this.props.store.id)} style={{cursor: 'pointer', marginTop: 30}} >{this.props.store.name}</Card.Title>\r\n                <Card.Text style={{marginTop: 30}}>{this.props.store.description}</Card.Text>\r\n             </div>\r\n    }\r\n\r\n    return (\r\n      <Card style={this.props.styleVal}>\r\n        <Row>\r\n        {image}\r\n        <Card.Body style={{flexWrap: 'wrap', width: '20%'}}>\r\n          {body}\r\n          {button}\r\n        </Card.Body>\r\n        </Row>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchCard;\r\n","import React, { Component } from 'react';\r\nimport { Map, InfoWindow, Marker } from 'google-maps-react';\r\nimport SearchCard from '../Search/SearchCard';\r\n\r\nclass MapContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showingInfoWindow: false,  //Hides or the shows the infoWindow\r\n      activeMarker: {},          //Shows the active marker upon click\r\n      selectedPlace: {},          //Shows the infoWindow to the selected place upon a marker\r\n      activeMarkerIndex: -1\r\n    };\r\n\r\n    this.onMarkerClick = this.onMarkerClick.bind(this);\r\n    this.onClose = this.onClose.bind(this);\r\n  }\r\n\r\n  displayMarkers() { \r\n    return this.props.stores.map((store, index) => { \r\n      return <Marker key={\"store-\" + index} id={index} position={{ \r\n                     lat: store.lat, \r\n                     lng: store.lng }} \r\n                     onClick={this.onMarkerClick}\r\n                     name={store.name} /> \r\n    }) \r\n  } \r\n\r\n  onMarkerClick = (props, marker, e) =>\r\n  this.setState({\r\n    selectedPlace: props,\r\n    activeMarker: marker,\r\n    showingInfoWindow: true,\r\n    activeMarkerIndex: marker.id\r\n  });\r\n\r\n  onClose = props => {\r\n    if (this.state.showingInfoWindow) {\r\n      this.setState({\r\n        showingInfoWindow: false,\r\n        activeMarker: null\r\n      });\r\n    }\r\n  };\r\n\r\n  onClickFunction (id) {\r\n    console.log(\"Here1\")\r\n    // Currently not working...\r\n    // window.location.href='/book/' + id\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if(prevProps != this.props){\r\n      // console.log(\"BEFORE\", prevProps, \"AFTER\", this.props)\r\n      // for some reason, center is not updating, the value changes but visually it does not\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Map\r\n        google={this.props.google}\r\n        zoom={this.props.zoom}\r\n        style={this.props.mapStyles}\r\n        initialCenter={this.props.center}\r\n      >\r\n        {this.displayMarkers()}\r\n        <InfoWindow\r\n        marker={this.state.activeMarker}\r\n        visible={this.state.showingInfoWindow}\r\n        onClose={this.onClose}\r\n        >\r\n          <SearchCard store={this.props.stores[this.state.activeMarkerIndex]} styleVal={{ width: '10rem', height: '10rem' }} onClickFunction={this.onClickFunction}/>\r\n        </InfoWindow>\r\n      </Map>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MapContainer;\r\n\r\n\r\n// for fixing clicking within infowindow, some resources: https://stackoverflow.com/questions/60426907/reactjs-onclick-not-triggered-on-click-of-button-inside-google-maps-marker-inf\r\n// https://github.com/fullstackreact/google-maps-react/issues/70\r\n// https://www.google.com/search?q=onclick+within+infowindow+not+working+react&rlz=1C5CHFA_enUS821US821&oq=onclick+within+infowindow+not+working+react&aqs=chrome..69i57.7600j0j7&sourceid=chrome&ie=UTF-8","import React from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport { Form, Row} from 'react-bootstrap';\r\nimport Col from 'react-bootstrap/Col'\r\nimport SearchCard from './SearchCard'\r\nimport './SearchDisplay.css'\r\nimport MapContainer from '../Map/MapContainer'\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\n// import Chip from '@material-ui/core/Chip';\r\n// import Select from '@material-ui/core/Select';\r\n// import MenuItem from '@material-ui/core/MenuItem';\r\n// import Input from '@material-ui/core/Input';\r\nimport { FiSearch} from 'react-icons/fi';\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\n\r\nclass SearchDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n      stores: [],\r\n      center: {\r\n        lat: 0.0,\r\n        lng: 0.0\r\n      },\r\n      zoom: 12,\r\n      mapStyles: {\r\n        width: '100%',\r\n        height: '100%'\r\n      },\r\n      center: {\r\n        lat: '',\r\n        lng: ''\r\n      },\r\n      category: [\"Nail Salon\", \"Hair Salon\",  \"Facials\",  \"Barbershops\"],\r\n      selected: [],\r\n      address: '',\r\n      distance: 1,\r\n      nails: false,\r\n      hair: false,\r\n      facials: false,\r\n      barber: false\r\n    }\r\n\r\n    this.autocomplete = null\r\n    \r\n    this.handlePlaceSelect = this.handlePlaceSelect.bind(this);\r\n    this.onSelect = this.onSelect.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  onSelect(selectedList, selectedItem) {\r\n    console.log(this.state.selected)\r\n    this.setState({\r\n      selected: selectedList\r\n    })\r\n\r\n    if(selectedItem == \"Nail Salon\"){\r\n      this.setState({\r\n        nails: true\r\n      })\r\n    }\r\n    else if(selectedItem == \"Hair Salon\"){\r\n      this.setState({\r\n        hair: true\r\n      })\r\n    }\r\n    else if(selectedItem == \"Facials\"){\r\n      this.setState({\r\n        facials: true\r\n      })\r\n    }\r\n    else{\r\n      this.setState({\r\n        barber: true\r\n      })\r\n    }\r\n  }\r\n \r\n  onRemove(selectedList, removedItem) {\r\n    console.log(this.state.selected)\r\n    this.setState({\r\n      selected: selectedList\r\n    })\r\n    if(removedItem == \"Nail Salon\"){\r\n      this.setState({\r\n        nails: false\r\n      })\r\n    }\r\n    else if(removedItem == \"Hair Salon\"){\r\n      this.setState({\r\n        hair: false\r\n      })\r\n    }\r\n    else if(removedItem == \"Facials\"){\r\n      this.setState({\r\n        facials: false\r\n      })\r\n    }\r\n    else{\r\n      this.setState({\r\n        barber: false\r\n      })\r\n    }\r\n  }\r\n\r\n  handleChange (event) {\r\n    // let newArr = this.state.selected;\r\n    // newArr.push(event.target.value);\r\n    // // this.setState({\r\n    // //   selected: newArr,\r\n    // // })\r\n\r\n    this.setState({[event.target.id]: parseInt(event.target.value) || event.target.value});\r\n  };\r\n\r\n  componentDidMount(){\r\n    const google = window.google;\r\n    this.autocomplete = new google.maps.places.Autocomplete(document.getElementById('autocomplete'), { })\r\n\r\n    this.autocomplete.addListener(\"place_changed\", this.handlePlaceSelect)\r\n\r\n    if(this.props.location.state && this.props.location.state.stores && this.props.location.state.center){\r\n      this.setState({\r\n        stores: this.props.location.state.stores,\r\n        center: this.props.location.state.center\r\n      })\r\n    }\r\n    else{\r\n      let link = window.location.href.split(\"search\")\r\n      let query = \"\"\r\n\r\n      if(link.length > 1){\r\n        query = link[1]\r\n      }\r\n\r\n      this.getResults(query);\r\n    }\r\n  }\r\n\r\n  handlePlaceSelect() {\r\n    let addressObject = this.autocomplete.getPlace()\r\n    let address = addressObject.address_components.map(function(elem){\r\n                      return elem.long_name;\r\n                  }).join(\", \");\r\n\r\n    this.setState({\r\n      address: address\r\n    })\r\n  }\r\n\r\n  handleSubmit(){\r\n    let queryString = require('./helper.js').queryString;\r\n    const formState = (({ address, distance, nails, hair }) => ({ address, distance, nails, hair }))(this.state);\r\n    let query = queryString(formState)\r\n    this.getResults(query)\r\n  }\r\n\r\n  getResults(query) {\r\n    fetch(fetchDomain + '/stores' + query, {\r\n      method: \"GET\",\r\n      headers: {\r\n          'Content-type': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    .then(function(response){\r\n      if(response.status!==200){\r\n        // should throw an error here\r\n        console.log(\"ERROR!\")\r\n      }\r\n      else{\r\n        return response.json();\r\n      }\r\n    })\r\n    .then(data => {\r\n      if(data){\r\n        this.setState({\r\n          stores: data,\r\n          center: {\r\n            lat: data[0].lat,\r\n            lng: data[0].lng\r\n          }\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { category } = this.state;\r\n    let storeCards = null\r\n    let map = null\r\n    if(this.state.stores.length > 0){\r\n      storeCards = this.state.stores.map(store => (\r\n        <Row key={\"store-\" + store.id} style={{width: '100%', height: 400, marginBottom: 10}}>\r\n            <SearchCard store={store}\r\n                        carousel={true}\r\n                        styleVal={{ width: '100%', height: '100%'}}\r\n                        onClickFunctionBook={() =>  window.location.href='/book/' + store.id}\r\n                        onClickFunctionStore={() =>  window.location.href='/stores/' + store.id}\r\n\r\n                        />\r\n\r\n        </Row>\r\n      ))\r\n\r\n      map = <Col style={{position: 'fixed', width: '50%', height: '100%', right: 0, marginTop:-10}}>\r\n              <MapContainer google={window.google}\r\n                            stores={this.state.stores}\r\n                            center={this.state.center}\r\n                            zoom={this.state.zoom}\r\n                            mapStyles={this.state.mapStyles}/>\r\n            </Col>\r\n    }\r\n    else{\r\n      storeCards = <h1>No Results!</h1>\r\n    }\r\n\r\n    return (\r\n\r\n      <Container fluid>\r\n        <Row>\r\n          <div style={{position: 'fixed', marginTop:0, zIndex: 5, backgroundColor: '#F0F0F0', width: '51.25%', height: 230, paddingTop: 40}}>\r\n            <p className=\"search_title\"> Search for salons... </p>\r\n\r\n            <div style={{ marginLeft: '15%', width: '100%', display: 'flex', flexDirection: 'row'}}>\r\n              <Form.Group controlId=\"autocomplete\">\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Try 'New Haven, CT'\"\r\n                  autoComplete=\"new-password\"\r\n                  style={{width: 500}}\r\n                />\r\n\r\n              </Form.Group>\r\n              <button className=\"btn btn-link\" style={{paddingRight: \"2px\", paddingBottom:\"20px\"}} onClick={this.handleSubmit} disabled={!this.state.address || this.state.selected.length == 0}>\r\n                <FiSearch/>\r\n              </button>\r\n              {/* <Button  size={35} style={{marginLeft: 5, paddingRight:\"10px\", cursor: \"pointer\"}} onClick={this.handleSubmit} disabled={!this.state.address}/> */}\r\n            </div>\r\n            <Row>\r\n              <Form.Control style={{marginLeft: '16.2%', width: '12%', height: 40}} as=\"select\" id=\"distance\" onChange={this.handleChange}>\r\n                <option>1 mile</option>\r\n                <option>5 miles</option>\r\n                <option>10 miles</option>\r\n                <option>25 miles</option>\r\n                <option>50 miles</option>\r\n              </Form.Control>\r\n\r\n              <Multiselect\r\n                isObject={false}\r\n                options={category}\r\n                // selectedValues={this.state.selected}\r\n                onSelect={this.onSelect}\r\n                onRemove={this.onRemove}\r\n                placeholder=\"Category\"\r\n                closeIcon=\"cancel\"\r\n                // displayValue=\"name\"\r\n                style={{multiselectContainer: {marginLeft: '2%', width: '65%'},  groupHeading:{width: 50, maxWidth: 50}, chips: { background: \"#587096\", height: 35 }, inputField: {color: 'black'}, searchBox: { minWidth: 250, width: '100%', height: '30', backgroundColor: 'white', borderRadius: \"5px\" }} }\r\n                />\r\n            </Row>\r\n          </div>\r\n\r\n          <div style={{marginLeft: 15, marginTop: 280, position: 'absolute'}}>\r\n            <p style={{fontSize: 16, marginLeft: '-80%'}}> {this.state.stores.length} results found. </p>\r\n            {storeCards}\r\n          </div>\r\n          {map}\r\n        </Row>\r\n      </Container>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchDisplay;\r\n","import React from 'react';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Card from 'react-bootstrap/Card'\r\nimport './ServiceSelection.css'\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nclass ServiceSelection extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      categories: ['Nails', 'Hair', 'Makeup', 'Eyelashes', 'Eyebrows', 'Facials', 'Skin Care']\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    let currService = this.props.services.find(x => x.name === event.target.id)\r\n    if (this.props.selectedServices.find(x => x.name === currService.name)) {\r\n      this.props.updateReservation(true, currService)\r\n    }\r\n    else {\r\n      this.props.updateReservation(false, currService);\r\n    }\r\n    this.setState({ [event.target.id]: !this.state[event.target.id] })\r\n  }\r\n\r\n  render() {\r\n    let that = this;\r\n    const ServiceCheckBoxes = (props) => {\r\n      if (props.services) {\r\n        const categories = props.categories.map((category) => {\r\n          return <div id={category} key={category} className=\"pl-4\">\r\n              <h4>{category}</h4>\r\n              {\r\n                props.services.map((service) => {\r\n                  if(service.category == category) {\r\n                    return <div key={service.name}>\r\n                      <Row>\r\n                        <Col xs='8' sm='10'>\r\n                          <Form.Check\r\n                            custom\r\n                            type=\"checkbox\" \r\n                            id={service.name}\r\n                            label={service.name} \r\n                            checked={this.props.selectedServices.find(x => x.name === service.name)}\r\n                            onChange={this.handleChange}\r\n                            className='formCustom'\r\n                          />\r\n                        </Col>\r\n                        <Col xs='4' sm='2'>\r\n                          <h5 className=\"pt-2 text-center\">${service.cost.toFixed(2)}</h5>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                  }\r\n                })\r\n              }\r\n            </div>\r\n        })\r\n        return categories\r\n      }\r\n      return null\r\n    }\r\n    return (\r\n      <Card className='py-3'>\r\n        <h3>Select Services</h3>\r\n          <Row className=\"text-left\">\r\n            <Col>\r\n              <ServiceCheckBoxes categories={this.state.categories} services={this.props.services} />\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"justify-content-center\">\r\n            <Col md=\"3\">\r\n            <Button block onClick={this.props.handleSubmit}>Next</Button>\r\n            </Col>\r\n          </Row>\r\n        \r\n      </Card>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default ServiceSelection;\r\n","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './DateSelection.css';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport store from '../../reduxFolder/store';\r\nimport { addAlert } from '../../reduxFolder/actions/alert'\r\nimport GridLoader from 'react-spinners/GridLoader'\r\nimport { css } from '@emotion/core'\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n\r\nclass DateSelection extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      startDate: new Date(),\r\n      currDate: new Date(),\r\n      selectedTime: 540,\r\n      loading: true,\r\n      appointments: []\r\n    };\r\n  }\r\n\r\n  handleDateChange = date => {\r\n    if (date.getMonth() != this.state.startDate.getMonth()) {\r\n      this.setState({\r\n        loading: true\r\n      })\r\n      fetch(fetchDomain + '/stores/' + this.props.store_id + '/appointments/month/' + (parseInt(date.getMonth()) + 1), {\r\n        method: \"GET\",\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      })\r\n        .then(function (response) {\r\n          if (response.status !== 200) {\r\n            store.dispatch(addAlert(response))\r\n          }\r\n          else {\r\n            return response.json()\r\n          }\r\n        })\r\n        .then(data => {\r\n          let parsedData = data.map(appointment => {\r\n            appointment.date = new Date(appointment.date)\r\n            return appointment\r\n          })\r\n          this.setState({\r\n            appointments: parsedData,\r\n            currDate: date,\r\n            startDate: date,\r\n            loading: false\r\n          })\r\n        });\r\n    }\r\n    this.setState({\r\n      currDate: date\r\n    });\r\n  };\r\n\r\n  handleSelectChange = (event) => {\r\n    this.setState({\r\n      selectedTime: parseInt(event.target.value)\r\n    });\r\n  };\r\n\r\n  handleSlotClick = (schedule) => {\r\n    this.props.updateAppointments(schedule)\r\n    this.props.handleSubmit()\r\n  }\r\n\r\n  convertMinsToHrsMins(mins) {\r\n    let h = Math.floor(mins / 60);\r\n    let m = mins % 60;\r\n    let am = false\r\n    if (h == 24) {\r\n      am = true\r\n      h -= 12\r\n    }\r\n    else if (h < 12) {\r\n      am = true\r\n    } else if (h != 12) {\r\n      h -= 12\r\n    }\r\n    h = h < 10 ? '0' + h : h;\r\n    if (h == 0) {\r\n      h = '12'\r\n    }\r\n    m = m < 10 ? '0' + m : m;\r\n    if (am) {\r\n      return `${h}:${m}am`;\r\n    } else {\r\n      return `${h}:${m}pm`;\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(fetchDomain + '/stores/' + this.props.store_id + '/appointments/month/' + (parseInt(this.state.startDate.getMonth()) + 1), {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n      .then(function (response) {\r\n        if (response.status !== 200) {\r\n          store.dispatch(addAlert(response))\r\n        }\r\n        else {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(data => {\r\n        let parsedData = data.map(appointment => {\r\n          appointment.date = new Date(appointment.date)\r\n          return appointment\r\n        })\r\n        this.setState({\r\n          appointments: parsedData,\r\n          loading: false\r\n        })\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const CreateTimeSelects = (props) => {\r\n      let items = [];\r\n      for (let i = this.props.storeHours[this.state.startDate.getDay()].open_time; i + this.props.time <= this.props.storeHours[this.state.startDate.getDay()].close_time; i += 60) {\r\n        items.push(<option key={i} value={i}>{this.convertMinsToHrsMins(i)}</option>);\r\n      }\r\n      return items;\r\n    }\r\n\r\n    const SlotsAtSelectedTime = () => {\r\n      let slots = []\r\n      let schedules = []\r\n      // Loop through different appointment start times for the day\r\n      for (let i = this.state.selectedTime; (i < this.state.selectedTime + 120 && i + this.props.time <= this.props.storeHours[this.state.currDate.getDay()].close_time); i += 15) {\r\n        let currTime = i\r\n        let foundSchedule = false\r\n        let currSchedule = []\r\n        let currDaySchedules = this.props.workersSchedules.filter(element => element.day_of_the_week == this.state.currDate.getDay());\r\n        let scheduleStillWorks = true\r\n        // We're going to increment through the workers that are scheduled for today and build a schedule bit by bit until we finish or realize there are no more appointments for the day\r\n        // Don't want to lose the original values of currTime, currService, and k when we continue ahead in our schedule\r\n        let currScheduleCurrTime = currTime\r\n        let currScheduleCurrWorkerIndex = 0\r\n        let currScheduleServiceIndex = 0\r\n        // Start building our schedule\r\n        while (scheduleStillWorks && !foundSchedule) {\r\n          let available = true\r\n          let currScheduleCurrService = this.props.selectedServices[currScheduleServiceIndex]\r\n          let currScheduleCurrWorker = currDaySchedules[currScheduleCurrWorkerIndex].worker_id\r\n          // Check if appointment is within worker's hours\r\n          if (currDaySchedules[currScheduleCurrWorkerIndex].start_time > currScheduleCurrTime || currDaySchedules[currScheduleCurrWorkerIndex].end_time < (currScheduleCurrTime + currScheduleCurrService.duration)) {\r\n            available = false\r\n          } else {\r\n            let currWorkerAppointments = this.state.appointments.filter(appointment => appointment.worker_id == currScheduleCurrWorker && appointment.date.setHours(0, 0, 0, 0) == this.state.currDate.setHours(0, 0, 0, 0))\r\n            // Check for conflicts via worker's existing appointments for the day\r\n            for (let m = 0; m < currWorkerAppointments.length; m++) {\r\n              if ((currScheduleCurrTime >= currWorkerAppointments[m].start_time && currScheduleCurrTime <= currWorkerAppointments[m].end_time) || (currScheduleCurrTime + currScheduleCurrService.duration >= currWorkerAppointments[m].start_time && currScheduleCurrTime + currScheduleCurrService.duration <= currWorkerAppointments[m].end_time)) {\r\n                // Worker is unavailable\r\n                available = false\r\n                break\r\n              }\r\n            }\r\n          }\r\n\r\n          if (available) {\r\n            // Add slot to the schedule we are building\r\n            currSchedule.push({ worker_id: currScheduleCurrWorker, service_id: currScheduleCurrService.id, start_time: currScheduleCurrTime, end_time: currScheduleCurrTime + currScheduleCurrService.duration, price: currScheduleCurrService.cost, date: this.state.startDate })\r\n            currScheduleCurrTime += currScheduleCurrService.duration\r\n            currScheduleServiceIndex += 1\r\n            //NOTE, will always cycle to first worker. What if we want to maintain worker for entire appointment duration? May be worth refactoring for continuity. \r\n            currScheduleCurrWorkerIndex = 0\r\n            if (currScheduleServiceIndex == this.props.selectedServices.length) {\r\n              //We've found a worker for each service in the appointment. We're done. \r\n              foundSchedule = true\r\n            }\r\n          } else if (currScheduleCurrWorkerIndex + 1 < currDaySchedules.length) {\r\n            // continue checking if there's another worker available for this service\r\n            currScheduleCurrWorkerIndex += 1\r\n          } else {\r\n            // no workers were available for this appointment. \r\n            // NOTE: it may be possible, in the case where there are multiple services selected for the appointment, that there is still some combination of worker slots to make this appointment work. I'm only checking linearly. This may be worth refactoring for better scheduling, but the tradeoff is increased complexity in scheduling. \r\n            scheduleStillWorks = false\r\n          }\r\n        }\r\n\r\n        if (foundSchedule) {\r\n          schedules.push(currSchedule)\r\n          slots.push(<Button className=\"mt-3 mx-2\" key={i} onClick={() => this.handleSlotClick(currSchedule)}>{this.convertMinsToHrsMins(i)}</Button>)\r\n        }\r\n      }\r\n      if (slots.length == 0) {\r\n        return <h1>No available appointments</h1>\r\n      }\r\n      return slots\r\n    }\r\n\r\n    const DisplayWithLoading = (props) => {\r\n      if (this.state.loading) {\r\n        return <Row className=\"vertical-center\">\r\n          <Col>\r\n            <GridLoader\r\n              css={override}\r\n              size={20}\r\n              color={\"#2196f3\"}\r\n              loading={this.state.isLoading}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      } else {\r\n        return <Row className=\"justify-content-center text-xs-center text-sm-left pl-2\">\r\n          <Col xs=\"12\" md=\"11\" className=\"px-1\">\r\n            {/* Maybe want to have this with multiple rows, each row belongs to technician. One last row is technician mix to make the appointment work out */}\r\n            <SlotsAtSelectedTime />\r\n          </Col>\r\n        </Row>\r\n\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Card\r\n        text='dark'\r\n        className='mt-0 py-3'\r\n      >\r\n        <div id=\"date-selection-form\">\r\n          <h3>Select Appointment Time</h3>\r\n          <Card.Body className='pt-0'>\r\n            <Row className='justify-content-center'>\r\n              <Col xs=\"11\" md=\"6\" className=\"mt-3\">\r\n                <div className=\"customDatePickerWidth\">\r\n                  <DatePicker\r\n                    className=\"form-control\"\r\n                    selected={this.state.currDate}\r\n                    onChange={this.handleDateChange}\r\n                    minDate={new Date()}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col xs=\"11\" md=\"6\" className=\"mt-3\">\r\n                <Form>\r\n                  <Form.Control as=\"select\" value={this.state.selectedTime} onChange={this.handleSelectChange.bind(this)}>\r\n                    <CreateTimeSelects date={this.state.startDate} />\r\n                  </Form.Control>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n            <DisplayWithLoading />\r\n          </Card.Body>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DateSelection;","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport './BookingPage.css';\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport { FaEnvelope, FaUser, FaPhone } from 'react-icons/fa';\r\nimport { Formik } from 'formik';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport store from '../../reduxFolder/store';\r\nimport { addAlert } from '../../reduxFolder/actions/alert'\r\nimport GridLoader from 'react-spinners/GridLoader'\r\nimport { css } from '@emotion/core'\r\nimport Cookies from 'js-cookie';\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n\r\nclass DateSelection extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName: '',\r\n      lastName: '',\r\n      phone: '',\r\n      email: '',\r\n      user_id: -1,\r\n    };\r\n    this.triggerAppointmentDisplay = this.triggerAppointmentDisplay.bind(this);\r\n  }\r\n\r\n  // redirect to the appointment display page and pass the new store data\r\n  triggerAppointmentDisplay(returnedAppointment) {\r\n    this.props.history.push({\r\n      pathname: '/appointments/' + returnedAppointment,\r\n      state: {\r\n        appointmentGroupId: returnedAppointment\r\n      }\r\n    })\r\n  }\r\n\r\n  convertMinsToHrsMins(mins) {\r\n    let h = Math.floor(mins / 60);\r\n    let m = mins % 60;\r\n    let am = false\r\n    if (h == 24) {\r\n      am = true\r\n      h -= 12\r\n    }\r\n    else if (h < 12) {\r\n      am = true\r\n    } else if (h != 12) {\r\n      h -= 12\r\n    }\r\n    h = h < 10 ? '0' + h : h;\r\n    if (h == 0) {\r\n      h = '12'\r\n    }\r\n    m = m < 10 ? '0' + m : m;\r\n    if (am) {\r\n      return `${h}:${m}am`;\r\n    } else {\r\n      return `${h}:${m}pm`;\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount () {\r\n    if(Cookies.get('user')){\r\n      let user = JSON.parse(Cookies.get('user').substring(2))\r\n      this.setState({\r\n        firstName: user.first_name,\r\n        lastName: user.last_name,\r\n        email: user.email,\r\n        phone: user.phone,\r\n        user_id: user.id\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const DisplayWithLoading = (props) => {\r\n      if (this.state.loading) {\r\n        return <Card\r\n        text='dark'\r\n        className='mt-0 py-3'\r\n      >\r\n        <Card.Body className='pt-0'>\r\n          <Row className=\"vertical-center\">\r\n            <Col>\r\n              <GridLoader\r\n                css={override}\r\n                size={20}\r\n                color={\"#2196f3\"}\r\n                loading={this.state.isLoading}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n      } else {\r\n        return <Card text='dark'\r\n        className='mt-0 py-3' id=\"date-selection-form\">\r\n          <Card.Title>Book Appointment</Card.Title>\r\n          <Card.Body className='pt-0'>\r\n            <Row className='justify-content-center'>\r\n              <Formik\r\n                initialValues={{\r\n                  firstName: this.state.firstName,\r\n                  lastName: this.state.lastName,\r\n                  phone: this.state.phone,\r\n                  email: this.state.email,\r\n                  user_id: this.state.user_id\r\n                }}\r\n                onSubmit={(values) => {\r\n                  values.appointments = this.props.appointments\r\n                  let triggerAppointmentDisplay = this.triggerAppointmentDisplay\r\n\r\n                  fetch(fetchDomain + '/stores/' + this.props.store_id + '/appointments/new', {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                      'Content-type': 'application/json',\r\n                      'Accept': 'application/json'\r\n                    },\r\n                    credentials: 'include',\r\n                    body: JSON.stringify(values)\r\n                  })\r\n                    .then(function (response) {\r\n                      if (response.status !== 200) {\r\n                        // throw an error alert\r\n                        store.dispatch(addAlert(response))\r\n                      }\r\n                      else {\r\n                        return response.json();\r\n                      }\r\n                    })\r\n                    .then(async data => {\r\n                      if (data) {\r\n                        triggerAppointmentDisplay(data)\r\n                      }\r\n                    });\r\n                }}\r\n              >\r\n                {({ values,\r\n                  errors,\r\n                  touched,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                  setFieldValue\r\n                }) => (\r\n                    <Form className=\"form-style\">\r\n\r\n                      <Form.Group controlId=\"formFirstName\">\r\n                        <InputGroup>\r\n                          <InputGroup.Prepend>\r\n                            <InputGroup.Text>\r\n                              <FaUser />\r\n                            </InputGroup.Text>\r\n                          </InputGroup.Prepend>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            value={values.firstName}\r\n                            placeholder=\"First Name\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            className={touched.firstName && errors.firstName ? \"error\" : null} />\r\n                        </InputGroup>\r\n                        {touched.firstName && errors.firstName ? (\r\n                          <div className=\"error-message\">{errors.firstName}</div>\r\n                        ) : null}\r\n                      </Form.Group>\r\n\r\n                      <Form.Group controlId=\"formLastName\">\r\n                        <InputGroup>\r\n                          <InputGroup.Prepend>\r\n                            <InputGroup.Text>\r\n                              <FaUser />\r\n                            </InputGroup.Text>\r\n                          </InputGroup.Prepend>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            value={values.lastName}\r\n                            placeholder=\"Last Name\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            className={touched.lastName && errors.lastName ? \"error\" : null} />\r\n                        </InputGroup>\r\n                        {touched.lastName && errors.lastName ? (\r\n                          <div className=\"error-message\">{errors.lastName}</div>\r\n                        ) : null}\r\n                      </Form.Group>\r\n\r\n                      <Form.Group controlId=\"formPhone\">\r\n                        <InputGroup>\r\n                          <InputGroup.Prepend>\r\n                            <InputGroup.Text>\r\n                              <FaPhone />\r\n                            </InputGroup.Text>\r\n                          </InputGroup.Prepend>\r\n                          <Form.Control type=\"text\"\r\n                            value={values.phone}\r\n                            placeholder=\"Phone Number\"\r\n                            name=\"phone\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            className={touched.phone && errors.phone ? \"error\" : null} />\r\n                        </InputGroup>\r\n                        {touched.phone && errors.phone ? (\r\n                          <div className=\"error-message\">{errors.phone}</div>\r\n                        ) : null}\r\n                      </Form.Group>\r\n\r\n                      <Form.Group controlId=\"formEmail\">\r\n                        <InputGroup>\r\n                          <InputGroup.Prepend>\r\n                            <InputGroup.Text>\r\n                              <FaEnvelope />\r\n                            </InputGroup.Text>\r\n                          </InputGroup.Prepend>\r\n                          <Form.Control\r\n                            type=\"email\"\r\n                            value={values.email}\r\n                            placeholder=\"Email\"\r\n                            name=\"email\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            className={touched.email && errors.email ? \"error\" : null} />\r\n                        </InputGroup>\r\n                        {touched.email && errors.email ? (\r\n                          <div className=\"error-message\">{errors.email}</div>\r\n                        ) : null}\r\n                      </Form.Group>\r\n\r\n                      <Button onClick={handleSubmit}>Submit</Button>\r\n                    </Form>\r\n                  )}\r\n              </Formik>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      }\r\n    }\r\n\r\n    return (\r\n      <DisplayWithLoading />\r\n    );\r\n  }\r\n}\r\n\r\nexport default DateSelection;","import React from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport ServiceSelection from './ServiceSelection'\r\nimport './ReservationPage.css'\r\nimport { Row, Col, Card, ListGroup } from 'react-bootstrap'\r\nimport { FaArrowLeft } from 'react-icons/fa'\r\nimport DateSelection from './DateSelection'\r\nimport { css } from '@emotion/core'\r\nimport GridLoader from 'react-spinners/GridLoader'\r\nimport BookingPage from './BookingPage';\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n\r\nclass ReservationPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      storeName: null,\r\n      total: 0,\r\n      time: 0,\r\n      currentStep: 1,\r\n      selectedServices: [],\r\n      services: [],\r\n      loading: true,\r\n      workers: [],\r\n      workersSchedules: [],\r\n      storeHours: []\r\n    };\r\n  }\r\n\r\n  updateReservation = (removal, currService) => {\r\n    if (removal) {\r\n      this.setState({ time: this.state.time - currService.duration })\r\n      this.setState({ total: this.state.total - currService.cost })\r\n      this.setState({\r\n        selectedServices: this.state.selectedServices.filter(function (selectedService) {\r\n          return currService.id !== selectedService.id;\r\n        }\r\n        )\r\n      })\r\n    } else {\r\n      this.setState({ time: this.state.time + currService.duration })\r\n      this.setState({ total: this.state.total + currService.cost })\r\n      this.setState({ selectedServices: [...this.state.selectedServices, currService] })\r\n    }\r\n  }\r\n\r\n  backStep = (event) => {\r\n    var newStep = this.state.currentStep - 1\r\n    this.setState({\r\n      currentStep: newStep\r\n    })\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    if (this.state.currentStep < 4) {\r\n      var newStep = this.state.currentStep + 1\r\n      this.setState({\r\n        currentStep: newStep\r\n      })\r\n    } else {\r\n      alert(JSON.stringify(this.state));\r\n    }\r\n  }\r\n\r\n  updateAppointments = (receivedAppointments) => {\r\n    this.setState({\r\n      appointments: receivedAppointments\r\n    })\r\n  }\r\n\r\n  pluralize = (val, word, plural = word + 's') => {\r\n    const _pluralize = (num, word, plural = word + 's') =>\r\n      [1, -1].includes(Number(num)) ? word : plural;\r\n    if (typeof val === 'object') return (num, word) => _pluralize(num, word, val[word]);\r\n    return _pluralize(val, word, plural);\r\n  };\r\n\r\n  timeConvert = (n) => {\r\n    var num = n;\r\n    var hours = (num / 60);\r\n    var rhours = Math.floor(hours);\r\n    var minutes = (hours - rhours) * 60;\r\n    var rminutes = Math.round(minutes);\r\n    return rhours + \" \" + this.pluralize(rhours, 'hour') + \" and \" + rminutes + \" \" + this.pluralize(rminutes, 'minute');\r\n  }\r\n\r\n  prefetchSchedules = () => {\r\n    Promise.all([\r\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/workers/schedules', {\r\n        method: \"GET\",\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      }).then(value => value.json()),\r\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/storeHours\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      }).then(value => value.json())\r\n    ]).then(allResponses => {\r\n      this.setState({\r\n        storeHours: allResponses[1],\r\n        workersSchedules: allResponses[0]\r\n      })\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    // need to get store category, fetch?\r\n    Promise.all([\r\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/services\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    }).then(value => value.json()),\r\n    fetch(fetchDomain + '/stores/' + this.props.match.params.store_id, {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    }).then(value => value.json())\r\n    ]).then(allResponses => {\r\n      const response1 = allResponses[0]\r\n      const response2 = allResponses[1]\r\n      this.setState({\r\n        services: response1,\r\n        storeName: response2.name,\r\n        workers: response2.workers,\r\n        loading: false\r\n      })\r\n    })\r\n\r\n    this.prefetchSchedules()\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    let that = this;\r\n    const DisplayByStep = (props) => {\r\n      if (this.state.loading) {\r\n        return <Card className=\"fullHeight\">\r\n          <Row className=\"vertical-center\">\r\n            <Col>\r\n              <GridLoader\r\n                css={override}\r\n                size={20}\r\n                color={\"#2196f3\"}\r\n                loading={this.state.loading}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n      } else {\r\n        if (this.state.currentStep == 1) {\r\n          return <ServiceSelection services={this.state.services} updateReservation={this.updateReservation} selectedServices={this.state.selectedServices} time={this.state.time} total={this.state.total} handleSubmit={this.handleSubmit} timeConvert={this.timeConvert} pluralize={this.pluralize} />\r\n        } else if(this.state.currentStep == 2) {\r\n          return <DateSelection time={this.state.time}  store_id={this.props.match.params.store_id} selectedServices={this.state.selectedServices} storeHours={this.state.storeHours} workersSchedules={this.state.workersSchedules} handleSubmit={this.handleSubmit} updateAppointments={this.updateAppointments}/>\r\n        } else {\r\n          return <BookingPage appointments={this.state.appointments} store_id={this.props.match.params.store_id} history={this.props.history}/>\r\n        }\r\n      }\r\n    }\r\n\r\n    const DisplayBackButton = (props) => {\r\n      if (this.state.currentStep == 1) {\r\n        return null\r\n      } else {\r\n        return <FaArrowLeft size={'2em'} className=\"pt-2 pr-2\" onClick={this.backStep} />\r\n      }\r\n    }\r\n\r\n    function ServiceList(props) {\r\n      if (props.services) {\r\n        const servicesList = props.services.map((service) => {\r\n          return <ListGroup.Item variant=\"light\" key={service.name}>\r\n            <Row>\r\n              <Col lg={7}>\r\n                <Row>\r\n                  {service.name}\r\n                </Row>\r\n                <Row className=\"smallText\">\r\n                  {service.duration} {that.pluralize(service.duration, 'minute')}\r\n                </Row>\r\n              </Col>\r\n              <Col lg={5}>\r\n                <div className=\"float-right\">\r\n                  ${service.cost.toFixed(2)}\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </ListGroup.Item>;\r\n        });\r\n\r\n        return (\r\n          <ListGroup variant='flush'>{servicesList}</ListGroup>\r\n        );\r\n      }\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <Container fluid>\r\n        <Row noGutters className=\"pt-3 pb-0\">\r\n          <Col xs=\"1\">\r\n            <DisplayBackButton />\r\n          </Col>\r\n          <Col xs=\"11\" className=\"text-left\">\r\n            <h2>Step {this.state.currentStep}</h2>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col xs={12} lg={8} className=\"largeMarginBottom\">\r\n            <DisplayByStep />\r\n          </Col>\r\n          <Col xs={12} lg={4} className=\"d-none d-lg-block\">\r\n            <Card\r\n              text='dark'\r\n              className='shoppingCart mt-0'\r\n            >\r\n              <Card.Header>Shopping Cart</Card.Header>\r\n              <Card.Body className='pt-0'>\r\n                <Row className='text-left'>\r\n                  <Col>\r\n                    <ServiceList services={this.state.selectedServices} />\r\n                  </Col>\r\n                </Row>\r\n\r\n                <h2>Total: ${this.state.total.toFixed(2)}</h2>\r\n                <h2>Time: {this.state.time} minutes</h2>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col xs={12} className=\"d-lg-none shoppingCartSmall px-0\">\r\n            <Card\r\n              bg='light'\r\n              text='dark'\r\n            >\r\n              <Card.Header className='py-1'>Shopping Cart</Card.Header>\r\n              <Card.Body className=\"smallPadding\">\r\n                <h6>{this.state.selectedServices.length} Selected {this.pluralize(this.state.selectedServices.length, 'Service')}</h6>\r\n                <h6>Total: ${this.state.total.toFixed(2)}</h6>\r\n                <h6>Time: {this.timeConvert(this.state.time)}</h6>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReservationPage;","const fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\n// export let getPictures = async(prefixPassed) => {\r\n// module.exports.getPictures = async function(prefixPassed) {\r\n//   await getPictures(prefixPassed);\r\n// }\r\n// var getPictures = async function(prefixPassed) {\r\n\r\n// getting an export error, going to leave it for now\r\n\r\nasync function getPictures(prefixPassed) {\r\n  const response = await fetch(fetchDomain + '/getImages', {\r\n      method: \"POST\",\r\n      headers: {\r\n          'Content-type': 'application/json'\r\n      },\r\n      credentials: 'include',\r\n      body: JSON.stringify({prefix: prefixPassed})\r\n    })\r\n  const pictures = await response.json()\r\n\r\n  return pictures\r\n}\r\n\r\n// function for uploading all selected files to s3\r\nasync function uploadHandler(prefix, selectedFiles) {\r\n  // upload each image to s3\r\n  // have to get presigned url from server before uploading directly\r\n  for(let i = 0; i < selectedFiles.length; i++){\r\n    var tempDate = new Date();\r\n    var date = '_' + tempDate.getFullYear() + '-' + (tempDate.getMonth()+1) + '-' + tempDate.getDate() +' '+ tempDate.getHours()+':'+ tempDate.getMinutes()+':'+ tempDate.getSeconds();\r\n\r\n    let values = {\r\n      fileName: prefix + selectedFiles[i].name + date, // add the current time so its unique..\r\n      fileType: selectedFiles[i].type\r\n    }\r\n\r\n    const response = await fetch(fetchDomain + '/getPresignedUrl/', {\r\n      method: \"POST\",\r\n      headers: {\r\n          'Content-type': 'application/json'\r\n      },\r\n      credentials: 'include',\r\n      body: JSON.stringify(values)\r\n    })\r\n    const url = await response.json()\r\n\r\n    const responseS3 = await fetch(url, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            'Content-type': selectedFiles[i].type\r\n        },\r\n        body: selectedFiles[i]\r\n      })\r\n    \r\n    // if(responseS3.status!==200){\r\n    //   // throw an error alert\r\n    //   store.dispatch(addAlert(response))\r\n    // }\r\n  }\r\n}\r\n\r\n// function for uploading all selected files to s3\r\nasync function deleteHandler(keysPassed) {\r\n  // remove each image from s3\r\n  const response = await fetch(fetchDomain + '/deleteImages/', {\r\n    method: \"POST\",\r\n    headers: {\r\n        'Content-type': 'application/json'\r\n    },\r\n    credentials: 'include',\r\n    body: JSON.stringify({keys: keysPassed})\r\n  })\r\n}\r\n\r\nexport { getPictures, uploadHandler, deleteHandler}","import React from 'react';\r\nimport '../../App.css';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport { FaShoppingCart, FaRoad, FaBuilding, FaUniversity, FaGlobe, FaPen, FaPhone } from 'react-icons/fa';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Select from 'react-select';\r\nimport Cookies from 'js-cookie';\r\nimport {\r\n  addAlert\r\n} from '../../reduxFolder/actions/alert'\r\nimport store from '../../reduxFolder/store';\r\nimport { uploadHandler } from '../s3';\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nclass StoreSignupForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedFiles: null,\r\n      storeHours: [{ open_time: 540, close_time: 1020 },\r\n      { open_time: 540, close_time: 1020 },\r\n      { open_time: 540, close_time: 1020 },\r\n      { open_time: 540, close_time: 1020 },\r\n      { open_time: 540, close_time: 1020 },\r\n      { open_time: 540, close_time: 1020 },\r\n      { open_time: 540, close_time: 1020 }],\r\n    }\r\n\r\n    // options for store categories\r\n    this.options = [\r\n      { value: 'nails', label: 'Nails' },\r\n      { value: 'hair', label: 'Hair' },\r\n      { value: 'makeup', label: 'Makeup' },\r\n      { value: 'eyelashes', label: 'Eyelashes' },\r\n      { value: 'eyelash extensions', label: 'Eyelash Extensions' },\r\n      { value: 'eyebrows', label: 'Eyebrows' },\r\n      { value: 'facials', label: 'Facials' },\r\n      { value: 'skincare', label: 'Skin Care' },\r\n      { value: 'waxing', label: 'Waxing' },\r\n      { value: 'mens', label: 'Mens Services' }\r\n    ];\r\n\r\n    // RegEx for phone number validation\r\n    this.phoneRegExp = /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/\r\n\r\n    // Schema for yup\r\n    this.yupValidationSchema = Yup.object().shape({\r\n      name: Yup.string()\r\n        .min(2, \"Store name must have at least 2 characters\")\r\n        .max(100, \"Store name can't be longer than 100 characters\")\r\n        .required(\"Name is required\"),\r\n      description: Yup.string()\r\n        .min(20, \"Description must have at least 20 characters\")\r\n        .required(\"Description is required\"),\r\n      phone: Yup.string()\r\n        .matches(this.phoneRegExp, \"Phone number is not valid\")\r\n        .required(\"Phone number is required\"),\r\n      street: Yup.string()\r\n        .min(6, \"Street must have at least 6 characters\")\r\n        .max(100, \"Street can't be longer than 100 characters\")\r\n        .required(\"Street is required\"),\r\n      city: Yup.string()\r\n        .min(2, \"City must have at least 2 characters\")\r\n        .max(40, \"City can't be longer than 40 characters\")\r\n        .required(\"City is required\"),\r\n      state: Yup.string()\r\n        .min(2, \"State must have at least 2 characters\")\r\n        .max(12, \"State can't be longer than 12 characters\")\r\n        .required(\"State is required\"),\r\n      zipcode: Yup.string()\r\n        .max(20, \"Zipcode can't be longer than 100 characters\")\r\n        .required(\"Zipcode is required\"),\r\n      category: Yup.array()\r\n        .required(\"Category is required\")\r\n        .nullable()\r\n    });\r\n\r\n    this.triggerStoreDisplay = this.triggerStoreDisplay.bind(this);\r\n  }\r\n\r\n  // redirect to the store display page and pass the new store data\r\n  triggerStoreDisplay(returnedStore) {\r\n    this.props.history.push({\r\n      pathname: '/stores/' + returnedStore.id,\r\n      state: {\r\n        store: returnedStore\r\n      }\r\n    })\r\n  }\r\n\r\n  convertMinsToHrsMins(mins) {\r\n    let h = Math.floor(mins / 60);\r\n    let m = mins % 60;\r\n    let am = false\r\n    if (h == 24) {\r\n      am = true\r\n      h -= 12\r\n    }\r\n    else if (h < 12) {\r\n      am = true\r\n    } else if (h != 12) {\r\n      h -= 12\r\n    }\r\n    h = h < 10 ? '0' + h : h;\r\n    if (h == 0) {\r\n      h = '12'\r\n    }\r\n    m = m < 10 ? '0' + m : m;\r\n    if (am) {\r\n      return `${h}:${m}am`;\r\n    } else {\r\n      return `${h}:${m}pm`;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  handleSelectChange = (event) => {\r\n    var days = ['formHoursMonday', 'formHoursTuesday', 'formHoursWednesday', 'formHoursThursday', 'formHoursFriday', 'formHoursSaturday', 'formHoursSunday']\r\n    var day = days.indexOf(event.target.id)\r\n    var newStoreHours = []\r\n\r\n    if (event.target.querySelector('option').value == \"0\") {\r\n      newStoreHours = [\r\n        ...this.state.storeHours.slice(0, day),\r\n        { open_time: parseInt(event.target.value), close_time: this.state.storeHours[day].close_time },\r\n        ...this.state.storeHours.slice(day + 1)\r\n      ]\r\n    } else {\r\n      newStoreHours = [\r\n        ...this.state.storeHours.slice(0, day),\r\n        { open_time: this.state.storeHours[day].open_time, close_time: parseInt(event.target.value) },\r\n        ...this.state.storeHours.slice(day + 1)\r\n      ]\r\n    }\r\n\r\n    this.setState({\r\n      storeHours: newStoreHours\r\n    })\r\n  };\r\n\r\n  fileChangedHandler = event => {\r\n    this.setState({ selectedFiles: event.target.files })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"justify-content-center\">\r\n          <Col xs={8} sm={7} md={6} lg={5}>\r\n            <Formik\r\n              initialValues={{\r\n                name: '',\r\n                description: '',\r\n                phone: '',\r\n                street: '',\r\n                city: '',\r\n                state: '',\r\n                zipcode: '',\r\n                category: [],\r\n                owner_id: \"\"\r\n              }}\r\n              validationSchema={this.yupValidationSchema}\r\n              onSubmit={(values) => {\r\n                values.category = values.category.map(function (val) {\r\n                  return val.label;\r\n                })\r\n\r\n                values.owner_id = JSON.parse(Cookies.get('user').substring(2)).id\r\n                values.storeHours = this.state.storeHours\r\n\r\n\r\n                let triggerStoreDisplay = this.triggerStoreDisplay\r\n\r\n                fetch(fetchDomain + '/addStore', {\r\n                  method: \"POST\",\r\n                  headers: {\r\n                    'Content-type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                  },\r\n                  credentials: 'include',\r\n                  body: JSON.stringify(values)\r\n                })\r\n                  .then(function (response) {\r\n                    if (response.status !== 200) {\r\n                      // throw an error alert\r\n                      store.dispatch(addAlert(response))\r\n                    }\r\n                    else {\r\n                      return response.json();\r\n                    }\r\n                  })\r\n                  .then(async data => {\r\n                    if (data) {\r\n                      let prefix = 'stores/' + data.id + '/images/'\r\n                      if (this.state.selectedFiles) {\r\n                        await uploadHandler(prefix, this.state.selectedFiles)\r\n                      }\r\n                      triggerStoreDisplay(data)\r\n                    }\r\n                  });\r\n              }}\r\n            >\r\n              {({ values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                setFieldValue\r\n              }) => (\r\n                  <Form className=\"formBody rounded\">\r\n                    <h3>Store Sign Up</h3>\r\n\r\n                    <Form.Group controlId=\"formName\">\r\n                      <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                          <InputGroup.Text>\r\n                            <FaShoppingCart />\r\n                          </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control\r\n                          type=\"text\"\r\n                          name=\"name\"\r\n                          value={values.name}\r\n                          placeholder=\"Business Name\"\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          className={touched.name && errors.name ? \"error\" : null} />\r\n                      </InputGroup>\r\n                      {touched.name && errors.name ? (\r\n                        <div className=\"error-message\">{errors.name}</div>\r\n                      ) : null}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formDescription\">\r\n                      <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                          <InputGroup.Text>\r\n                            <FaPen />\r\n                          </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control\r\n                          as=\"textarea\"\r\n                          rows={3}\r\n                          name=\"description\"\r\n                          value={values.description}\r\n                          placeholder=\"Description\"\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          className={touched.description && errors.description ? \"error\" : null} />\r\n                      </InputGroup>\r\n                      {touched.description && errors.description ? (\r\n                        <div className=\"error-message\">{errors.description}</div>\r\n                      ) : null}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formPhone\">\r\n                      <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                          <InputGroup.Text>\r\n                            <FaPhone />\r\n                          </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control type=\"text\"\r\n                          value={values.phone}\r\n                          placeholder=\"Phone Number\"\r\n                          name=\"phone\"\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          className={touched.phone && errors.phone ? \"error\" : null} />\r\n                      </InputGroup>\r\n                      {touched.phone && errors.phone ? (\r\n                        <div className=\"error-message\">{errors.phone}</div>\r\n                      ) : null}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formStreet\">\r\n                      <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                          <InputGroup.Text>\r\n                            <FaRoad />\r\n                          </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control type=\"text\"\r\n                          value={values.street}\r\n                          placeholder=\"Street\"\r\n                          name=\"street\"\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          className={touched.street && errors.street ? \"error\" : null} />\r\n                      </InputGroup>\r\n                      {touched.street && errors.street ? (\r\n                        <div className=\"error-message\">{errors.street}</div>\r\n                      ) : null}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formCity\">\r\n                      <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                          <InputGroup.Text>\r\n                            <FaBuilding />\r\n                          </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control type=\"text\"\r\n                          value={values.city}\r\n                          placeholder=\"City\"\r\n                          name=\"city\"\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          className={touched.city && errors.city ? \"error\" : null} />\r\n                      </InputGroup>\r\n                      {touched.city && errors.city ? (\r\n                        <div className=\"error-message\">{errors.city}</div>\r\n                      ) : null}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formState\">\r\n                      <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                          <InputGroup.Text>\r\n                            <FaUniversity />\r\n                          </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control\r\n                          value={values.state}\r\n                          placeholder=\"State\"\r\n                          name=\"state\"\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          className={touched.state && errors.state ? \"error\" : null} />\r\n                      </InputGroup>\r\n                      {touched.state && errors.state ? (\r\n                        <div className=\"error-message\">{errors.state}</div>\r\n                      ) : null}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formZipcode\">\r\n                      <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                          <InputGroup.Text>\r\n                            <FaGlobe />\r\n                          </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control\r\n                          value={values.zipcode}\r\n                          placeholder=\"Zipcode\"\r\n                          name=\"zipcode\"\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          className={touched.zipcode && errors.zipcode ? \"error\" : null} />\r\n                      </InputGroup>\r\n                      {touched.zipcode && errors.zipcode ? (\r\n                        <div className=\"error-message\">{errors.zipcode}</div>\r\n                      ) : null}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formCategory\">\r\n                      <Select\r\n                        value={values.category}\r\n                        onChange={option => setFieldValue(\"category\", option)}\r\n                        name=\"category\"\r\n                        options={this.options}\r\n                        isMulti={true}\r\n                        placeholder={\"Category\"}\r\n                        className={touched.category && errors.category ? \"error\" : null}\r\n                      />\r\n                      {touched.category && errors.category ? (\r\n                        <div className=\"error-message\">{errors.category}</div>\r\n                      ) : null}\r\n                    </Form.Group>\r\n\r\n                    <h4>Store Hours</h4>\r\n\r\n                    <Form.Group controlId=\"formHoursMonday\">\r\n                      <h5 className=\"text-left\">Monday</h5>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" value={this.state.storeHours[0].open_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <option value={0}>{this.convertMinsToHrsMins(0)}</option>\r\n                            <option value={60}>{this.convertMinsToHrsMins(60)}</option>\r\n                            <option value={120}>{this.convertMinsToHrsMins(120)}</option>\r\n                            <option value={180}>{this.convertMinsToHrsMins(180)}</option>\r\n                            <option value={240}>{this.convertMinsToHrsMins(240)}</option>\r\n                            <option value={300}>{this.convertMinsToHrsMins(300)}</option>\r\n                            <option value={360}>{this.convertMinsToHrsMins(360)}</option>\r\n                            <option value={420}>{this.convertMinsToHrsMins(420)}</option>\r\n                            <option value={480}>{this.convertMinsToHrsMins(480)}</option>\r\n                            <option value={540}>{this.convertMinsToHrsMins(540)}</option>\r\n                            <option value={600}>{this.convertMinsToHrsMins(600)}</option>\r\n                            <option value={660}>{this.convertMinsToHrsMins(660)}</option>\r\n                            <option value={720}>{this.convertMinsToHrsMins(720)}</option>\r\n                            <option value={780}>{this.convertMinsToHrsMins(780)}</option>\r\n                            <option value={840}>{this.convertMinsToHrsMins(840)}</option>\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" value={this.state.storeHours[0].close_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <option value={900}>{this.convertMinsToHrsMins(900)}</option>\r\n                            <option value={960}>{this.convertMinsToHrsMins(960)}</option>\r\n                            <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\r\n                            <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\r\n                            <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\r\n                            <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\r\n                            <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\r\n                            <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\r\n                            <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\r\n                            <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formHoursTuesday\">\r\n                      <h5 className=\"text-left\">Tuesday</h5>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" value={this.state.storeHours[1].open_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <option value={0}>{this.convertMinsToHrsMins(0)}</option>\r\n                            <option value={60}>{this.convertMinsToHrsMins(60)}</option>\r\n                            <option value={120}>{this.convertMinsToHrsMins(120)}</option>\r\n                            <option value={180}>{this.convertMinsToHrsMins(180)}</option>\r\n                            <option value={240}>{this.convertMinsToHrsMins(240)}</option>\r\n                            <option value={300}>{this.convertMinsToHrsMins(300)}</option>\r\n                            <option value={360}>{this.convertMinsToHrsMins(360)}</option>\r\n                            <option value={420}>{this.convertMinsToHrsMins(420)}</option>\r\n                            <option value={480}>{this.convertMinsToHrsMins(480)}</option>\r\n                            <option value={540}>{this.convertMinsToHrsMins(540)}</option>\r\n                            <option value={600}>{this.convertMinsToHrsMins(600)}</option>\r\n                            <option value={660}>{this.convertMinsToHrsMins(660)}</option>\r\n                            <option value={720}>{this.convertMinsToHrsMins(720)}</option>\r\n                            <option value={780}>{this.convertMinsToHrsMins(780)}</option>\r\n                            <option value={840}>{this.convertMinsToHrsMins(840)}</option>\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" value={this.state.storeHours[1].close_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <option value={900}>{this.convertMinsToHrsMins(900)}</option>\r\n                            <option value={960}>{this.convertMinsToHrsMins(960)}</option>\r\n                            <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\r\n                            <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\r\n                            <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\r\n                            <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\r\n                            <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\r\n                            <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\r\n                            <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\r\n                            <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group controlId=\"formHoursWednesday\">\r\n                      <h5 className=\"text-left\">Wednesday</h5>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" value={this.state.storeHours[2].open_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <option value={0}>{this.convertMinsToHrsMins(0)}</option>\r\n                            <option value={60}>{this.convertMinsToHrsMins(60)}</option>\r\n                            <option value={120}>{this.convertMinsToHrsMins(120)}</option>\r\n                            <option value={180}>{this.convertMinsToHrsMins(180)}</option>\r\n                            <option value={240}>{this.convertMinsToHrsMins(240)}</option>\r\n                            <option value={300}>{this.convertMinsToHrsMins(300)}</option>\r\n                            <option value={360}>{this.convertMinsToHrsMins(360)}</option>\r\n                            <option value={420}>{this.convertMinsToHrsMins(420)}</option>\r\n                            <option value={480}>{this.convertMinsToHrsMins(480)}</option>\r\n                            <option value={540}>{this.convertMinsToHrsMins(540)}</option>\r\n                            <option value={600}>{this.convertMinsToHrsMins(600)}</option>\r\n                            <option value={660}>{this.convertMinsToHrsMins(660)}</option>\r\n                            <option value={720}>{this.convertMinsToHrsMins(720)}</option>\r\n                            <option value={780}>{this.convertMinsToHrsMins(780)}</option>\r\n                            <option value={840}>{this.convertMinsToHrsMins(840)}</option>\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" value={this.state.storeHours[2].close_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <option value={900}>{this.convertMinsToHrsMins(900)}</option>\r\n                            <option value={960}>{this.convertMinsToHrsMins(960)}</option>\r\n                            <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\r\n                            <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\r\n                            <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\r\n                            <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\r\n                            <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\r\n                            <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\r\n                            <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\r\n                            <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formHoursThursday\">\r\n                      <h5 className=\"text-left\">Thursday</h5>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" value={this.state.storeHours[3].open_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <option value={0}>{this.convertMinsToHrsMins(0)}</option>\r\n                            <option value={60}>{this.convertMinsToHrsMins(60)}</option>\r\n                            <option value={120}>{this.convertMinsToHrsMins(120)}</option>\r\n                            <option value={180}>{this.convertMinsToHrsMins(180)}</option>\r\n                            <option value={240}>{this.convertMinsToHrsMins(240)}</option>\r\n                            <option value={300}>{this.convertMinsToHrsMins(300)}</option>\r\n                            <option value={360}>{this.convertMinsToHrsMins(360)}</option>\r\n                            <option value={420}>{this.convertMinsToHrsMins(420)}</option>\r\n                            <option value={480}>{this.convertMinsToHrsMins(480)}</option>\r\n                            <option value={540}>{this.convertMinsToHrsMins(540)}</option>\r\n                            <option value={600}>{this.convertMinsToHrsMins(600)}</option>\r\n                            <option value={660}>{this.convertMinsToHrsMins(660)}</option>\r\n                            <option value={720}>{this.convertMinsToHrsMins(720)}</option>\r\n                            <option value={780}>{this.convertMinsToHrsMins(780)}</option>\r\n                            <option value={840}>{this.convertMinsToHrsMins(840)}</option>\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" value={this.state.storeHours[3].close_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <option value={900}>{this.convertMinsToHrsMins(900)}</option>\r\n                            <option value={960}>{this.convertMinsToHrsMins(960)}</option>\r\n                            <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\r\n                            <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\r\n                            <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\r\n                            <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\r\n                            <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\r\n                            <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\r\n                            <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\r\n                            <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group controlId=\"formHoursFriday\">\r\n                      <h5 className=\"text-left\">Friday</h5>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" value={this.state.storeHours[4].open_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <option value={0}>{this.convertMinsToHrsMins(0)}</option>\r\n                            <option value={60}>{this.convertMinsToHrsMins(60)}</option>\r\n                            <option value={120}>{this.convertMinsToHrsMins(120)}</option>\r\n                            <option value={180}>{this.convertMinsToHrsMins(180)}</option>\r\n                            <option value={240}>{this.convertMinsToHrsMins(240)}</option>\r\n                            <option value={300}>{this.convertMinsToHrsMins(300)}</option>\r\n                            <option value={360}>{this.convertMinsToHrsMins(360)}</option>\r\n                            <option value={420}>{this.convertMinsToHrsMins(420)}</option>\r\n                            <option value={480}>{this.convertMinsToHrsMins(480)}</option>\r\n                            <option value={540}>{this.convertMinsToHrsMins(540)}</option>\r\n                            <option value={600}>{this.convertMinsToHrsMins(600)}</option>\r\n                            <option value={660}>{this.convertMinsToHrsMins(660)}</option>\r\n                            <option value={720}>{this.convertMinsToHrsMins(720)}</option>\r\n                            <option value={780}>{this.convertMinsToHrsMins(780)}</option>\r\n                            <option value={840}>{this.convertMinsToHrsMins(840)}</option>\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" value={this.state.storeHours[4].close_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <option value={900}>{this.convertMinsToHrsMins(900)}</option>\r\n                            <option value={960}>{this.convertMinsToHrsMins(960)}</option>\r\n                            <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\r\n                            <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\r\n                            <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\r\n                            <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\r\n                            <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\r\n                            <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\r\n                            <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\r\n                            <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formHoursSaturday\">\r\n                      <h5 className=\"text-left\">Saturday</h5>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" value={this.state.storeHours[5].open_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <option value={0}>{this.convertMinsToHrsMins(0)}</option>\r\n                            <option value={60}>{this.convertMinsToHrsMins(60)}</option>\r\n                            <option value={120}>{this.convertMinsToHrsMins(120)}</option>\r\n                            <option value={180}>{this.convertMinsToHrsMins(180)}</option>\r\n                            <option value={240}>{this.convertMinsToHrsMins(240)}</option>\r\n                            <option value={300}>{this.convertMinsToHrsMins(300)}</option>\r\n                            <option value={360}>{this.convertMinsToHrsMins(360)}</option>\r\n                            <option value={420}>{this.convertMinsToHrsMins(420)}</option>\r\n                            <option value={480}>{this.convertMinsToHrsMins(480)}</option>\r\n                            <option value={540}>{this.convertMinsToHrsMins(540)}</option>\r\n                            <option value={600}>{this.convertMinsToHrsMins(600)}</option>\r\n                            <option value={660}>{this.convertMinsToHrsMins(660)}</option>\r\n                            <option value={720}>{this.convertMinsToHrsMins(720)}</option>\r\n                            <option value={780}>{this.convertMinsToHrsMins(780)}</option>\r\n                            <option value={840}>{this.convertMinsToHrsMins(840)}</option>\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" value={this.state.storeHours[5].close_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <option value={900}>{this.convertMinsToHrsMins(900)}</option>\r\n                            <option value={960}>{this.convertMinsToHrsMins(960)}</option>\r\n                            <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\r\n                            <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\r\n                            <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\r\n                            <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\r\n                            <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\r\n                            <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\r\n                            <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\r\n                            <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group controlId=\"formHoursSunday\">\r\n                      <h5 className=\"text-left\">Sunday</h5>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" value={this.state.storeHours[6].open_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <option value={0}>{this.convertMinsToHrsMins(0)}</option>\r\n                            <option value={60}>{this.convertMinsToHrsMins(60)}</option>\r\n                            <option value={120}>{this.convertMinsToHrsMins(120)}</option>\r\n                            <option value={180}>{this.convertMinsToHrsMins(180)}</option>\r\n                            <option value={240}>{this.convertMinsToHrsMins(240)}</option>\r\n                            <option value={300}>{this.convertMinsToHrsMins(300)}</option>\r\n                            <option value={360}>{this.convertMinsToHrsMins(360)}</option>\r\n                            <option value={420}>{this.convertMinsToHrsMins(420)}</option>\r\n                            <option value={480}>{this.convertMinsToHrsMins(480)}</option>\r\n                            <option value={540}>{this.convertMinsToHrsMins(540)}</option>\r\n                            <option value={600}>{this.convertMinsToHrsMins(600)}</option>\r\n                            <option value={660}>{this.convertMinsToHrsMins(660)}</option>\r\n                            <option value={720}>{this.convertMinsToHrsMins(720)}</option>\r\n                            <option value={780}>{this.convertMinsToHrsMins(780)}</option>\r\n                            <option value={840}>{this.convertMinsToHrsMins(840)}</option>\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" value={this.state.storeHours[6].close_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <option value={900}>{this.convertMinsToHrsMins(900)}</option>\r\n                            <option value={960}>{this.convertMinsToHrsMins(960)}</option>\r\n                            <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\r\n                            <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\r\n                            <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\r\n                            <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\r\n                            <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\r\n                            <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\r\n                            <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\r\n                            <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formPictures\">\r\n                      <input\r\n                        onChange={this.fileChangedHandler}\r\n                        type=\"file\"\r\n                        multiple\r\n                        className={touched.pictures && errors.pictures ? \"error\" : null}\r\n                      />\r\n                      {touched.pictures && errors.pictures ? (\r\n                        <div className=\"error-message\">{errors.pictures}</div>\r\n                      ) : null}\r\n                    </Form.Group>\r\n\r\n                    <Button onClick={handleSubmit}>Submit</Button>\r\n                  </Form>\r\n                )}\r\n            </Formik>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StoreSignupForm;\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport './CalendarPage.css';\r\nimport {  Resources, ConfirmationDialog, Scheduler, AppointmentForm, AppointmentTooltip, DateNavigator,TodayButton, DayView, WeekView, MonthView, Appointments, ViewSwitcher, Toolbar,  DragDropProvider} from '@devexpress/dx-react-scheduler-material-ui';\r\nimport { ViewState, EditingState, IntegratedEditing } from '@devexpress/dx-react-scheduler';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\nimport { FiSearch} from 'react-icons/fi';\r\n\r\nconst today = new Date();\r\n\r\n//new Date(2018, 6, 1, 10, 0) start and end dates\r\n\r\nconst isWeekEnd = (date: Date): boolean => date.getDay() === 0 || date.getDay() === 6;\r\n\r\n\r\n\r\nconst Root = ({\r\n  children, style, ...restProps\r\n}) => (\r\n  <div\r\n    {...restProps}\r\n    style={{\r\n      ...style,\r\n      width: '1000px',\r\n    }}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\n\r\nconst DayScaleCell = ({\r\n  startDate, classes, ...restProps\r\n}: DayScaleCellProps) => (\r\n  <MonthView.DayScaleCell\r\n    // className={classNames({\r\n    //   [classes.weekEndDayScaleCell]: isWeekEnd(startDate),\r\n    // })}\r\n    className={isWeekEnd(startDate) ? 'weekend' : null}\r\n\r\n    // style={isWeekEnd(startDate) ? 'background-color: grey' : 'background-color: white'}\r\n    startDate={startDate}\r\n    {...restProps}\r\n  />\r\n);\r\n\r\nconst TimeTableCell = (\r\n  { startDate, classes, ...restProps }: TimeTableCellProps,\r\n) => (\r\n  <MonthView.TimeTableCell\r\n    className={isWeekEnd(startDate) ? 'weekend' : null}\r\n\r\n    startDate={startDate}\r\n    {...restProps}\r\n  />\r\n);\r\nconst recurringIcon = () => <div />\r\n\r\nconst BasicLayout = ({ appointmentData, onFieldChange,\r\n   ...restProps }) => {\r\n\r\n   const onCustomFieldChange = (nextValue) => {\r\n     onFieldChange({ price: nextValue });\r\n   };\r\n\r\n  return (\r\n    <AppointmentForm.BasicLayout\r\n      onFieldChange={onFieldChange}\r\n      appointmentData={appointmentData}\r\n      {...restProps}\r\n    >\r\n\r\n    <AppointmentForm.Label\r\n       text=\"Price\"\r\n       type=\"title\"\r\n     />\r\n     <Row className=\"justify-content-center\">\r\n     <AppointmentForm.TextEditor\r\n      style={{width: '50%'}}\r\n       value={appointmentData.price}\r\n       onValueChange={onCustomFieldChange}\r\n       placeholder=\"Price\"\r\n     />\r\n     <AppointmentForm.Label\r\n        style={{marginTop: 15, marginLeft: 10, fontSize: 20}}\r\n        text=\"$\"\r\n        type=\"text\"\r\n      />\r\n      </Row>\r\n    </AppointmentForm.BasicLayout>\r\n  );\r\n};\r\n\r\nconst messages = {\r\n  allDayLabel : '',\r\n  repeatLabel : ''\r\n}\r\n\r\nconst BooleanEditor = ({\r\n...restProps }) => {\r\n  // eslint-disable-next-line react/destructuring-assignment\r\n  // console.log(restProps);\r\n\r\nreturn null;\r\n  // if (restProps.type === 'endRepeat') {\r\n  //   console.log(\"BO\");\r\n  //   return null;\r\n  //\r\n  // } else {console.log(\"HELO\"); return <AppointmentForm.WeeklyRecurrenceSelectorComponent readOnly={true} {...restProps} />};\r\n};\r\n\r\nconst ResourceSwitcher = ({ styles,\r\n    mainResourceName, onChange, classes, resources,\r\n  }) => (\r\n    <div >\r\n      <Row className=\"justify-content-center text-xs-center text-sm-left pl-2\">\r\n      <p style={{fontSize: 20, marginRight:10, marginTop:2}}>\r\n        Filter By:\r\n      </p>\r\n      <Select\r\n        value={mainResourceName}\r\n        onChange={e => onChange(e.target.value)}\r\n        style={{paddingLeft: 60, height: 35}}\r\n      >\r\n        {resources.map(resource => (\r\n          <MenuItem key={resource.fieldName} value={resource.fieldName}>\r\n            {resource.title}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n      </Row>\r\n    </div>\r\n\r\n  );\r\n\r\n\r\nconst RecurrenceLayout = ({\r\n  appointmentData,\r\n  visible,\r\n  ...restProps }) => {\r\n\r\n  return  (\r\n    <AppointmentForm.RecurrenceLayout\r\n      appointmentData={appointmentData}\r\n      visible={false}\r\n      {...restProps}\r\n    >\r\n\r\n    </AppointmentForm.RecurrenceLayout>\r\n  );\r\n\r\n};\r\n\r\nconst Appointment = ({\r\n  children, style,\r\n  ...restProps\r\n}) => {\r\n  // console.log(restProps);\r\n  return (\r\n    <Appointments.Appointment\r\n      {...restProps}\r\n      style={{\r\n        ...style,\r\n        backgroundColor: '#597096',\r\n        borderRadius: '5px',\r\n\r\n      }}\r\n\r\n    >\r\n      {children}\r\n    </Appointments.Appointment>\r\n  );\r\n}\r\n\r\nclass Calendar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n       this.state = {\r\n         selectedWorkers: [],\r\n         selectedServices: [],\r\n         selectedAppointments: [\r\n           { id: '0', startDate: '2020-04-19 15:00', endDate: '2020-04-19 16:00', title: 'Manicure', workers: [2],\r\n           services: [2], price: 50},\r\n           { id: '1', startDate: '2020-04-21 09:00', endDate: '2020-04-21 11:00', title: 'Hair Blowout', workers: [0, 1],\r\n           services: [1], price: 20},\r\n         ],\r\n         appointments: [\r\n           { id: '0', startDate: '2020-04-19 15:00', endDate: '2020-04-19 16:00', title: 'Manicure', workers: [2],\r\n           services: [2], price: 50},\r\n           { id: '1', startDate: '2020-04-21 09:00', endDate: '2020-04-21 11:00', title: 'Hair Blowout', workers: [0, 1],\r\n            services: [1], price: 20},\r\n         ],\r\n         mainResourceName: 'workers',\r\n          resources: [\r\n            {\r\n              fieldName: 'services',\r\n              title: 'Services',\r\n              allowMultiple: true,\r\n              instances: [\r\n                { id: 1, text: 'Haircut' },\r\n                { id: 2, text: 'Manicure' },\r\n\r\n              ],\r\n            },\r\n            {\r\n              fieldName: 'workers',\r\n              title: 'Workers',\r\n              allowMultiple: true,\r\n              instances: [\r\n                { id: 0, text: 'Artin Kasumyan' },\r\n                { id: 1, text: 'Arthur Kasumyan' },\r\n                { id: 2, text: 'Roula Sharqawe' },\r\n                { id: 3, text: 'George Clooney' },\r\n                { id: 4, text: 'Johnny Depp' },\r\n              ],\r\n            },\r\n          ],\r\n         currentDate: today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate()\r\n       }\r\n       this.commitChanges = this.commitChanges.bind(this);\r\n       this.changeMainResource = this.changeMainResource.bind(this);\r\n       this.onSelectWorker = this.onSelectWorker.bind(this);\r\n       this.onRemoveWorker = this.onRemoveWorker.bind(this);\r\n       this.onSelectService = this.onSelectService.bind(this);\r\n       this.onRemoveService = this.onRemoveService.bind(this);\r\n       this.onSearch = this.onSearch.bind(this);\r\n  }\r\n\r\n  changeMainResource(mainResourceName) {\r\n    this.setState({ mainResourceName });\r\n  }\r\n\r\n  onSelectWorker(selectedList, selectedItem) {\r\n    // console.log(selectedList, selectedItem)\r\n    this.setState({ selectedWorkers: selectedList });\r\n  }\r\n\r\n  onRemoveWorker(selectedList, removedItem) {\r\n    // console.log(\"remove\", selectedList, removedItem);\r\n    this.setState({ selectedWorkers: selectedList });\r\n  }\r\n\r\n  onSelectService(selectedList, selectedItem) {\r\n    this.setState({ selectedServices: selectedList });\r\n  }\r\n\r\n  onRemoveService(selectedList, removedItem) {\r\n    this.setState({ selectedServices: selectedList });\r\n  }\r\n\r\n  onSearch() {\r\n\r\n    let includeWorker;\r\n    let includeService;\r\n    let newSelected = [];\r\n\r\n    this.state.appointments.map(appointment => {\r\n      includeWorker = (this.state.selectedWorkers.length==0) ? true : false;\r\n      includeService= (this.state.selectedServices.length==0) ? true : false;\r\n\r\n      this.state.selectedWorkers.map(worker => {\r\n\r\n        if(appointment.workers.includes(worker.id)) {\r\n          includeWorker = true;\r\n        }\r\n      })\r\n      this.state.selectedServices.map(service => {\r\n\r\n        if(appointment.services.includes(service.id)) {\r\n          includeService = true;\r\n        }\r\n      })\r\n\r\n      if(includeService && includeWorker) {\r\n        newSelected.push(appointment);\r\n      }\r\n    })\r\n    this.setState({ selectedAppointments: newSelected });\r\n  }\r\n\r\n\r\n  commitChanges({ added, changed, deleted }) {\r\n    this.setState((state) => {\r\n      let { appointments } = state;\r\n      if (added) {\r\n        const startingAddedId = appointments.length > 0 ? appointments[appointments.length - 1].id + 1 : 0;\r\n        appointments = [...appointments, { id: startingAddedId, ...added }];\r\n      }\r\n      if (changed) {\r\n        appointments = appointments.map(appointment => (\r\n          changed[appointment.id] ? { ...appointment, ...changed[appointment.id] } : appointment));\r\n      }\r\n      if (deleted !== undefined) {\r\n        appointments = appointments.filter(appointment => appointment.id !== deleted);\r\n      }\r\n      return { appointments };\r\n    });\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    console.log(this.state.selectedAppointments);\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"justify-content-center\">\r\n          <Col>\r\n            <p className=\"title\"> Manage Your Appointments </p>\r\n            <Row style={{marginBottom: 50, marginLeft: '22%', position: 'relative'}}>\r\n            <Multiselect\r\n              // isObject={false}\r\n              options={this.state.resources[0][\"instances\"]}\r\n              // selectedValues={this.state.selected}\r\n              onSelect={this.onSelectService}\r\n              onRemove={this.onRemoveService}\r\n              placeholder=\"Service\"\r\n              closeIcon=\"cancel\"\r\n              displayValue=\"text\"\r\n              style={{multiselectContainer: {marginLeft: '2%', width: '35%'},  groupHeading:{width: 50, maxWidth: 50}, chips: { background: \"#587096\", height: 35 }, inputField: {color: 'black'}, searchBox: { minWidth: 250, width: '100%', height: '30', backgroundColor: 'white', borderRadius: \"5px\" }} }\r\n              />\r\n            <Multiselect\r\n                // isObject={false}\r\n                options={this.state.resources[1][\"instances\"]}\r\n                // selectedValues={this.state.selected}\r\n                onSelect={this.onSelectWorker}\r\n                onRemove={this.onRemoveWorker}\r\n                placeholder=\"Workers\"\r\n                closeIcon=\"cancel\"\r\n                displayValue=\"text\"\r\n                style={{multiselectContainer: {marginLeft: '2%', width: '35%'},  optionContainer:{ zIndex: 10000000}, chips: { background: \"#587096\", height: 35 }, inputField: {color: 'black'}, searchBox: { minWidth: 250, width: '100%', height: '30', backgroundColor: 'white', borderRadius: \"5px\" }} }\r\n              />\r\n              <FiSearch onClick={this.onSearch} size={35} style={{cursor: \"pointer\", marginLeft: 10, paddingRight:\"10px\"}}/>\r\n            </Row>\r\n\r\n           <Paper className=\"react-calendar\">\r\n          <Scheduler\r\n            data={this.state.selectedAppointments}\r\n\r\n          >\r\n          <ViewState\r\n            defaultCurrentDate={this.state.currentDate}\r\n\r\n          />\r\n          <EditingState\r\n           onCommitChanges={this.commitChanges}\r\n         />\r\n         <IntegratedEditing />\r\n\r\n            <WeekView\r\n             startDayHour={8}\r\n             endDayHour={24}\r\n             cellDuration={60}\r\n           />\r\n           <MonthView\r\n             dayScaleCellComponent={DayScaleCell}\r\n             timeTableCellComponent={TimeTableCell}\r\n          />\r\n          <DayView\r\n            startDayHour={8}\r\n            endDayHour={24}\r\n            cellDuration={60}\r\n          />\r\n\r\n            <Toolbar />\r\n            <ViewSwitcher />\r\n            <DateNavigator/>\r\n            <TodayButton />\r\n            <ConfirmationDialog />\r\n            <Appointments\r\n            appointmentComponent={Appointment}/>\r\n            <AppointmentTooltip\r\n            showCloseButton\r\n            showOpenButton/>\r\n            <AppointmentForm\r\n            isRecurrence={false}\r\n            basicLayoutComponent={BasicLayout}\r\n            recurrenceLayoutComponent={RecurrenceLayout}\r\n            // textEditorComponent={TextEditor}\r\n            messages={messages}\r\n            booleanEditorComponent={BooleanEditor}\r\n            />\r\n            <Resources\r\n              data={this.state.resources}\r\n              // mainResourceName={this.state.mainResourceName}\r\n              />\r\n            <DragDropProvider/>\r\n          </Scheduler>\r\n          </Paper>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calendar;\r\n\r\n// <ResourceSwitcher\r\n//  resources={this.state.resources}\r\n//  mainResourceName={this.state.mainResourceName}\r\n//  onChange={this.changeMainResource}\r\n// />\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport LargeCarousel from '../LargeCarousel';\r\nimport { Button } from 'react-bootstrap';\r\nimport Cookies from 'js-cookie';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  addAlert\r\n} from '../../reduxFolder/actions/alert'\r\nimport store from '../../reduxFolder/store';\r\nimport './StoreDisplay.css'\r\n// import { getPictures } from '../s3'\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nclass StoreDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n      store: {\r\n        id: \"\",\r\n        name: \"\",\r\n        street: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        zipcode: \"\",\r\n        created_at: \"\",\r\n        category: [],\r\n        services: [],\r\n        workers: [],\r\n        owners: [],\r\n        phone: \"\",\r\n        clients: [],\r\n        description: \"\",\r\n        lat: \"\",\r\n        lng: \"\"\r\n      },\r\n      pictures: []\r\n    }\r\n  }\r\n\r\n  triggerStoreEdit() {\r\n    this.props.history.push({\r\n      pathname: '/stores/edit/' + this.props.match.params.store_id,\r\n      state: this.state\r\n    })\r\n  }\r\n\r\n  triggerBook() {\r\n    this.props.history.push({\r\n      pathname: '/book/' + this.props.match.params.store_id,\r\n      state: this.state\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    // if we were passed the store data from calling component\r\n    if(this.props.location.state && this.props.location.state.store){\r\n      let convertedCategory = this.props.location.state.store.category.map((str) => ({ value: str.toLowerCase(), label: str }));\r\n      this.setState({\r\n        store: this.props.location.state.store,\r\n        selectedOption: convertedCategory\r\n      })\r\n    }\r\n    else{\r\n      // retrieve the store data from the database\r\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id , {\r\n        method: \"GET\",\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      })\r\n      .then(function(response){\r\n        if(response.status!==200){\r\n          // throw an error alert\r\n          store.dispatch(addAlert(response))\r\n        }\r\n        else{\r\n          return response.json();\r\n        }\r\n      })\r\n      .then(data => {\r\n        if(data){\r\n          let convertedCategory = data.category.map((str) => ({ value: str.toLowerCase(), label: str }));\r\n          this.setState({\r\n            store: data,\r\n            selectedOption: convertedCategory\r\n          })\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.store !== this.state.store) {\r\n      // let picturesFetched = await getPictures('stores/' + this.state.store.id + '/images/')\r\n      // this.setState({\r\n      //   pictures: picturesFetched\r\n      // })\r\n      \r\n      // can put this for now so we don't have to upload to s3\r\n      this.setState({\r\n        pictures: [\r\n          { \r\n            url: \"/hair.jpg\",\r\n            key: \"/hair.jpg\"\r\n          },\r\n          {\r\n            url: \"/nails.jpg\",\r\n            key: \"/nails.jpg\"\r\n          },\r\n          {\r\n            url: \"/salon.jpg\",\r\n            key: \"/salon.jpg\"\r\n          }\r\n        ]\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let editButton;\r\n    if(Cookies.get('user') && this.state.store.owners.indexOf(JSON.parse(Cookies.get('user').substring(2)).id) > -1){\r\n      editButton = <Button className=\"float-left\" onClick={() =>  this.triggerStoreEdit()}>Edit Store</Button>\r\n    }\r\n\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"justify-content-md-center\" style={{ marginTop: '15px', marginBottom: '15px'}}>\r\n          <Col lg={3}>\r\n            <h1>{this.state.store.name}</h1>\r\n            <h5 style={{color: \"gray\"}}>{this.state.store.street}, {this.state.store.city}, {this.state.store.state}, {this.state.store.zipcode}</h5>\r\n            <hr/>\r\n            <p style={{fontSize: \"25px\"}}>{this.state.store.description}</p>\r\n            <ul>\r\n              {this.state.store.category.map((cat, index) => (\r\n                <li key={\"cat-\" + index}>{cat}</li>\r\n              ))}\r\n            </ul>\r\n            <div id=\"buttonGroup\">\r\n              {editButton}\r\n              <Button className=\"float-left\" onClick={() =>  this.triggerBook()}>Book Now</Button>\r\n            </div>\r\n          </Col>\r\n          <Col xs={10} sm={9} md={8} lg={7}>\r\n            <LargeCarousel className=\"carousel\" pictures={this.state.pictures}/>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          {/* <WorkerDisplay/> */}\r\n        </Row>\r\n        <Row>\r\n          {/* <ServiceDisplay/> */}\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(StoreDisplay);","import React from 'react';\r\nimport '../../App.css';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport GridLoader from 'react-spinners/GridLoader'\r\nimport { FaShoppingCart, FaRoad, FaBuilding, FaUniversity, FaGlobe, FaPen, FaPhone } from 'react-icons/fa';\r\nimport { Formik } from 'formik';\r\nimport { css } from '@emotion/core'\r\nimport * as Yup from 'yup';\r\nimport Select from 'react-select';\r\nimport {\r\n  addAlert\r\n} from '../../reduxFolder/actions/alert'\r\nimport store from '../../reduxFolder/store';\r\nimport { getPictures, deleteHandler, uploadHandler } from '../s3'\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n\r\nclass StoreEditForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      store: {\r\n        // pictures: [],\r\n        name: \"\",\r\n        description: \"\",\r\n        phone: \"\",\r\n        id: \"\",\r\n        street: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        zipcode: \"\",\r\n        category: []\r\n      },\r\n      storeHours: [],\r\n      newHours: [],\r\n      selectedOption: null,\r\n      loading: true,\r\n      pictures: [],\r\n      selectedFiles: [],\r\n      keys: []\r\n    };\r\n\r\n    // options for the categories field\r\n    this.options = [\r\n      { value: 'nails', label: 'Nails' },\r\n      { value: 'hair', label: 'Hair' },\r\n    ];\r\n\r\n    // RegEx for phone number validation\r\n    this.phoneRegExp = /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/\r\n\r\n    // Schema for yup\r\n    this.yupValidationSchema = Yup.object().shape({\r\n      name: Yup.string()\r\n        .min(2, \"Store name must have at least 2 characters\")\r\n        .max(100, \"Store name can't be longer than 100 characters\")\r\n        .required(\"Name is required\"),\r\n      description: Yup.string()\r\n        .min(20, \"Description must have at least 20 characters\")\r\n        .required(\"Description is required\"), // will make it required soon\r\n      phone: Yup.string()\r\n        .matches(this.phoneRegExp, \"Phone number is not valid\")\r\n        .required(\"Phone number is required\"),\r\n      street: Yup.string()\r\n        .min(6, \"Street must have at least 6 characters\")\r\n        .max(100, \"Street can't be longer than 100 characters\")\r\n        .required(\"Street is required\"),\r\n      city: Yup.string()\r\n        .min(2, \"City must have at least 2 characters\")\r\n        .max(40, \"City can't be longer than 40 characters\")\r\n        .required(\"City is required\"),\r\n      state: Yup.string()\r\n        .min(2, \"State must have at least 2 characters\")\r\n        .max(12, \"State can't be longer than 12 characters\")\r\n        .required(\"State is required\"),\r\n      zipcode: Yup.string()\r\n        .max(20, \"Zipcode can't be longer than 100 characters\")\r\n        .required(\"Zipcode is required\"),\r\n      category: Yup.array()\r\n        .required(\"Category is required\")\r\n        .nullable(),\r\n      pictureCount: Yup.number()\r\n        .required(\"Pictures are required\")\r\n        .min(1, \"Must have at least one picture\")\r\n    });\r\n\r\n    this.triggerStoreDisplay = this.triggerStoreDisplay.bind(this);\r\n  }\r\n\r\n  // redirect to the store display page and pass the new store data\r\n  triggerStoreDisplay(returnedStore) {\r\n    this.props.history.push({\r\n      pathname: '/stores/' + this.props.match.params.store_id,\r\n      state: {\r\n        store: returnedStore\r\n      }\r\n    })\r\n  }\r\n\r\n  convertMinsToHrsMins(mins) {\r\n    let h = Math.floor(mins / 60);\r\n    let m = mins % 60;\r\n    let am = false\r\n    if (h == 24) {\r\n      am = true\r\n      h -= 12\r\n    }\r\n    else if (h < 12) {\r\n      am = true\r\n    } else if (h != 12) {\r\n      h -= 12\r\n    }\r\n    h = h < 10 ? '0' + h : h;\r\n    if(h == 0) {\r\n      h = '12'\r\n    }\r\n    m = m < 10 ? '0' + m : m;\r\n    if (am) {\r\n      return `${h}:${m}am`;\r\n    } else {\r\n      return `${h}:${m}pm`;\r\n    }\r\n\r\n  }\r\n\r\n  handleSelectChange = (event) => {\r\n    var days = ['formHoursMonday', 'formHoursTuesday', 'formHoursWednesday', 'formHoursThursday', 'formHoursFriday', 'formHoursSaturday', 'formHoursSunday']\r\n    var day = days.indexOf(event.target.id)\r\n    var updateNewHours = this.state.newHours\r\n    var old_open_time = 0\r\n    var old_close_time = 0\r\n    var newStoreHours = []\r\n    if(this.state.newHours[day]) {\r\n      old_open_time = this.state.newHours[day].open_time\r\n      old_close_time = this.state.newHours[day].close_time\r\n    } else {\r\n      old_open_time = this.state.storeHours[day].open_time\r\n      old_close_time = this.state.storeHours[day].close_time\r\n    }\r\n    if(parseInt(event.target.querySelector('option').value) <= 840) {\r\n      updateNewHours[day] = {open_time: parseInt(event.target.value), close_time: old_close_time}\r\n      newStoreHours = [\r\n        ...this.state.storeHours.slice(0, day),\r\n        {open_time: parseInt(event.target.value), close_time: old_close_time},\r\n        ...this.state.storeHours.slice(day + 1)\r\n      ]\r\n    } else {\r\n      updateNewHours[day] = {open_time: old_open_time, close_time: parseInt(event.target.value)}\r\n      newStoreHours = [\r\n        ...this.state.storeHours.slice(0, day),\r\n        {open_time: old_open_time, close_time: parseInt(event.target.value)},\r\n        ...this.state.storeHours.slice(day + 1)\r\n      ]\r\n    }\r\n    \r\n    this.setState({\r\n      newHours: updateNewHours,\r\n      storeHours: newStoreHours\r\n    })\r\n  };\r\n\r\n  deleteFileChangeHandler = async (event, setFieldValue, newPictureLength) => {\r\n    if(event.target.checked){\r\n      await this.state.keys.push(event.target.id)\r\n      console.log(this.state.pictures.length, newPictureLength, this.state.keys.length)\r\n      setFieldValue('pictureCount', this.state.pictures.length + newPictureLength - this.state.keys.length)\r\n    }\r\n    else{\r\n      await this.state.keys.pop(event.target.id)\r\n      console.log(this.state.pictures.length, newPictureLength, this.state.keys.length)\r\n      setFieldValue('pictureCount', this.state.pictures.length + newPictureLength - this.state.keys.length)\r\n    }\r\n  }\r\n\r\n  fileChangedHandler = (event, setFieldValue, pictures) => {\r\n    this.setState({ selectedFiles: event.target.files })\r\n    setFieldValue('pictureCount', this.state.pictures.length + event.target.files.length - this.state.keys.length)\r\n    setFieldValue('pictures', event.target.files)\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.store !== this.state.store) {\r\n      let picturesFetched = await getPictures('stores/' + this.state.store.id + '/images/')\r\n      this.setState({\r\n        pictures: picturesFetched\r\n      })\r\n    }\r\n\r\n    // can put this for now so we don't have to upload to s3\r\n    // this.setState({\r\n      // pictures: [\r\n      //   { \r\n      //     url: \"/hair.jpg\",\r\n      //     key: \"/hair.jpg\"\r\n      //   },\r\n      //   {\r\n      //     url: \"/nails.jpg\",\r\n      //     key: \"/nails.jpg\"\r\n      //   },\r\n      //   {\r\n      //     url: \"/salon.jpg\",\r\n      //     key: \"/salon.jpg\"\r\n      //   }\r\n      // ]\r\n    // })\r\n  }\r\n\r\n  componentDidMount() {\r\n    // if we were given the existing data from calling component use that, else fetch\r\n    // check if categories are empty, if they are then cache/store needs to be updated. \r\n    if (this.props.location.state && this.props.location.state.store) {\r\n      let convertedCategory = this.props.location.state.store.category.map((str) => ({ value: str.toLowerCase(), label: str }));\r\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/storeHours', {\r\n        method: \"GET\",\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      })\r\n      .then(function(response){\r\n        if(response.status!==200){\r\n          // throw an error alert\r\n          store.dispatch(addAlert(response))\r\n        }\r\n        else{\r\n          return response.json();\r\n        }\r\n      })\r\n      .then(data => {\r\n        this.setState({\r\n          store: this.props.location.state.store,\r\n          selectedOption: convertedCategory,\r\n          storeHours: data,\r\n          loading: false\r\n        })\r\n      });\r\n    }\r\n    else {\r\n      Promise.all([\r\n        fetch(fetchDomain + '/stores/' + this.props.match.params.store_id, {\r\n        method: \"GET\",\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      }).then(value => value.json()),\r\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/storeHours', {\r\n        method: \"GET\",\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      }).then(value => value.json())\r\n      ]).then(allResponses => {\r\n        const response1 = allResponses[0]\r\n        const response2 = allResponses[1]\r\n        let convertedCategory = response1.category.map((str) => ({ value: str.toLowerCase(), label: str }));\r\n        this.setState({\r\n          store: response1,\r\n          selectedOption: convertedCategory,\r\n          storeHours: response2,\r\n          loading: false\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const DisplayWithLoading = (props) => {\r\n      if (this.state.loading) {\r\n        return <Row className=\"vertical-center\">\r\n            <Col>\r\n              <GridLoader\r\n                css={override}\r\n                size={20}\r\n                color={\"#2196f3\"}\r\n                loading={this.state.isLoading}\r\n              />\r\n            </Col>\r\n          </Row>\r\n      } else {\r\n        return <Row className=\"justify-content-center\">\r\n        <Col xs={8} sm={7} md={6} lg={5}>\r\n          <Formik\r\n            enableReinitialize\r\n            initialValues={{\r\n              name: this.state.store.name,\r\n              description: this.state.store.description,\r\n              phone: this.state.store.phone,\r\n              street: this.state.store.street,\r\n              city: this.state.store.city,\r\n              state: this.state.store.state,\r\n              zipcode: this.state.store.zipcode,\r\n              category: this.state.selectedOption,\r\n              services: null,\r\n              owners: null,\r\n              pictures: this.state.pictures,\r\n              pictureCount: this.state.pictures.length - this.state.keys.length,\r\n              storeHours: this.state.storeHours\r\n            }}\r\n            validationSchema={this.yupValidationSchema}\r\n            onSubmit={async (values) => {\r\n              values.category = values.category.map(function (val) {\r\n                return val.label;\r\n              })\r\n\r\n                let store_id = this.props.match.params.store_id\r\n                let triggerStoreDisplay = this.triggerStoreDisplay\r\n\r\n                values.services = this.state.store.services\r\n                values.owners = this.state.store.owners\r\n                values.id = store_id\r\n                values.storeHours = this.state.newHours\r\n\r\n                // remove files from s3\r\n                await deleteHandler(this.state.keys)\r\n\r\n                // upload new images to s3 from client to avoid burdening back end\r\n                let prefix = 'stores/' + this.props.match.params.store_id + '/services/' + values.name + '/'\r\n                await uploadHandler(prefix, this.state.selectedFiles)\r\n\r\n                fetch(fetchDomain + '/stores/edit/' + store_id , {\r\n                  method: \"POST\",\r\n                  headers: {\r\n                    'Content-type': 'application/json'\r\n                  },\r\n                  credentials: 'include',\r\n                  body: JSON.stringify(values)\r\n                })\r\n                .then(function(response){\r\n                  if(response.status!==200){\r\n                    store.dispatch(addAlert(response))\r\n                  }\r\n                  else {\r\n                    // redirect to home page signed in\r\n                    return response.json()\r\n                  }\r\n                })\r\n                .then(data => {\r\n                  if(data){\r\n                    triggerStoreDisplay(data)\r\n                  }\r\n                });\r\n            }}\r\n          >\r\n            {({ values,\r\n              errors,\r\n              touched,\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              setFieldValue }) => (\r\n                <Form className=\"formBody rounded\">\r\n                  <h3>Store Edit</h3>\r\n\r\n                  <Form.Group controlId=\"formName\">\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <FaShoppingCart />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={values.name}\r\n                        placeholder=\"Business Name\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        className={touched.name && errors.name ? \"error\" : null} />\r\n                    </InputGroup>\r\n                    {touched.name && errors.name ? (\r\n                      <div className=\"error-message\">{errors.name}</div>\r\n                    ) : null}\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formDescription\">\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <FaPen />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows={3}\r\n                        name=\"description\"\r\n                        value={values.description}\r\n                        placeholder=\"Description\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        className={touched.description && errors.description ? \"error\" : null} />\r\n                    </InputGroup>\r\n                    {touched.description && errors.description ? (\r\n                      <div className=\"error-message\">{errors.description}</div>\r\n                    ) : null}\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formPhone\">\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <FaPhone />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control type=\"text\"\r\n                        value={values.phone}\r\n                        placeholder=\"Phone Number\"\r\n                        name=\"phone\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        className={touched.phone && errors.phone ? \"error\" : null} />\r\n                    </InputGroup>\r\n                    {touched.phone && errors.phone ? (\r\n                      <div className=\"error-message\">{errors.phone}</div>\r\n                    ) : null}\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formStreet\">\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <FaRoad />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control type=\"text\"\r\n                        value={values.street}\r\n                        placeholder=\"Street\"\r\n                        name=\"street\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        className={touched.street && errors.street ? \"error\" : null} />\r\n                    </InputGroup>\r\n                    {touched.street && errors.street ? (\r\n                      <div className=\"error-message\">{errors.street}</div>\r\n                    ) : null}\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formCity\">\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <FaBuilding />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control type=\"text\"\r\n                        value={values.city}\r\n                        placeholder=\"City\"\r\n                        name=\"city\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        className={touched.city && errors.city ? \"error\" : null} />\r\n                    </InputGroup>\r\n                    {touched.city && errors.city ? (\r\n                      <div className=\"error-message\">{errors.city}</div>\r\n                    ) : null}\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formState\">\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <FaUniversity />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        value={values.state}\r\n                        placeholder=\"State\"\r\n                        name=\"state\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        className={touched.state && errors.state ? \"error\" : null} />\r\n                    </InputGroup>\r\n                    {touched.state && errors.state ? (\r\n                      <div className=\"error-message\">{errors.state}</div>\r\n                    ) : null}\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formZipcode\">\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <FaGlobe />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        value={values.zipcode}\r\n                        placeholder=\"Zipcode\"\r\n                        name=\"zipcode\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        className={touched.zipcode && errors.zipcode ? \"error\" : null} />\r\n                    </InputGroup>\r\n                    {touched.zipcode && errors.zipcode ? (\r\n                      <div className=\"error-message\">{errors.zipcode}</div>\r\n                    ) : null}\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formCategory\">\r\n                    <Select\r\n                      value={values.category}\r\n                      onChange={option => setFieldValue(\"category\", option)}\r\n                      name=\"category\"\r\n                      options={this.options}\r\n                      isMulti={true}\r\n                      placeholder={\"Category\"}\r\n                      className={touched.category && errors.category ? \"error\" : null}\r\n                    />\r\n                    {touched.category && errors.category ? (\r\n                      <div className=\"error-message\">{errors.category}</div>\r\n                    ) : null}\r\n                  </Form.Group>\r\n\r\n                  <h4>Store Hours</h4>\r\n\r\n                  <Form.Group controlId=\"formHoursMonday\">\r\n                    <h5 className=\"text-left\">Monday</h5>\r\n                    <Form.Row>\r\n                      <Col>\r\n                        <Form.Control as=\"select\" value={this.state.storeHours[0].open_time} onChange={this.handleSelectChange.bind(this)}>\r\n                          <option value={0}>{this.convertMinsToHrsMins(0)}</option>\r\n                          <option value={60}>{this.convertMinsToHrsMins(60)}</option>\r\n                          <option value={120}>{this.convertMinsToHrsMins(120)}</option>\r\n                          <option value={180}>{this.convertMinsToHrsMins(180)}</option>\r\n                          <option value={240}>{this.convertMinsToHrsMins(240)}</option>\r\n                          <option value={300}>{this.convertMinsToHrsMins(300)}</option>\r\n                          <option value={360}>{this.convertMinsToHrsMins(360)}</option>\r\n                          <option value={420}>{this.convertMinsToHrsMins(420)}</option>\r\n                          <option value={480}>{this.convertMinsToHrsMins(480)}</option>\r\n                          <option value={540}>{this.convertMinsToHrsMins(540)}</option>\r\n                          <option value={600}>{this.convertMinsToHrsMins(600)}</option>\r\n                          <option value={660}>{this.convertMinsToHrsMins(660)}</option>\r\n                          <option value={720}>{this.convertMinsToHrsMins(720)}</option>\r\n                          <option value={780}>{this.convertMinsToHrsMins(780)}</option>\r\n                          <option value={840}>{this.convertMinsToHrsMins(840)}</option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Control as=\"select\" value={this.state.storeHours[0].close_time} onChange={this.handleSelectChange.bind(this)}>\r\n                          <option value={900}>{this.convertMinsToHrsMins(900)}</option>\r\n                          <option value={960}>{this.convertMinsToHrsMins(960)}</option>\r\n                          <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\r\n                          <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\r\n                          <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\r\n                          <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\r\n                          <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\r\n                          <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\r\n                          <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\r\n                          <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formHoursTuesday\">\r\n                    <h5 className=\"text-left\">Tuesday</h5>\r\n                    <Form.Row>\r\n                      <Col>\r\n                        <Form.Control as=\"select\" value={this.state.storeHours[1].open_time} onChange={this.handleSelectChange.bind(this)}>\r\n                          <option value={0}>{this.convertMinsToHrsMins(0)}</option>\r\n                          <option value={60}>{this.convertMinsToHrsMins(60)}</option>\r\n                          <option value={120}>{this.convertMinsToHrsMins(120)}</option>\r\n                          <option value={180}>{this.convertMinsToHrsMins(180)}</option>\r\n                          <option value={240}>{this.convertMinsToHrsMins(240)}</option>\r\n                          <option value={300}>{this.convertMinsToHrsMins(300)}</option>\r\n                          <option value={360}>{this.convertMinsToHrsMins(360)}</option>\r\n                          <option value={420}>{this.convertMinsToHrsMins(420)}</option>\r\n                          <option value={480}>{this.convertMinsToHrsMins(480)}</option>\r\n                          <option value={540}>{this.convertMinsToHrsMins(540)}</option>\r\n                          <option value={600}>{this.convertMinsToHrsMins(600)}</option>\r\n                          <option value={660}>{this.convertMinsToHrsMins(660)}</option>\r\n                          <option value={720}>{this.convertMinsToHrsMins(720)}</option>\r\n                          <option value={780}>{this.convertMinsToHrsMins(780)}</option>\r\n                          <option value={840}>{this.convertMinsToHrsMins(840)}</option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Control as=\"select\" value={this.state.storeHours[1].close_time} onChange={this.handleSelectChange.bind(this)}>\r\n                          <option value={900}>{this.convertMinsToHrsMins(900)}</option>\r\n                          <option value={960}>{this.convertMinsToHrsMins(960)}</option>\r\n                          <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\r\n                          <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\r\n                          <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\r\n                          <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\r\n                          <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\r\n                          <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\r\n                          <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\r\n                          <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n\r\n\r\n                  <Form.Group controlId=\"formHoursWednesday\">\r\n                    <h5 className=\"text-left\">Wednesday</h5>\r\n                    <Form.Row>\r\n                      <Col>\r\n                        <Form.Control as=\"select\" value={this.state.storeHours[2].open_time} onChange={this.handleSelectChange.bind(this)}>\r\n                          <option value={0}>{this.convertMinsToHrsMins(0)}</option>\r\n                          <option value={60}>{this.convertMinsToHrsMins(60)}</option>\r\n                          <option value={120}>{this.convertMinsToHrsMins(120)}</option>\r\n                          <option value={180}>{this.convertMinsToHrsMins(180)}</option>\r\n                          <option value={240}>{this.convertMinsToHrsMins(240)}</option>\r\n                          <option value={300}>{this.convertMinsToHrsMins(300)}</option>\r\n                          <option value={360}>{this.convertMinsToHrsMins(360)}</option>\r\n                          <option value={420}>{this.convertMinsToHrsMins(420)}</option>\r\n                          <option value={480}>{this.convertMinsToHrsMins(480)}</option>\r\n                          <option value={540}>{this.convertMinsToHrsMins(540)}</option>\r\n                          <option value={600}>{this.convertMinsToHrsMins(600)}</option>\r\n                          <option value={660}>{this.convertMinsToHrsMins(660)}</option>\r\n                          <option value={720}>{this.convertMinsToHrsMins(720)}</option>\r\n                          <option value={780}>{this.convertMinsToHrsMins(780)}</option>\r\n                          <option value={840}>{this.convertMinsToHrsMins(840)}</option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Control as=\"select\" value={this.state.storeHours[2].close_time} onChange={this.handleSelectChange.bind(this)}>\r\n                          <option value={900}>{this.convertMinsToHrsMins(900)}</option>\r\n                          <option value={960}>{this.convertMinsToHrsMins(960)}</option>\r\n                          <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\r\n                          <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\r\n                          <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\r\n                          <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\r\n                          <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\r\n                          <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\r\n                          <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\r\n                          <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formHoursThursday\">\r\n                    <h5 className=\"text-left\">Thursday</h5>\r\n                    <Form.Row>\r\n                      <Col>\r\n                        <Form.Control as=\"select\" value={this.state.storeHours[3].open_time} onChange={this.handleSelectChange.bind(this)}>\r\n                          <option value={0}>{this.convertMinsToHrsMins(0)}</option>\r\n                          <option value={60}>{this.convertMinsToHrsMins(60)}</option>\r\n                          <option value={120}>{this.convertMinsToHrsMins(120)}</option>\r\n                          <option value={180}>{this.convertMinsToHrsMins(180)}</option>\r\n                          <option value={240}>{this.convertMinsToHrsMins(240)}</option>\r\n                          <option value={300}>{this.convertMinsToHrsMins(300)}</option>\r\n                          <option value={360}>{this.convertMinsToHrsMins(360)}</option>\r\n                          <option value={420}>{this.convertMinsToHrsMins(420)}</option>\r\n                          <option value={480}>{this.convertMinsToHrsMins(480)}</option>\r\n                          <option value={540}>{this.convertMinsToHrsMins(540)}</option>\r\n                          <option value={600}>{this.convertMinsToHrsMins(600)}</option>\r\n                          <option value={660}>{this.convertMinsToHrsMins(660)}</option>\r\n                          <option value={720}>{this.convertMinsToHrsMins(720)}</option>\r\n                          <option value={780}>{this.convertMinsToHrsMins(780)}</option>\r\n                          <option value={840}>{this.convertMinsToHrsMins(840)}</option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Control as=\"select\" value={this.state.storeHours[3].close_time} onChange={this.handleSelectChange.bind(this)}>\r\n                          <option value={900}>{this.convertMinsToHrsMins(900)}</option>\r\n                          <option value={960}>{this.convertMinsToHrsMins(960)}</option>\r\n                          <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\r\n                          <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\r\n                          <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\r\n                          <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\r\n                          <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\r\n                          <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\r\n                          <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\r\n                          <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n\r\n\r\n                  <Form.Group controlId=\"formHoursFriday\">\r\n                    <h5 className=\"text-left\">Friday</h5>\r\n                    <Form.Row>\r\n                      <Col>\r\n                        <Form.Control as=\"select\" value={this.state.storeHours[4].open_time} onChange={this.handleSelectChange.bind(this)}>\r\n                          <option value={0}>{this.convertMinsToHrsMins(0)}</option>\r\n                          <option value={60}>{this.convertMinsToHrsMins(60)}</option>\r\n                          <option value={120}>{this.convertMinsToHrsMins(120)}</option>\r\n                          <option value={180}>{this.convertMinsToHrsMins(180)}</option>\r\n                          <option value={240}>{this.convertMinsToHrsMins(240)}</option>\r\n                          <option value={300}>{this.convertMinsToHrsMins(300)}</option>\r\n                          <option value={360}>{this.convertMinsToHrsMins(360)}</option>\r\n                          <option value={420}>{this.convertMinsToHrsMins(420)}</option>\r\n                          <option value={480}>{this.convertMinsToHrsMins(480)}</option>\r\n                          <option value={540}>{this.convertMinsToHrsMins(540)}</option>\r\n                          <option value={600}>{this.convertMinsToHrsMins(600)}</option>\r\n                          <option value={660}>{this.convertMinsToHrsMins(660)}</option>\r\n                          <option value={720}>{this.convertMinsToHrsMins(720)}</option>\r\n                          <option value={780}>{this.convertMinsToHrsMins(780)}</option>\r\n                          <option value={840}>{this.convertMinsToHrsMins(840)}</option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Control as=\"select\" value={this.state.storeHours[4].close_time} onChange={this.handleSelectChange.bind(this)}>\r\n                          <option value={900}>{this.convertMinsToHrsMins(900)}</option>\r\n                          <option value={960}>{this.convertMinsToHrsMins(960)}</option>\r\n                          <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\r\n                          <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\r\n                          <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\r\n                          <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\r\n                          <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\r\n                          <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\r\n                          <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\r\n                          <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"formHoursSaturday\">\r\n                    <h5 className=\"text-left\">Saturday</h5>\r\n                    <Form.Row>\r\n                      <Col>\r\n                        <Form.Control as=\"select\" value={this.state.storeHours[5].open_time} onChange={this.handleSelectChange.bind(this)}>\r\n                          <option value={0}>{this.convertMinsToHrsMins(0)}</option>\r\n                          <option value={60}>{this.convertMinsToHrsMins(60)}</option>\r\n                          <option value={120}>{this.convertMinsToHrsMins(120)}</option>\r\n                          <option value={180}>{this.convertMinsToHrsMins(180)}</option>\r\n                          <option value={240}>{this.convertMinsToHrsMins(240)}</option>\r\n                          <option value={300}>{this.convertMinsToHrsMins(300)}</option>\r\n                          <option value={360}>{this.convertMinsToHrsMins(360)}</option>\r\n                          <option value={420}>{this.convertMinsToHrsMins(420)}</option>\r\n                          <option value={480}>{this.convertMinsToHrsMins(480)}</option>\r\n                          <option value={540}>{this.convertMinsToHrsMins(540)}</option>\r\n                          <option value={600}>{this.convertMinsToHrsMins(600)}</option>\r\n                          <option value={660}>{this.convertMinsToHrsMins(660)}</option>\r\n                          <option value={720}>{this.convertMinsToHrsMins(720)}</option>\r\n                          <option value={780}>{this.convertMinsToHrsMins(780)}</option>\r\n                          <option value={840}>{this.convertMinsToHrsMins(840)}</option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Control as=\"select\" value={this.state.storeHours[5].close_time} onChange={this.handleSelectChange.bind(this)}>\r\n                          <option value={900}>{this.convertMinsToHrsMins(900)}</option>\r\n                          <option value={960}>{this.convertMinsToHrsMins(960)}</option>\r\n                          <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\r\n                          <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\r\n                          <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\r\n                          <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\r\n                          <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\r\n                          <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\r\n                          <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\r\n                          <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n\r\n\r\n                  <Form.Group controlId=\"formHoursSunday\">\r\n                    <h5 className=\"text-left\">Sunday</h5>\r\n                    <Form.Row>\r\n                      <Col>\r\n                        <Form.Control as=\"select\" value={this.state.storeHours[6].open_time} onChange={this.handleSelectChange.bind(this)}>\r\n                          <option value={0}>{this.convertMinsToHrsMins(0)}</option>\r\n                          <option value={60}>{this.convertMinsToHrsMins(60)}</option>\r\n                          <option value={120}>{this.convertMinsToHrsMins(120)}</option>\r\n                          <option value={180}>{this.convertMinsToHrsMins(180)}</option>\r\n                          <option value={240}>{this.convertMinsToHrsMins(240)}</option>\r\n                          <option value={300}>{this.convertMinsToHrsMins(300)}</option>\r\n                          <option value={360}>{this.convertMinsToHrsMins(360)}</option>\r\n                          <option value={420}>{this.convertMinsToHrsMins(420)}</option>\r\n                          <option value={480}>{this.convertMinsToHrsMins(480)}</option>\r\n                          <option value={540}>{this.convertMinsToHrsMins(540)}</option>\r\n                          <option value={600}>{this.convertMinsToHrsMins(600)}</option>\r\n                          <option value={660}>{this.convertMinsToHrsMins(660)}</option>\r\n                          <option value={720}>{this.convertMinsToHrsMins(720)}</option>\r\n                          <option value={780}>{this.convertMinsToHrsMins(780)}</option>\r\n                          <option value={840}>{this.convertMinsToHrsMins(840)}</option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Control as=\"select\" value={this.state.storeHours[6].close_time} onChange={this.handleSelectChange.bind(this)}>\r\n                          <option value={900}>{this.convertMinsToHrsMins(900)}</option>\r\n                          <option value={960}>{this.convertMinsToHrsMins(960)}</option>\r\n                          <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\r\n                          <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\r\n                          <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\r\n                          <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\r\n                          <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\r\n                          <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\r\n                          <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\r\n                          <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Form.Row>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"pictureCount\">\r\n                    <Form.Label>Delete Images</Form.Label>\r\n                    {this.state.pictures.map((picture, index) => (\r\n                      <div key={\"pic-\" + index}>\r\n                        <img className=\"img-fluid\" src={picture.url} alt={\"Slide \" + index} />\r\n                        <Form.Check\r\n                          // style={{marginLeft: 30}}\r\n                          id={picture.key}\r\n                          label={picture.key.split('/').slice(-1)[0]}\r\n                          onChange={event => this.deleteFileChangeHandler(event, setFieldValue, values.pictures.length)}\r\n                        />\r\n                      </div>\r\n                    ))}\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId=\"pictures\">\r\n                    <Form.Label>Add Images</Form.Label>\r\n                    <br/>\r\n                    <input \r\n                      onChange={event => this.fileChangedHandler(event, setFieldValue, values.pictures)}\r\n                      type=\"file\"\r\n                      multiple\r\n                      className={touched.pictures && errors.pictures ? \"error\" : null}\r\n                    />\r\n                    {touched.pictureCount && errors.pictureCount ? (\r\n                      <div className=\"error-message\">{errors.pictureCount}</div>\r\n                    ): null}\r\n                  </Form.Group>\r\n\r\n\r\n                  <Button onClick={handleSubmit}>Submit</Button>\r\n                </Form>\r\n              )}\r\n          </Formik>\r\n        </Col>\r\n      </Row>\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Container fluid>\r\n        <DisplayWithLoading/>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StoreEditForm;\r\n","//CITATION: https://medium.com/@faizanv/authentication-for-your-react-and-express-application-w-json-web-tokens-923515826e0\r\nimport React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nexport default function redirectWithoutAuth(ComponentToProtect) {\r\n  return class extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        loading: true,\r\n        redirect: false,\r\n      };\r\n    }\r\n    componentDidMount() {\r\n      fetch(fetchDomain + '/checkToken' , {\r\n        method: \"GET\",\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      }).then(res => {\r\n          if (res.status === 200) {\r\n            this.setState({ loading: false });\r\n          } else {\r\n            const error = new Error(res.error);\r\n            throw error;\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n          this.setState({ loading: false, redirect: true });\r\n        });\r\n    }\r\n    render() {\r\n      const { loading, redirect } = this.state;\r\n      if (loading) {\r\n        return null;\r\n      }\r\n      if (redirect) {\r\n        return <Redirect to=\"/login\" />;\r\n      }\r\n      else {\r\n        return <ComponentToProtect {...this.props} />;\r\n      }\r\n    }\r\n  }\r\n}","import React from 'react';\r\nimport '../../App.css';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport { FaLockOpen, FaLock, FaUser, FaPhone } from 'react-icons/fa';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport {editUser} from '../../reduxFolder/redux.js'\r\n\r\nclass EditProfileForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: {\r\n        first_name: '',\r\n        last_name: '',\r\n        phone: '',\r\n        password: '',\r\n        password_confirmation: '',\r\n        id: ''\r\n      }\r\n    }\r\n    // RegEx for phone number validation\r\n    this.phoneRegExp = /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/\r\n    // this.emailRegExp = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/\r\n    // Schema for yup\r\n    this.yupValidationSchema = Yup.object().shape({\r\n      first_name: Yup.string()\r\n      .min(2, \"First name must have at least 2 characters\")\r\n      .max(100, \"First name can't be longer than 100 characters\")\r\n      .required(\"First name is required\"),\r\n      last_name: Yup.string()\r\n      .min(2, \"Last name must have at least 2 characters\")\r\n      .max(100, \"Last name can't be longer than 100 characters\")\r\n      .required(\"Last name is required\"),\r\n      // email: Yup.string()\r\n      // .email(\"Must be a valid email address\")\r\n      // .max(100, \"Email must be less than 100 characters\")\r\n      // .required(\"Email is required\"),\r\n      phone: Yup.string()\r\n      .matches(this.phoneRegExp, \"Phone number is not valid\"),\r\n      password: Yup.string()\r\n      .min(6, \"Password must have at least 6 characters\")\r\n      .max(100, \"Password can't be longer than 100 characters\")\r\n      .required(\"Password is required\"),\r\n      password_confirmation: Yup.string()\r\n      .oneOf([Yup.ref('password')], 'Passwords do not match')\r\n      .required(\"Password confirmation is required\"),\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState)  {\r\n    if (prevProps.user !== this.props.user) {\r\n      this.props.history.push({\r\n        pathname: '/users/' + this.props.user.id,\r\n      })\r\n    }\r\n  }\r\n    \r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"justify-content-center\">\r\n          <Col xs={8} sm={7} md={6} lg={5}>\r\n            <Formik\r\n              enableReinitialize\r\n              initialValues={{\r\n                first_name: this.props.user.first_name,\r\n                last_name: this.props.user.last_name,\r\n                phone: this.props.user.phone,\r\n                password: '',\r\n                password_confirmation: '',\r\n                id: 0\r\n              }}\r\n              validationSchema={this.yupValidationSchema}\r\n              onSubmit={(values) => {\r\n                values.id = this.props.match.params.user_id\r\n\r\n                this.props.editProfile(values)\r\n              }}\r\n            >\r\n            {( {values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit}) => (\r\n              <Form className=\"formBody rounded\">\r\n                <h3>Edit Profile</h3>\r\n\r\n                <Form.Group controlId=\"formFirstName\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaUser/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control \r\n                      type=\"text\" \r\n                      name=\"first_name\"\r\n                      value={values.first_name} \r\n                      placeholder=\"First Name\" \r\n                      onChange={handleChange} \r\n                      onBlur={handleBlur}\r\n                      className={touched.first_name && errors.first_name ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.first_name && errors.first_name ? (\r\n                    <div className=\"error-message\">{errors.first_name}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formLastName\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaUser/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control type=\"text\" \r\n                    value={values.last_name}\r\n                    placeholder=\"Last Name\" \r\n                    name=\"last_name\" \r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={touched.last_name && errors.last_name ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.last_name && errors.last_name ? (\r\n                    <div className=\"error-message\">{errors.last_name}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formPhone\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaPhone/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control type=\"text\" \r\n                      value={values.phone} \r\n                      placeholder=\"Phone Number\" \r\n                      name=\"phone\" \r\n                      onChange={handleChange} \r\n                      onBlur={handleBlur}\r\n                      className={touched.phone && errors.phone ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.phone && errors.phone ? (\r\n                    <div className=\"error-message\">{errors.phone}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formPassword\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaLockOpen/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control \r\n                      type=\"password\" \r\n                      value={values.password} \r\n                      placeholder=\"Password\" \r\n                      name=\"password\" \r\n                      onChange={handleChange} \r\n                      onBlur={handleBlur}\r\n                      className={touched.password && errors.password ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.password && errors.password ? (\r\n                    <div className=\"error-message\">{errors.password}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formPasswordConfirmation\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaLock/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control \r\n                      type=\"password\" \r\n                      value={values.password_confirmation}\r\n                      placeholder=\"Confirm Password\" \r\n                      name=\"password_confirmation\" \r\n                      onChange={handleChange} \r\n                      onBlur={handleBlur}\r\n                      className={touched.password_confirmation && errors.password_confirmation ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.password_confirmation && errors.password_confirmation ? (\r\n                    <div className=\"error-message\">{errors.password_confirmation}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n                <Button onClick={handleSubmit}>Submit</Button>\r\n              </Form>\r\n            )}\r\n            </Formik>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.userReducer.user\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n  editProfile: (email, password, auth_token) => editUser(email, password, auth_token)\r\n}, dispatch)\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfileForm);\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { connect } from 'react-redux';\r\n\r\nclass Profile extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  render() {\r\n    // fix later to render all users not just current one? this.props.match.params.user_id\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"justify-content-center\">\r\n            <Col>\r\n              <h1>{this.props.user.first_name} {this.props.user.last_name}</h1>\r\n              <h1>{this.props.user.phone}</h1>\r\n              <h1>{this.props.user.email}</h1>\r\n            </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.userReducer.user\r\n})\r\n\r\nexport default connect(mapStateToProps)(Profile);\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { Button } from 'react-bootstrap';\r\n// import SearchCard from '../Search/SearchCard';\r\nimport Carousel from 'react-bootstrap/Carousel'\r\n// import salon from '../../assets/salon.jpg';\r\nimport salon2 from '../../assets/salon2.jpeg';\r\nimport hair from '../../assets/hair_salon.jpg';\r\nimport { FaEdit } from 'react-icons/fa';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  addAlert\r\n} from '../../reduxFolder/actions/alert'\r\nimport store from '../../reduxFolder/store';\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\n// ***** NOTE: fix to properly display all the stores\r\n\r\nclass UserStoresDashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n      stores: [\r\n        {\r\n          id: \"\",\r\n          name: \"\",\r\n          street: \"\",\r\n          city: \"\",\r\n          state: \"\",\r\n          zipcode: \"\",\r\n          created_at: \"\",\r\n          category: [],\r\n          services: [],\r\n          workers: [],\r\n          owners: [],\r\n          phone: \"\",\r\n          clients: [],\r\n          description: \"\",\r\n          lat: \"\",\r\n          lng: \"\"\r\n        }\r\n      ],\r\n      redirectToWorkerForm: null,\r\n      store_id: null\r\n    }\r\n  }\r\n\r\n  triggerStoreEdit(passedStore) {\r\n    this.props.history.push({\r\n      pathname: '/stores/edit/' + passedStore.id,\r\n      state: {\r\n        store: passedStore\r\n      }\r\n    })\r\n  }\r\n\r\n  triggerAddWorker(id) {\r\n    this.props.history.push({\r\n      pathname: '/stores/addWorker/' + id\r\n    })\r\n  }\r\n\r\n  triggerShowWorkers(id) {\r\n    this.props.history.push({\r\n      pathname: '/stores/' + id + '/workers'\r\n    })\r\n  }\r\n\r\n  triggerStoreShow(passedStore) {\r\n    this.props.history.push({\r\n      pathname: '/stores/' + passedStore.id,\r\n      state: {\r\n        store: passedStore\r\n      }\r\n    })\r\n  }\r\n\r\n  triggerShowServices(id) {\r\n    this.props.history.push({\r\n      pathname: '/stores/' + id + '/services'\r\n    })\r\n  }\r\n\r\n  triggerAddService(id) {\r\n    this.props.history.push({\r\n      pathname: '/stores/addService/' + id,\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    if(this.props.location.state && this.props.location.state.stores){\r\n      this.setState({\r\n        stores: this.props.location.state.stores\r\n      })\r\n    }\r\n    else{\r\n      fetch(fetchDomain + '/stores/users/' + this.props.match.params.user_id , {\r\n        method: \"GET\",\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      })\r\n      .then(function(response){\r\n        if(response.status!==200){\r\n          // throw an error alert\r\n          store.dispatch(addAlert(response))\r\n        }\r\n        else{\r\n          return response.json();\r\n        }\r\n      })\r\n      .then(data => {\r\n        if(data){\r\n          // let convertedCategory = data.category.map((str) => ({ value: str.toLowerCase(), label: str }));\r\n          this.setState({\r\n            stores: data,\r\n          })\r\n        }\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n  // {this.state.stores.map(store => (\r\n  //   <Col key={\"store-\" + store.id}>\r\n  //     <Button onClick={() => this.triggerStoreEdit(store)}>Edit Store</Button>\r\n  //     <Button onClick={() => this.triggerShowWorkers(store.id)}>Show Workers</Button>\r\n  //     <Button onClick={() => this.triggerAddWorker(store.id)}>Add Worker</Button>\r\n  //     <Button onClick={() => this.triggerShowServices(store.id)}>Show Services</Button>\r\n  //     <Button onClick={() => this.triggerAddService(store.id)}>Add Service</Button>\r\n  //     <SearchCard store={store}\r\n  //                 carousel={true}\r\n  //                 styleVal={{ width: '18rem' }}\r\n  //                 omitBookOption={true}\r\n  //                 onClickFunctionStore={() => this.triggerStoreShow(store)}/>\r\n  //   </Col>\r\n  // ))}\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid style={{backgroundColor: '#bdcddb'}}>\r\n        {this.state.stores.map((store, index) => (\r\n          <div key={\"store\" + index}>\r\n            <Row className=\"justify-content-center\" style={{height: 700}}>\r\n              {/* <div className=\"style_column\"> </div> */}\r\n              <Col xs={6} sm={6} md={6} lg={6}>\r\n                <Carousel className=\"dashboard_carousel\" interval=\"\">\r\n                    <Carousel.Item className=\"item\">\r\n                      <img className=\"item\" src={salon2} alt=\"test\"/>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item className=\"item\">\r\n                      <img className=\"item\" src={hair} alt=\"test2\"/>\r\n                    </Carousel.Item>\r\n                </Carousel>\r\n              </Col>\r\n              <Col xs={6} sm={6} md={6} lg={6} style={{top: 125}}>\r\n                <span className=\"name\" onClick={() => this.triggerStoreShow(store)} style={{cursor: 'pointer'}}> {store.name} </span>\r\n                <FaEdit className=\"edit\" size={25} onClick={() => this.triggerStoreEdit(store)}/>\r\n                <p className=\"address\">{store.street}, {store.city}, {store.state} </p>\r\n                <div>\r\n                  {store.category.map((category, index) => (\r\n                    <div className=\"category\" key={store.id + \"-category-\" + index}> <p style={{color: 'white'}}> {category} </p> </div>\r\n                  ))}\r\n                </div>\r\n                <div>\r\n                  <p className=\"description\"> \r\n                    {store.description}\r\n                  </p>\r\n                </div>\r\n\r\n                <Button onClick={() =>  this.triggerShowWorkers(store.id)}>View Workers</Button> &nbsp;\r\n                <Button onClick={() =>  this.triggerAddWorker(store.id)}>Add Worker</Button> &nbsp;\r\n                <Button onClick={() =>  this.triggerShowServices(store.id)}>View Services</Button> &nbsp;\r\n                <Button onClick={() =>  this.triggerAddService(store.id)}>Add Service</Button>\r\n\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        ))}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(UserStoresDashboard);\r\n","import React from 'react';\r\nimport '../../App.css';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport { FaEnvelope } from 'react-icons/fa';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Select from 'react-select';\r\nimport {\r\n  addAlert\r\n} from '../../reduxFolder/actions/alert'\r\nimport store from '../../reduxFolder/store';\r\nimport GridLoader from 'react-spinners/GridLoader'\r\nimport { css } from '@emotion/core'\r\n\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n\r\nclass AddWorkerForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      options: [\r\n        { value: 0, label: 'Brazilian Blowout' },\r\n        { value: 1, label: 'Manicure' },\r\n      ],\r\n      workerHours: [],\r\n      storeHours: [],\r\n      weekIsWorking: [true, true, true, true, true, true, true],\r\n      loading: true\r\n    };\r\n    this.emailRegExp = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/\r\n    // Schema for yup\r\n    this.yupValidationSchema = Yup.object().shape({\r\n      email: Yup.string()\r\n        .email(\"Must be a valid email address\")\r\n        .max(100, \"Email must be less than 100 characters\")\r\n        .required(\"Email is required\"),\r\n    });\r\n\r\n    this.triggerWorkerDisplay = this.triggerWorkerDisplay.bind(this);\r\n  }\r\n\r\n  convertMinsToHrsMins(mins) {\r\n    let h = Math.floor(mins / 60);\r\n    let m = mins % 60;\r\n    let am = false\r\n    if (h == 24) {\r\n      am = true\r\n      h -= 12\r\n    }\r\n    else if (h < 12) {\r\n      am = true\r\n    } else if (h != 12) {\r\n      h -= 12\r\n    }\r\n    h = h < 10 ? '0' + h : h;\r\n    if (h == 0) {\r\n      h = '12'\r\n    }\r\n    m = m < 10 ? '0' + m : m;\r\n    if (am) {\r\n      return `${h}:${m}am`;\r\n    } else {\r\n      return `${h}:${m}pm`;\r\n    }\r\n\r\n  }\r\n\r\n  handleSelectChange = (event) => {\r\n    var days = ['formHoursMonday', 'formHoursTuesday', 'formHoursWednesday', 'formHoursThursday', 'formHoursFriday', 'formHoursSaturday', 'formHoursSunday']\r\n    var day = days.indexOf(event.target.id)\r\n    var old_start_time = 0\r\n    var old_end_time = 0\r\n    var newWorkerHours = []\r\n    old_start_time = this.state.workerHours[day].start_time\r\n    old_end_time = this.state.workerHours[day].end_time\r\n    if (parseInt(event.target.querySelector('option').value) <= 840) {\r\n      newWorkerHours = [\r\n        ...this.state.workerHours.slice(0, day),\r\n        { start_time: parseInt(event.target.value), end_time: old_end_time },\r\n        ...this.state.workerHours.slice(day + 1)\r\n      ]\r\n    } else {\r\n      newWorkerHours = [\r\n        ...this.state.workerHours.slice(0, day),\r\n        { start_time: old_start_time, end_time: parseInt(event.target.value) },\r\n        ...this.state.workerHours.slice(day + 1)\r\n      ]\r\n    }\r\n\r\n    this.setState({\r\n      workerHours: newWorkerHours\r\n    })\r\n  };\r\n\r\n  handleDayStatusChange = (day) => {\r\n    var updateWeekIsWorking = [\r\n      ...this.state.weekIsWorking.slice(0, day),\r\n      !this.state.weekIsWorking[day],\r\n      ...this.state.weekIsWorking.slice(day + 1)\r\n    ]\r\n\r\n    this.setState({\r\n      weekIsWorking: updateWeekIsWorking\r\n    })\r\n  };\r\n\r\n  // redirect to the worker display page and pass the new worker data\r\n  triggerWorkerDisplay(returnedWorker) {\r\n    this.props.history.push({\r\n      pathname: '/stores/' + this.props.match.params.store_id + '/workers/' + returnedWorker.id,\r\n      state: {\r\n        worker: returnedWorker\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/storeHours\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n      .then(function (response) {\r\n        if (response.status !== 200) {\r\n          // throw an error alert\r\n          store.dispatch(addAlert(response))\r\n        }\r\n        else {\r\n          return response.json();\r\n        }\r\n      })\r\n      .then(data => {\r\n        if (data) {\r\n          let receivedWorkerHours = data.map((day) => ({ start_time: day.open_time, end_time: day.close_time }));\r\n          this.setState({\r\n            storeHours: data, \r\n            workerHours: receivedWorkerHours,\r\n            loading: false\r\n          })\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const CreateStartTimesForDay = (props) => {\r\n      let items = [];\r\n      for (let i = this.state.storeHours[props.day].open_time; i <= 840; i += 60) {\r\n        items.push(<option key={i} value={i}>{this.convertMinsToHrsMins(i)}</option>);\r\n      }\r\n      return items;\r\n    }\r\n    const CreateEndTimesForDay = (props) => {\r\n      let items = [];\r\n      for (let i = 900; i <= this.state.storeHours[props.day].close_time; i += 60) {\r\n        items.push(<option key={i} value={i}>{this.convertMinsToHrsMins(i)}</option>);\r\n      }\r\n      return items;\r\n    }\r\n    const DisplayWithLoading = (props) => {\r\n      if (this.state.loading) {\r\n        return <Row className=\"vertical-center\">\r\n          <Col>\r\n            <GridLoader\r\n              css={override}\r\n              size={20}\r\n              color={\"#2196f3\"}\r\n              loading={this.state.isLoading}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      } else { \r\n        return <Row className=\"justify-content-center\">\r\n          <Col xs={8} sm={7} md={6} lg={5}>\r\n            <Formik\r\n              initialValues={{\r\n                email: '',\r\n                services: '',\r\n                workerHours: []\r\n              }}\r\n              validationSchema={this.yupValidationSchema}\r\n              onSubmit={(values) => {\r\n                let store_id = this.props.match.params.store_id\r\n                let triggerWorkerDisplay = this.triggerWorkerDisplay\r\n\r\n                values.services = values.services.map(function (val) {\r\n                  return val.value;\r\n                })\r\n\r\n                fetch(fetchDomain + '/stores/addWorker/' + store_id, {\r\n                  method: \"POST\",\r\n                  headers: {\r\n                    'Content-type': 'application/json'\r\n                  },\r\n                  credentials: 'include',\r\n                  body: JSON.stringify(values)\r\n                })\r\n                  .then(function (response) {\r\n                    if (response.status !== 200) {\r\n                      store.dispatch(addAlert(response))\r\n                    }\r\n                    else {\r\n                      return response.json();\r\n                    }\r\n                  })\r\n                  .then(function (data) {\r\n                    // redirect to home page signed in\r\n                    if (data) {\r\n                      triggerWorkerDisplay(data)\r\n                    }\r\n                  })\r\n              }}\r\n            >\r\n              {({ values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                setFieldValue }) => (\r\n                  <Form className=\"formBody rounded\">\r\n                    <h3>Add Worker</h3>\r\n\r\n                    <Form.Group controlId=\"formEmail\">\r\n                      <InputGroup>\r\n                        <InputGroup.Prepend>\r\n                          <InputGroup.Text>\r\n                            <FaEnvelope />\r\n                          </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <Form.Control\r\n                          type=\"email\"\r\n                          value={values.email}\r\n                          placeholder=\"Email\"\r\n                          name=\"email\"\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          className={touched.email && errors.email ? \"error\" : null} />\r\n                      </InputGroup>\r\n                      {touched.email && errors.email ? (\r\n                        <div className=\"error-message\">{errors.email}</div>\r\n                      ) : null}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formServices\">\r\n                      <Select\r\n                        value={values.services}\r\n                        onChange={option => setFieldValue(\"services\", option)}\r\n                        name=\"services\"\r\n                        options={this.state.options}\r\n                        isMulti={true}\r\n                        placeholder={\"Services\"}\r\n                        className={touched.services && errors.services ? \"error\" : null}\r\n                      />\r\n                      {touched.services && errors.services ? (\r\n                        <div className=\"error-message\">{errors.services}</div>\r\n                      ) : null}\r\n                    </Form.Group>\r\n\r\n                    {/* Later make this work with store hours*/}\r\n                    <h4>Worker Hours</h4>\r\n\r\n                    <Form.Group controlId=\"formHoursMonday\">\r\n                      <Form.Row className=\"text-left\">\r\n                        <Col>\r\n                          <h5>Monday</h5>\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"monday-toggle\"\r\n                            label=\"Working Today?\"\r\n                            checked={this.state.weekIsWorking[0]}\r\n                            onChange={() => this.handleDayStatusChange(0)}\r\n                          />\r\n                        </Col>\r\n                      </Form.Row>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[0]} value={this.state.workerHours[0].start_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateStartTimesForDay day={0} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[0]} value={this.state.workerHours[0].end_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateEndTimesForDay day={0} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formHoursTuesday\">\r\n                      <Form.Row className=\"text-left\">\r\n                        <Col>\r\n                          <h5>Tuesday</h5>\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"tuesday-toggle\"\r\n                            label=\"Working Today?\"\r\n                            checked={this.state.weekIsWorking[1]}\r\n                            onChange={() => this.handleDayStatusChange(1)}\r\n                          />\r\n                        </Col>\r\n                      </Form.Row>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[1]} value={this.state.workerHours[1].start_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateStartTimesForDay day={1} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[1]} value={this.state.workerHours[1].end_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateEndTimesForDay day={1} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group controlId=\"formHoursWednesday\">\r\n                      <Form.Row className=\"text-left\">\r\n                        <Col>\r\n                          <h5>Wednesday</h5>\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"wednesday-toggle\"\r\n                            label=\"Working Today?\"\r\n                            checked={this.state.weekIsWorking[2]}\r\n                            onChange={() => this.handleDayStatusChange(2)}\r\n                          />\r\n                        </Col>\r\n                      </Form.Row>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[2]} value={this.state.workerHours[2].start_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateStartTimesForDay day={2} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[2]} value={this.state.workerHours[2].end_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateEndTimesForDay day={2} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formHoursThursday\">\r\n                      <Form.Row className=\"text-left\">\r\n                        <Col>\r\n                          <h5>Thursday</h5>\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"thursday-toggle\"\r\n                            label=\"Working Today?\"\r\n                            checked={this.state.weekIsWorking[3]}\r\n                            onChange={() => this.handleDayStatusChange(3)}\r\n                          />\r\n                        </Col>\r\n                      </Form.Row>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[3]} value={this.state.workerHours[3].start_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateStartTimesForDay day={3} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[3]} value={this.state.workerHours[3].end_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateEndTimesForDay day={3} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group controlId=\"formHoursFriday\">\r\n                      <Form.Row className=\"text-left\">\r\n                        <Col>\r\n                          <h5>Friday</h5>\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"friday-toggle\"\r\n                            label=\"Working Today?\"\r\n                            checked={this.state.weekIsWorking[4]}\r\n                            onChange={() => this.handleDayStatusChange(4)}\r\n                          />\r\n                        </Col>\r\n                      </Form.Row>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[4]} value={this.state.workerHours[4].start_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateStartTimesForDay day={4} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[4]} value={this.state.workerHours[4].end_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateEndTimesForDay day={4} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formHoursSaturday\">\r\n                      <Form.Row className=\"text-left\">\r\n                        <Col>\r\n                          <h5>Saturday</h5>\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"saturday-toggle\"\r\n                            label=\"Working Today?\"\r\n                            checked={this.state.weekIsWorking[5]}\r\n                            onChange={() => this.handleDayStatusChange(5)}\r\n                          />\r\n                        </Col>\r\n                      </Form.Row>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[5]} value={this.state.workerHours[5].start_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateStartTimesForDay day={5} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[5]} value={this.state.workerHours[5].end_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateEndTimesForDay day={5} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group controlId=\"formHoursSunday\">\r\n                      <Form.Row className=\"text-left\">\r\n                        <Col>\r\n                          <h5>Sunday</h5>\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"sunday-toggle\"\r\n                            label=\"Working Today?\"\r\n                            checked={this.state.weekIsWorking[6]}\r\n                            onChange={() => this.handleDayStatusChange(6)}\r\n                          />\r\n                        </Col>\r\n                      </Form.Row>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[6]} value={this.state.workerHours[6].start_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateStartTimesForDay day={6} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[6]} value={this.state.workerHours[6].end_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateEndTimesForDay day={6} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n                    <Button onClick={handleSubmit}>Submit</Button>\r\n                  </Form>\r\n                )}\r\n            </Formik>\r\n          </Col>\r\n        </Row>\r\n      } \r\n    }\r\n\r\n    return (\r\n      <Container fluid>\r\n        <DisplayWithLoading/>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddWorkerForm;\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { Button } from 'react-bootstrap';\r\nimport './Worker.css'\r\n// import {\r\n//   addAlert\r\n// } from '../../reduxFolder/actions'\r\n// import store from '../../reduxFolder/store';\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nclass WorkerDashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n      workers: [],\r\n      redirectToWorkerEditForm: null,\r\n      redirectToWorkerDisplay: null\r\n    }\r\n  }\r\n\r\n  triggerWorkerEditForm(id) {\r\n    this.props.history.push({\r\n      pathname: '/stores/' + this.props.match.params.store_id + '/workers/' + id + '/edit'\r\n    })\r\n  }\r\n\r\n  triggerWorkerDisplay(id) {\r\n    this.props.history.push({\r\n      pathname: '/stores/' + this.props.match.params.store_id + '/workers/' + id\r\n    })\r\n  }\r\n\r\n  triggerAddWorker() {\r\n    this.props.history.push({\r\n      pathname: '/stores/addWorker/' + this.props.match.params.store_id\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    if(this.props.location.state && this.props.location.state.workers){\r\n      this.setState({\r\n        workers: this.props.location.state.workers\r\n      })\r\n    }\r\n    else{\r\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/workers', {\r\n        method: \"GET\",\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      })\r\n      .then(function(response){\r\n        if(response.status!==200){\r\n          // throw an error alert\r\n          // store.dispatch(addAlert(response))\r\n        }\r\n        else{\r\n          return response.json();\r\n        }\r\n      })\r\n      .then(data => {\r\n        if(data){\r\n          this.setState({\r\n            workers: data\r\n          })\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let workers = null;\r\n    if(this.state.workers.length != 0){\r\n      workers = <div>\r\n                  {this.state.workers.map(worker => (\r\n                    <Col key={\"worker-\" + worker.id}>\r\n                      <Button onClick={() => this.triggerWorkerDisplay(worker.id)}>Show Worker</Button>\r\n                      <Button onClick={() => this.triggerWorkerEditForm(worker.id)}>Edit Worker</Button>\r\n                    </Col>\r\n                  ))}\r\n                </div>\r\n    }\r\n    else{\r\n      workers = <div>\r\n                  <p className=\"noResults\">No Workers!</p>\r\n                  <Button onClick={() => this.triggerAddWorker()}>Add Worker</Button>\r\n                </div>\r\n    }\r\n\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"justify-content-center\">\r\n          {workers}\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WorkerDashboard;","import React from 'react';\r\nimport '../../App.css';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Select from 'react-select';\r\nimport {\r\n  addAlert\r\n} from '../../reduxFolder/actions/alert'\r\nimport store from '../../reduxFolder/store';\r\nimport GridLoader from 'react-spinners/GridLoader'\r\nimport { css } from '@emotion/core'\r\nimport { withRouter } from \"react-router\"\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n\r\n\r\nclass WorkerEditForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      worker: {\r\n        id: 0,\r\n        store_id: 0,\r\n        services: [],\r\n        user_id: 0,\r\n        created_at: \"\",\r\n        first_name: \"\",\r\n        last_name: \"\"\r\n      },\r\n      options: [\r\n        { value: 0, label: 'Brazilian Blowout' },\r\n        { value: 1, label: 'Manicure' },\r\n      ],\r\n      serviceMapping: {\r\n        0: \"Brazilian Blowout\",\r\n        1: \"Manicure\"\r\n      },\r\n      storeHours: [],\r\n      workerHours: [],\r\n      receivedServices: null,\r\n      loading: true,\r\n      newHours: [],\r\n      weekIsWorking: [true, true, true, true, true, true, true]\r\n    };\r\n\r\n    // Schema for yup\r\n    this.yupValidationSchema = Yup.object().shape({\r\n      services: Yup.string()\r\n        .required(\"Service is required\")\r\n      // .nullable()\r\n    });\r\n\r\n    this.triggerWorkerDisplay = this.triggerWorkerDisplay.bind(this);\r\n  }\r\n\r\n  // redirect to the store display page and pass the new store data\r\n  triggerWorkerDisplay(returnedWorker) {\r\n    this.props.history.push({\r\n      pathname: '/stores/' + this.props.match.params.store_id + '/workers/' + this.props.match.params.worker_id,\r\n      state: {\r\n        worker: returnedWorker\r\n      }\r\n    })\r\n  }\r\n\r\n  convertMinsToHrsMins(mins) {\r\n    let h = Math.floor(mins / 60);\r\n    let m = mins % 60;\r\n    let am = false\r\n    if (h == 24) {\r\n      am = true\r\n      h -= 12\r\n    }\r\n    else if (h < 12) {\r\n      am = true\r\n    } else if (h != 12) {\r\n      h -= 12\r\n    }\r\n    h = h < 10 ? '0' + h : h;\r\n    if (h == 0) {\r\n      h = '12'\r\n    }\r\n    m = m < 10 ? '0' + m : m;\r\n    if (am) {\r\n      return `${h}:${m}am`;\r\n    } else {\r\n      return `${h}:${m}pm`;\r\n    }\r\n\r\n  }\r\n\r\n  handleSelectChange = (event) => {\r\n    var days = ['formHoursMonday', 'formHoursTuesday', 'formHoursWednesday', 'formHoursThursday', 'formHoursFriday', 'formHoursSaturday', 'formHoursSunday']\r\n    var day = days.indexOf(event.target.id)\r\n    var updateNewHours = this.state.newHours\r\n    var old_start_time = 0\r\n    var old_end_time = 0\r\n    var newWorkerHours = []\r\n    if (this.state.newHours[day]) {\r\n      old_start_time = this.state.newHours[day].start_time\r\n      old_end_time = this.state.newHours[day].end_time\r\n    } else {\r\n      old_start_time = this.state.workerHours[day].start_time\r\n      old_end_time = this.state.workerHours[day].end_time\r\n    }\r\n\r\n    if (parseInt(event.target.querySelector('option').value) <= 840) {\r\n      updateNewHours[day] = { start_time: parseInt(event.target.value), end_time: old_end_time }\r\n      newWorkerHours = [\r\n        ...this.state.workerHours.slice(0, day),\r\n        { start_time: parseInt(event.target.value), end_time: old_end_time },\r\n        ...this.state.workerHours.slice(day + 1)\r\n      ]\r\n    } else {\r\n      updateNewHours[day] = { start_time: old_start_time, end_time: parseInt(event.target.value) }\r\n      newWorkerHours = [\r\n        ...this.state.workerHours.slice(0, day),\r\n        { start_time: old_start_time, end_time: parseInt(event.target.value) },\r\n        ...this.state.workerHours.slice(day + 1)\r\n      ]\r\n    }\r\n\r\n    this.setState({\r\n      newHours: updateNewHours,\r\n      workerHours: newWorkerHours\r\n    })\r\n  };\r\n\r\n  handleDayStatusChange = (day) => {\r\n    var updateWeekIsWorking = [\r\n      ...this.state.weekIsWorking.slice(0, day),\r\n      !this.state.weekIsWorking[day],\r\n      ...this.state.weekIsWorking.slice(day + 1)\r\n    ]\r\n\r\n    this.setState({\r\n      weekIsWorking: updateWeekIsWorking\r\n    })\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      worker: this.props.worker,\r\n      receivedServices: this.props.receivedServices,\r\n      selectedOption: this.props.selectedOption,\r\n      storeHours: this.props.storeHours,\r\n      workerHours: this.props.workerHours,\r\n      loading: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const CreateStartTimesForDay = (props) => {\r\n      let items = [];\r\n      for (let i = this.state.storeHours[props.day].open_time; i <= 840; i += 60) {\r\n        items.push(<option key={i} value={i}>{this.convertMinsToHrsMins(i)}</option>);\r\n      }\r\n      return items;\r\n    }\r\n    const CreateEndTimesForDay = (props) => {\r\n      let items = [];\r\n      for (let i = 900; i <= this.state.storeHours[props.day].close_time; i += 60) {\r\n        items.push(<option key={i} value={i}>{this.convertMinsToHrsMins(i)}</option>);\r\n      }\r\n      return items;\r\n    }\r\n\r\n    const DisplayWithLoading = (props) => {\r\n      if (this.state.loading) {\r\n        return <Row className=\"vertical-center\">\r\n          <Col>\r\n            <GridLoader\r\n              css={override}\r\n              size={20}\r\n              color={\"#2196f3\"}\r\n              loading={this.state.isLoading}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      } else {\r\n        return <Row className=\"justify-content-center\">\r\n          <Col>\r\n            <Formik\r\n              enableReinitialize\r\n              initialValues={{\r\n                services: this.state.selectedOption,\r\n                id: this.state.worker.id,\r\n                store_id: this.state.worker.store_id,\r\n                user_id: this.state.worker.user_id,\r\n                created_at: this.state.worker.created_at,\r\n                first_name: this.state.worker.first_name,\r\n                last_name: this.state.worker.last_name,\r\n                newHours: this.state.newHours,\r\n                noChange: false\r\n              }}\r\n              validationSchema={this.yupValidationSchema}\r\n              onSubmit={(values) => {\r\n                values.services = values.services.map(function (val) {\r\n                  return val.value;\r\n                })\r\n\r\n                let store_id = this.props.match.params.store_id\r\n                let worker_id = this.props.match.params.worker_id\r\n                let triggerWorkerDisplay = this.triggerWorkerDisplay;\r\n                values.newHours.map((day, index) => {\r\n                  if(this.state.weekIsWorking[index]){\r\n                    return day\r\n                  } else {\r\n                    return {start_time: null, end_time: null}\r\n                  }\r\n                })\r\n                if(JSON.stringify(values.services)==JSON.stringify(this.state.receivedServices)) {\r\n                  values.noChange = true\r\n                }\r\n\r\n                fetch(fetchDomain + '/stores/' + store_id + '/workers/' + worker_id, {\r\n                  method: \"POST\",\r\n                  headers: {\r\n                    'Content-type': 'application/json'\r\n                  },\r\n                  credentials: 'include',\r\n                  body: JSON.stringify(values)\r\n                })\r\n                  .then(function (response) {\r\n                    if (response.status !== 200) {\r\n                      store.dispatch(addAlert(response))\r\n                    }\r\n                    else {\r\n                      // redirect to worker page\r\n                      return response.json()\r\n                    }\r\n                  })\r\n                  .then(data => {\r\n                    if (data) {\r\n                      this.props.updateWorker(this.state.worker, this.state.newHours, values.services)\r\n                    }\r\n                  });\r\n              }}\r\n            >\r\n              {({ values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                setFieldValue }) => (\r\n                  <Form>\r\n                    <h3>Worker Edit</h3>\r\n\r\n                    <Form.Group controlId=\"formServices\">\r\n                      <Select\r\n                        value={values.services}\r\n                        onChange={option => setFieldValue(\"services\", option)}\r\n                        name=\"services\"\r\n                        options={this.state.options}\r\n                        isMulti={true}\r\n                        placeholder={\"Services\"}\r\n                        className={touched.services && errors.services ? \"error\" : null}\r\n                      />\r\n                      {touched.services && errors.services ? (\r\n                        <div className=\"error-message\">{errors.services}</div>\r\n                      ) : null}\r\n                    </Form.Group>\r\n\r\n                    {/* Later make this work with store hours*/}\r\n                    <h4>Worker Hours</h4>\r\n\r\n                    <Form.Group controlId=\"formHoursMonday\">\r\n                      <Form.Row className=\"text-left\">\r\n                        <Col>\r\n                          <h5>Monday</h5>\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"monday-toggle\"\r\n                            label=\"Working Today?\"\r\n                            checked={this.state.weekIsWorking[0]}\r\n                            onChange={() => this.handleDayStatusChange(0)}\r\n                          />\r\n                        </Col>\r\n                      </Form.Row>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[0]} value={this.state.workerHours[0].start_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateStartTimesForDay day={0} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[0]} value={this.state.workerHours[0].end_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateEndTimesForDay day={0} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formHoursTuesday\">\r\n                      <Form.Row className=\"text-left\">\r\n                        <Col>\r\n                          <h5>Tuesday</h5>\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"tuesday-toggle\"\r\n                            label=\"Working Today?\"\r\n                            checked={this.state.weekIsWorking[1]}\r\n                            onChange={() => this.handleDayStatusChange(1)}\r\n                          />\r\n                        </Col>\r\n                      </Form.Row>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[1]} value={this.state.workerHours[1].start_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateStartTimesForDay day={1} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[1]} value={this.state.workerHours[1].end_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateEndTimesForDay day={1} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group controlId=\"formHoursWednesday\">\r\n                      <Form.Row className=\"text-left\">\r\n                        <Col>\r\n                          <h5>Wednesday</h5>\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"wednesday-toggle\"\r\n                            label=\"Working Today?\"\r\n                            checked={this.state.weekIsWorking[2]}\r\n                            onChange={() => this.handleDayStatusChange(2)}\r\n                          />\r\n                        </Col>\r\n                      </Form.Row>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[2]} value={this.state.workerHours[2].start_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateStartTimesForDay day={2} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[2]} value={this.state.workerHours[2].end_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateEndTimesForDay day={2} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formHoursThursday\">\r\n                      <Form.Row className=\"text-left\">\r\n                        <Col>\r\n                          <h5>Thursday</h5>\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"thursday-toggle\"\r\n                            label=\"Working Today?\"\r\n                            checked={this.state.weekIsWorking[3]}\r\n                            onChange={() => this.handleDayStatusChange(3)}\r\n                          />\r\n                        </Col>\r\n                      </Form.Row>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[3]} value={this.state.workerHours[3].start_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateStartTimesForDay day={3} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[3]} value={this.state.workerHours[3].end_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateEndTimesForDay day={3} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group controlId=\"formHoursFriday\">\r\n                      <Form.Row className=\"text-left\">\r\n                        <Col>\r\n                          <h5>Friday</h5>\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"friday-toggle\"\r\n                            label=\"Working Today?\"\r\n                            checked={this.state.weekIsWorking[4]}\r\n                            onChange={() => this.handleDayStatusChange(4)}\r\n                          />\r\n                        </Col>\r\n                      </Form.Row>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[4]} value={this.state.workerHours[4].start_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateStartTimesForDay day={4} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[4]} value={this.state.workerHours[4].end_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateEndTimesForDay day={4} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formHoursSaturday\">\r\n                      <Form.Row className=\"text-left\">\r\n                        <Col>\r\n                          <h5>Saturday</h5>\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"saturday-toggle\"\r\n                            label=\"Working Today?\"\r\n                            checked={this.state.weekIsWorking[5]}\r\n                            onChange={() => this.handleDayStatusChange(5)}\r\n                          />\r\n                        </Col>\r\n                      </Form.Row>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[5]} value={this.state.workerHours[5].start_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateStartTimesForDay day={5} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[5]} value={this.state.workerHours[5].end_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateEndTimesForDay day={5} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group controlId=\"formHoursSunday\">\r\n                      <Form.Row className=\"text-left\">\r\n                        <Col>\r\n                          <h5>Sunday</h5>\r\n                          <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"sunday-toggle\"\r\n                            label=\"Working Today?\"\r\n                            checked={this.state.weekIsWorking[6]}\r\n                            onChange={() => this.handleDayStatusChange(6)}\r\n                          />\r\n                        </Col>\r\n                      </Form.Row>\r\n                      <Form.Row>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[6]} value={this.state.workerHours[6].start_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateStartTimesForDay day={6} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                        <Col>\r\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[6]} value={this.state.workerHours[6].end_time} onChange={this.handleSelectChange.bind(this)}>\r\n                            <CreateEndTimesForDay day={6} />\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Form.Row>\r\n                    </Form.Group>\r\n\r\n                    <Button onClick={handleSubmit}>Submit</Button>\r\n                  </Form>\r\n                )}\r\n            </Formik>\r\n          </Col>\r\n        </Row>\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Container fluid>\r\n        <DisplayWithLoading />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(WorkerEditForm);\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Image from 'react-bootstrap/Image'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport './WorkerDisplay.css'\r\nimport Calendar from '../Calendar/CalendarPage'\r\nimport WorkerEditForm from './WorkerEditForm';\r\nimport GridLoader from 'react-spinners/GridLoader'\r\nimport { css } from '@emotion/core'\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n\r\nclass WorkerDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      worker: {\r\n        id: 0,\r\n        store_id: 0,\r\n        services: [],\r\n        user_id: 0,\r\n        created_at: \"\",\r\n        first_name: [],\r\n        last_name: \"\"\r\n      },\r\n      serviceMapping: {\r\n        0: \"Brazilian Blowout\",\r\n        1: \"Manicure\"\r\n      },\r\n      loading: true,\r\n      workerHours: [],\r\n      receivedServices: [],\r\n      selectedOption: [],\r\n      storeHours: [],\r\n      choice: 0,\r\n      daysOfWeek: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\r\n    }\r\n  }\r\n\r\n  convertMinsToHrsMins(mins) {\r\n    let h = Math.floor(mins / 60);\r\n    let m = mins % 60;\r\n    let am = false\r\n    if (h == 24) {\r\n      am = true\r\n      h -= 12\r\n    }\r\n    else if (h < 12) {\r\n      am = true\r\n    } else if (h != 12) {\r\n      h -= 12\r\n    }\r\n    h = h < 10 ? '0' + h : h;\r\n    if (h == 0) {\r\n      h = '12'\r\n    }\r\n    m = m < 10 ? '0' + m : m;\r\n    if (am) {\r\n      return `${h}:${m}am`;\r\n    } else {\r\n      return `${h}:${m}pm`;\r\n    }\r\n\r\n  }\r\n\r\n  updateWorker = (worker, newHours, services) => {\r\n    let updateHours = this.state.workerHours.map((dayHours, index) =>{\r\n      if(newHours[index] != null) {\r\n        return newHours[index]\r\n      } else {\r\n        return dayHours\r\n      }\r\n    })\r\n    this.setState({\r\n      worker: worker,\r\n      workerHours: updateHours,\r\n      receivedServices: services\r\n    })\r\n  }\r\n\r\n  updateContent = (selectedChoice) => {\r\n    this.setState({\r\n      choice: selectedChoice\r\n    })\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.location && this.props.location.state && this.props.location.state.worker) {\r\n      let convertedServices = this.props.location.state.worker.services.map((service) => ({ value: service, label: this.state.serviceMapping[service] }));\r\n      Promise.all([\r\n        fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/workers/' + this.props.match.params.worker_id + '/hours', {\r\n          method: \"GET\",\r\n          headers: {\r\n            'Content-type': 'application/json'\r\n          },\r\n          credentials: 'include'\r\n        }).then(value => value.json()),\r\n        fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/storeHours\", {\r\n          method: \"GET\",\r\n          headers: {\r\n            'Content-type': 'application/json'\r\n          },\r\n          credentials: 'include'\r\n        }).then(value => value.json())\r\n      ]).then(allResponses => {\r\n        let receivedWorkerHours = allResponses[1].map((day) => ({ start_time: day.open_time, end_time: day.close_time }));\r\n        if (allResponses[0] && allResponses[0].length == 7) {\r\n          receivedWorkerHours = allResponses[0]\r\n        } else {\r\n          this.setState({\r\n            newHours: receivedWorkerHours\r\n          })\r\n        }\r\n        this.setState({\r\n          worker: this.props.location.state.worker,\r\n          receivedServices: this.props.location.state.worker.services,\r\n          storeHours: allResponses[1],\r\n          workerHours: receivedWorkerHours,\r\n          loading: false\r\n        })\r\n      })\r\n    }\r\n    else {\r\n      Promise.all([\r\n        fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/workers/' + this.props.match.params.worker_id, {\r\n          method: \"GET\",\r\n          headers: {\r\n            'Content-type': 'application/json'\r\n          },\r\n          credentials: 'include'\r\n        }).then(value => value.json()),\r\n        fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/storeHours\", {\r\n          method: \"GET\",\r\n          headers: {\r\n            'Content-type': 'application/json'\r\n          },\r\n          credentials: 'include'\r\n        }).then(value => value.json()),\r\n        fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/workers/' + this.props.match.params.worker_id + '/hours', {\r\n          method: \"GET\",\r\n          headers: {\r\n            'Content-type': 'application/json'\r\n          },\r\n          credentials: 'include'\r\n        }).then(value => value.json())\r\n      ]).then(allResponses => {\r\n        let convertedServices = allResponses[0].services.map((service) => ({ value: service, label: this.state.serviceMapping[service] }));\r\n        let receivedWorkerHours = allResponses[1].map((day) => ({ start_time: day.open_time, end_time: day.close_time }));\r\n\r\n        // If worker hours are not complete, we default them to store hours. Worker hours should be complete though. \r\n        if (allResponses[2] && allResponses[2].length == 7) {\r\n          receivedWorkerHours = allResponses[2]\r\n        } else {\r\n          this.setState({\r\n            newHours: receivedWorkerHours\r\n          })\r\n        }\r\n        this.setState({\r\n          worker: allResponses[0],\r\n          receivedServices: allResponses[0].services,\r\n          selectedOption: convertedServices,\r\n          storeHours: allResponses[1],\r\n          workerHours: receivedWorkerHours,\r\n          loading: false\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const ListWorkingHours = () => {\r\n      let items = [];\r\n      for (let i = 0; i < this.state.workerHours.length; i++) {\r\n        if (this.state.workerHours[i].start_time != null) {\r\n          items.push(<Col sm=\"11\" md=\"10\" key={i}><ListGroup.Item>{this.state.daysOfWeek[i]}: {this.convertMinsToHrsMins(this.state.workerHours[i].start_time)}-{this.convertMinsToHrsMins(this.state.workerHours[i].end_time)}</ListGroup.Item></Col>);\r\n        }\r\n        else {\r\n          items.push(<Col sm=\"11\" md=\"10\" key={i}><ListGroup.Item>{this.state.daysOfWeek[i]}: Off</ListGroup.Item></Col>);\r\n        }\r\n      }\r\n      return items;\r\n    }\r\n\r\n    const RenderProfileContent = () => {\r\n      if(this.state.choice == 0) {\r\n        return <Calendar/>\r\n      } else if(this.state.choice == 1) {\r\n        return <WorkerEditForm worker={this.state.worker} receivedServices={this.state.receivedServices} selectedOption={this.state.selectedOption} storeHours={this.state.storeHours} workerHours={this.state.workerHours} updateWorker={this.updateWorker}/>\r\n      } else {\r\n        return <p>Past Appointments go here....</p>\r\n      }\r\n    }\r\n\r\n    const DisplayWithLoading = (props) => {\r\n      if (this.state.loading) {\r\n        return <Row className=\"vertical-center\">\r\n          <Col>\r\n            <GridLoader\r\n              css={override}\r\n              size={20}\r\n              color={\"#2196f3\"}\r\n              loading={this.state.isLoading}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      } else {\r\n        {/* CITATION: https://bootsnipp.com/snippets/M48pA */}\r\n        return <Row className=\"profile\">\r\n        <Col xs=\"11\" md=\"3\">\r\n        <div className=\"profile-sidebar\">\r\n            {/* <!-- SIDEBAR USERPIC --> */}\r\n            <div className=\"profile-userpic\">\r\n              <Image src=\"https://i.redd.it/v0caqchbtn741.jpg\" className=\"img-responsive\" alt=\"\" rounded />\r\n            </div>\r\n            {/* <!-- END SIDEBAR USERPIC --> */}\r\n\r\n            {/* <!-- SIDEBAR USER TITLE --> */}\r\n            <div className=\"profile-usertitle\">\r\n              <div className=\"profile-usertitle-name\">\r\n                {this.state.worker.first_name + \" \" + this.state.worker.last_name}\r\n              </div>\r\n              <div className=\"profile-usertitle-job\">\r\n                Stylist\r\n              </div>\r\n            </div>\r\n            {/* <!-- END SIDEBAR USER TITLE --> */}\r\n\r\n            {/* <!-- SIDEBAR BUTTONS --> */}\r\n            <div className=\"profile-userbuttons\">\r\n              <button type=\"button\" className=\"btn btn-success btn-sm\">Give a Raise</button>\r\n              <button type=\"button\" className=\"btn btn-danger btn-sm\">Lay Off</button>\r\n            </div>\r\n            {/* <!-- END SIDEBAR BUTTONS --> */}\r\n\r\n            {/* WORKING HOURS */}\r\n            <ListGroup variant=\"flush\">\r\n              <Row className=\"justify-content-center mt-4\">\r\n                <h5>Working Hours</h5>\r\n                <ListWorkingHours/>\r\n              </Row>\r\n            </ListGroup>\r\n            {/* END WORKING HOURS */}\r\n\r\n            {/* <!-- SIDEBAR MENU --> */}\r\n            <div className=\"profile-usermenu\">\r\n              <Nav defaultActiveKey=\"link-0\" className=\"flex-column\" variant=\"pills\">\r\n                <Nav.Link eventKey=\"link-0\" active={this.state.choice == 0} onClick={() => this.updateContent(0)}>Calendar</Nav.Link>\r\n                <Nav.Link eventKey=\"link-1\" active={this.state.choice == 1}  onClick={() => this.updateContent(1)}>Edit Profile</Nav.Link>\r\n                <Nav.Link eventKey=\"link-2\" active={this.state.choice == 2} onClick={() => this.updateContent(2)}>Past Appointments</Nav.Link>\r\n              </Nav>\r\n            </div>\r\n            {/* <!-- END MENU --> */}\r\n\r\n          </div>\r\n        </Col>\r\n\r\n        <Col xs=\"11\" md=\"9\">\r\n        <div className=\"profile-content\">\r\n            <RenderProfileContent/>\r\n          </div>\r\n        </Col>\r\n          \r\n      </Row>\r\n      }\r\n    }\r\n    return (\r\n      <Container fluid>\r\n        {/* <Row className=\"justify-content-center\">\r\n          <Col>\r\n            <h1>{this.state.worker.first_name}</h1>\r\n            <p>{this.state.worker.last_name}</p>\r\n            <ul>\r\n                {this.state.worker.services.map((service, index) => (\r\n                  <li key={\"cat-\" + index}>{this.state.serviceMapping[service]}</li>\r\n                ))}\r\n              </ul>\r\n          </Col>\r\n        </Row> */}\r\n        <DisplayWithLoading/>\r\n        \r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WorkerDisplay;","import React from 'react';\r\nimport '../../App.css';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport { FaDollarSign, FaHandshake, FaHourglassHalf, FaPen } from 'react-icons/fa';\r\nimport { Formik } from 'formik';\r\nimport Select from 'react-select';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  addAlert\r\n} from '../../reduxFolder/actions/alert'\r\nimport store from '../../reduxFolder/store';\r\n// import { uploadHandler } from '../s3';\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nclass AddServiceForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '', // assuming this is a unique value for file upload\r\n      cost: '',\r\n      duration: '',\r\n      description: '',\r\n      workers: [],\r\n      category: [],\r\n      store_id: '',\r\n      categoryOptions: [\r\n        { value: 'nails', label: 'Nails' },\r\n        { value: 'hair', label: 'Hair' }\r\n      ],\r\n      workerOptions: [],\r\n      selectedOption: null,\r\n      selectedFiles: null\r\n    };\r\n\r\n    // Schema for yup\r\n    this.yupValidationSchema = Yup.object().shape({\r\n      name: Yup.string()\r\n      .min(2, \"Name must have at least 2 characters\")\r\n      .max(100, \"Name can't be longer than 100 characters\")\r\n      .required(\"Name is required\"),\r\n      description: Yup.string()\r\n      .min(20, \"Description must have at least 20 characters\")\r\n      .required(\"Description is required\"), // will make it required soon,\r\n      cost: Yup.number()\r\n      .positive(\"Cost must be positive\")\r\n      // .integer()\r\n      .required(\"Cost is required\"),\r\n      duration: Yup.number()\r\n      .positive(\"Duration must be positive\")\r\n      .integer(\"Duration must be an integer\")\r\n      .required(\"Duration is required\"),\r\n      workers: Yup.array()\r\n      .required(\"Worker is required\")\r\n      .nullable(),\r\n      category: Yup.array()\r\n      .required(\"Category is required\")\r\n      .nullable()\r\n      // pictures: Yup.array()\r\n      // .required(\"Picture is required\")\r\n      // .nullable()\r\n    });\r\n\r\n    this.triggerServiceDisplay = this.triggerServiceDisplay.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // need to get store category, fetch?\r\n    fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/workers\" , {\r\n      method: \"GET\",\r\n      headers: {\r\n          'Content-type': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    .then(function(response){\r\n      if(response.status!==200){\r\n        // throw an error alert\r\n        store.dispatch(addAlert(response))\r\n      }\r\n      else{\r\n        return response.json();\r\n      }\r\n    })\r\n    .then(data => {\r\n      if(data){\r\n        let convertedWorkers = data.map((worker) => ({ value: worker.id, label: worker.first_name + \" \" + worker.last_name }));\r\n        this.setState({\r\n          workerOptions: convertedWorkers\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  // redirect to the worker display page\r\n  componentDidUpdate(prevProps, prevState)  {\r\n    if (prevProps.service !== this.props.service) {\r\n      this.props.history.push({\r\n        pathname: '/stores/' + this.props.service.store_id + '/services/' + this.props.service.id\r\n      })\r\n    }\r\n  }\r\n\r\n  // redirect to the worker display page and pass the new worker data\r\n  triggerServiceDisplay(service) {\r\n    this.props.history.push({\r\n      pathname: '/stores/' + service.store_id + '/services/' + service.id,\r\n      state: {\r\n        service: service\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  fileChangedHandler = event => {\r\n    this.setState({ selectedFiles: event.target.files })\r\n  }\r\n    \r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"justify-content-center\">\r\n          <Col xs={8} sm={7} md={6} lg={5}>\r\n            <Formik\r\n              enableReinitialize\r\n              initialValues={{\r\n                name: '',\r\n                cost: '',\r\n                duration: '',\r\n                description: '',\r\n                pictures: [],\r\n                workers: [],\r\n                category: [],\r\n                store_id: this.props.match.params.store_id\r\n              }}\r\n              validationSchema={this.yupValidationSchema}\r\n              onSubmit={async (values, {setSubmitting }) => {\r\n                let store_id = this.props.match.params.store_id\r\n                let triggerServiceDisplay = this.triggerServiceDisplay\r\n\r\n                values.category = values.category.map(function(val){ \r\n                  return val.label; \r\n                })\r\n\r\n                values.workers = values.workers.map(function(val){ \r\n                  return val.value; \r\n                })\r\n\r\n                // upload to s3 from client to avoid burdening back end\r\n                // let prefix = 'stores/' + this.props.match.params.store_id + '/services/' + values.name + '/'\r\n                // await uploadHandler(prefix, this.state.selectedFiles)\r\n\r\n                fetch(fetchDomain + '/stores/addService/' + store_id, {\r\n                  method: \"POST\",\r\n                  headers: {\r\n                    'Content-type': 'application/json'\r\n                  },\r\n                  credentials: 'include',\r\n                  body: JSON.stringify(values)\r\n                })\r\n                .then(function(response){\r\n                  if(response.status!==200){\r\n                    store.dispatch(addAlert(response))\r\n                  }\r\n                  else{\r\n                    return response.json();\r\n                  }\r\n                })\r\n                .then(function(data){\r\n                  // redirect to home page signed in\r\n                  if(data){\r\n                    triggerServiceDisplay(data)\r\n                  }\r\n                })\r\n\r\n                setSubmitting(false)\r\n              }}\r\n            >\r\n            {( {values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                setFieldValue}) => (\r\n              <Form className=\"formBody rounded\">\r\n                <h3>Add Service</h3>\r\n\r\n                <Form.Group controlId=\"formService\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaHandshake/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control type=\"text\" \r\n                      value={values.name} \r\n                      placeholder=\"Name of Service\" \r\n                      name=\"name\" \r\n                      onChange={handleChange} \r\n                      onBlur={handleBlur}\r\n                      className={touched.name && errors.name ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.name && errors.name ? (\r\n                    <div className=\"error-message\">{errors.name}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formCost\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaDollarSign/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control type=\"text\" \r\n                    value={values.cost}\r\n                    placeholder=\"Cost\" \r\n                    name=\"cost\" \r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={touched.cost && errors.cost ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.cost && errors.cost ? (\r\n                    <div className=\"error-message\">{errors.cost}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formDuration\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaHourglassHalf/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control \r\n                      type=\"text\"\r\n                      value={values.duration}\r\n                      placeholder=\"Duration (in min)\" \r\n                      name=\"duration\" \r\n                      onChange={handleChange} \r\n                      onBlur={handleBlur}\r\n                      className={touched.duration && errors.duration ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.duration && errors.duration ? (\r\n                    <div className=\"error-message\">{errors.duration}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formDescription\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <FaPen/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control \r\n                      type=\"textarea\"\r\n                      rows={3}\r\n                      value={values.description}\r\n                      placeholder=\"Description\" \r\n                      name=\"description\" \r\n                      onChange={handleChange} \r\n                      onBlur={handleBlur}\r\n                      className={touched.description && errors.description ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.description && errors.description ? (\r\n                    <div className=\"error-message\">{errors.description}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formWorkers\">\r\n                  <Select\r\n                    value={values.workers}\r\n                    onChange={option => setFieldValue(\"workers\", option)}\r\n                    name=\"workers\"\r\n                    options={this.state.workerOptions}\r\n                    isMulti={true}\r\n                    placeholder={\"Assigned Workers\"}\r\n                    className={touched.workers && errors.workers ? \"error\" : null}\r\n                  />\r\n                  {touched.workers && errors.workers ? (\r\n                    <div className=\"error-message\">{errors.workers}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formCategory\">\r\n                  <Select\r\n                    value={values.category}\r\n                    onChange={option => setFieldValue(\"category\", option)}\r\n                    name=\"category\"\r\n                    options={this.state.categoryOptions}\r\n                    isMulti={true}\r\n                    placeholder={\"Category\"}\r\n                    className={touched.category && errors.category ? \"error\" : null}\r\n                  />\r\n                  {touched.category && errors.category ? (\r\n                    <div className=\"error-message\">{errors.category}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formPictures\">\r\n                  <input \r\n                    onChange={this.fileChangedHandler}\r\n                    type=\"file\"\r\n                    multiple\r\n                    className={touched.pictures && errors.pictures ? \"error\" : null}\r\n                  />\r\n                  {touched.pictures && errors.pictures ? (\r\n                    <div className=\"error-message\">{errors.pictures}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Button onClick={handleSubmit}>Submit</Button>\r\n              </Form>\r\n            )}\r\n            </Formik>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => ({\r\n//   service: state.serviceReducer.service,\r\n//   workerOptions: state.workerReducer.workerOptions\r\n// })\r\n\r\n// const mapDispatchToProps = dispatch => bindActionCreators({\r\n//   addService: (service, store_id) => addService(service, store_id),\r\n//   getWorkerOptions: (store_id) => getWorkerOptions(store_id)\r\n// }, dispatch)\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(AddServiceForm);\r\nexport default AddServiceForm;","// this component is ready to be reusable for WorkerDashboard.js, if we decide that it can have the same\r\n// view as this one... just need to rename to StoreserviceDashboard.js\r\n\r\nimport React from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { Button } from 'react-bootstrap';\r\n// import {\r\n//   addAlert\r\n// } from '../../reduxFolder/actions'\r\n// import store from '../../reduxFolder/store';\r\nimport './Services.css';\r\n// import eyelash from '../../assets/eyelash4.png';\r\n// import wedding from '../../assets/wedding.jpg';\r\n// import gel from '../../assets/gel.jpg';\r\nimport { FaEdit } from 'react-icons/fa';\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nconst colors = ['#f0d1d9', '#f7e5e4', '#d6ced3'];\r\n\r\nclass ServiceDashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n      services: [\r\n        // {\r\n        //   id: '0',\r\n        //   name: 'Eyelash Remove',\r\n        //   category: 'Eyelashes',\r\n        //   cost: '25',\r\n        //   duration: '20',\r\n        //   description: 'Remove your eyelashes or something like that',\r\n        //   workers: ['Tiffany', 'Yuki'],\r\n        //   // pictures: [eyelash]\r\n        // },\r\n        // {\r\n        //   id: '1',\r\n        //   name: 'Gel Manicure',\r\n        //   category: 'Nails',\r\n        //   cost: '30',\r\n        //   duration: '60',\r\n        //   description: 'Its like a regular manicure, with gel!',\r\n        //   workers: ['Tiffany', 'Yuki'],\r\n        //   // pictures: [gel]\r\n        // },\r\n        // {\r\n        //   id: '2',\r\n        //   name: 'Wedding Makeup',\r\n        //   category: 'Makeup',\r\n        //   cost: '200',\r\n        //   duration: '120',\r\n        //   description: 'Full face makeup or something for your big day',\r\n        //   workers: ['Tiffany', 'Yuki'],\r\n        //   // pictures: [wedding]\r\n        // },\r\n      ]\r\n    }\r\n  }\r\n\r\n  triggerServiceEdit(servicePassed) {\r\n    this.props.history.push({\r\n      pathname: '/stores/' + this.props.match.params.store_id + \"/services/\" + servicePassed.id + '/edit',\r\n      state: {\r\n        service: servicePassed\r\n      }\r\n    })\r\n  }\r\n\r\n  triggerServiceDisplay(servicePassed) {\r\n    this.props.history.push({\r\n      pathname: '/stores/' + this.props.match.params.store_id + \"/services/\" + servicePassed.id,\r\n      state: {\r\n        service: servicePassed\r\n      }\r\n    })\r\n  }\r\n\r\n  triggerAddService() {\r\n    this.props.history.push({\r\n      pathname: '/stores/addService/' + this.props.match.params.store_id\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    if(this.props.location.state && this.props.location.state.services){\r\n      this.setState({\r\n        services: this.props.location.state.services\r\n      })\r\n    }\r\n    else{\r\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/services/\", {\r\n        method: \"GET\",\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      })\r\n      .then(function(response){\r\n        if(response.status!==200){\r\n          // throw an error alert\r\n          // store.dispatch(addAlert(response))\r\n        }\r\n        else{\r\n          return response.json();\r\n        }\r\n      })\r\n      .then(data => {\r\n        if(data){\r\n          this.setState({\r\n            services: data\r\n          })\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // need to add getPictures****\r\n\r\n\r\n  render() {\r\n    let services = null;\r\n\r\n    if(this.state.services.length > 0){\r\n      services = <Col>\r\n                    <p className=\"services_title\">My Services </p>\r\n                    <Button className=\"buttons\" onClick={() => this.triggerAddService()}>Add Service</Button>\r\n                    {/* <Button className=\"buttons\" onClick={() => this.triggerServiceEditForm()}>Edit Services</Button> */}\r\n                    <div className=\"service_container\">\r\n                      {this.state.services.map((service, indx) => (\r\n                        <Col key={\"service-\" + service.id}>\r\n\r\n                          <div className=\"service_card\">\r\n\r\n                          {/* {((service.id % 2) == 0) ? (\r\n                            <div className=\"service_img\">\r\n                              <img src={service.pictures[0]} style={{height: '500px', width:'100%'}}/>\r\n                            </div>\r\n                          ) : null} */}\r\n\r\n                            <div className=\"service_text\" style={{backgroundColor: `${colors[indx % 3]}`}}>\r\n                              <div className=\"fun_style\"> </div>\r\n                              <Col>\r\n                              <div className=\"title_container\" style={{backgroundColor: `${colors[indx % 3]}`}}>\r\n                                <span className=\"service_title\" onClick={() => this.triggerServiceDisplay(service)}> {service.name} </span>\r\n                                <FaEdit className=\"edit\" size={15} onClick={() => this.triggerServiceEdit(service)}/>\r\n                              </div>\r\n                              <Row>\r\n                                <div className=\"service_subtitle\">\r\n                                  <p> Category </p>\r\n                                  <p> Cost </p>\r\n                                  <p> Duration </p>\r\n                                  <p> Associated Workers </p>\r\n                                  <p> Description </p>\r\n                                </div>\r\n                                <div className=\"subtitle_values\" >\r\n                                  <p>  {service.category}  </p>\r\n                                  <p> $ {service.cost}  </p>\r\n                                  <p>  {service.duration} Minutes  </p>\r\n                                  <p> {service.workers} </p>\r\n                                  <p> {service.description} </p>\r\n                                </div>\r\n                              </Row>\r\n                            </Col>\r\n                            </div>\r\n\r\n                            {/* {((service.id % 2) != 0) ? (\r\n                              <div className=\"service_img\">\r\n                                <img src={service.pictures[0]} style={{height: '500px', width:'100%'}}/>\r\n                              </div>\r\n                            ) : null} */}\r\n\r\n                          </div>\r\n\r\n                        </Col>\r\n                      ))}\r\n                    </div>\r\n                  </Col>\r\n    }\r\n    else{\r\n      services = <div>\r\n                  <p className=\"noResults\">No Services!</p>\r\n                  <Button onClick={() => this.triggerAddService()}>Add Service</Button>\r\n                </div>\r\n    }\r\n    return (\r\n      <Container>\r\n        {services}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ServiceDashboard;\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n// import {\r\n//   addAlert\r\n// } from '../../reduxFolder/actions'\r\n// import store from '../../reduxFolder/store';\r\nimport LargeCarousel from '../LargeCarousel';\r\n// import { getPictures } from '../s3'\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nclass ServiceDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n      service: {\r\n        id: \"\",\r\n        name: \"\",\r\n        cost: \"\",\r\n        workers: [],\r\n        store_id: \"\",\r\n        category: \"\",\r\n        description: \"\"\r\n      },\r\n      pictures: []\r\n    }\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    // if (prevState.service !== this.state.service) {\r\n    //   let picturesFetched = await getPictures('stores/' + this.state.service.store_id + '/services/' + this.state.service.name + '/')\r\n    //   this.setState({\r\n    //     pictures: picturesFetched\r\n    //   })\r\n    // }\r\n\r\n    // can put this for now so we don't have to upload to s3\r\n    if(prevState.service !== this.state.service){\r\n      this.setState({\r\n        pictures: [\r\n          { \r\n            url: \"/hair.jpg\",\r\n            key: \"/hair.jpg\"\r\n          },\r\n          {\r\n            url: \"/nails.jpg\",\r\n            key: \"/nails.jpg\"\r\n          },\r\n          {\r\n            url: \"/salon.jpg\",\r\n            key: \"/salon.jpg\"\r\n          }\r\n        ]\r\n      })\r\n    }\r\n  }\r\n\r\n  async componentDidMount(): Promise<void> {\r\n    if(this.props.location.state && this.props.location.state.service){\r\n      \r\n      this.setState({\r\n        service: this.props.location.state.service\r\n      })\r\n    }\r\n    else{\r\n      const response = await fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/services/' + this.props.match.params.service_id, {\r\n        method: \"GET\",\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      })\r\n\r\n      const data = await response.json()\r\n      this.setState({\r\n        service: data\r\n      })\r\n    }\r\n\r\n    return Promise.resolve()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"justify-content-center\">\r\n          <Col>\r\n            <h1>{this.state.service.name}</h1>\r\n            <p>{this.state.service.description}</p>\r\n          </Col>\r\n\r\n          <Col xs={10} sm={9} md={8} lg={7}>\r\n            <LargeCarousel className=\"carousel\" pictures={this.state.pictures}/>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ServiceDisplay;","import React from 'react';\r\nimport '../../App.css';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport { FaDollarSign, FaHandshake, FaHourglassHalf, FaPen } from 'react-icons/fa';\r\nimport { Formik } from 'formik';\r\nimport Select from 'react-select';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  addAlert\r\n} from '../../reduxFolder/actions/alert'\r\nimport store from '../../reduxFolder/store';\r\nimport { getPictures, deleteHandler, uploadHandler } from '../s3'\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nclass ServiceEditForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      service: {\r\n        id: \"\",\r\n        name: \"\",\r\n        cost: \"\",\r\n        workers: [],\r\n        store_id: \"\",\r\n        category: \"\",\r\n        description: \"\"\r\n      },\r\n      categoryOptions: [\r\n        { value: 'nails', label: 'Nails' },\r\n        { value: 'hair', label: 'Hair' }\r\n      ],\r\n      convertedCategory: [],\r\n      workerOptions: [],\r\n      selectedOption: null,\r\n      pictures: [],\r\n      keys: [],\r\n      selectedFiles: []\r\n    };\r\n\r\n    // Schema for yup\r\n    this.yupValidationSchema = Yup.object().shape({\r\n      name: Yup.string()\r\n      .min(2, \"Name must have at least 2 characters\")\r\n      .max(100, \"Name can't be longer than 100 characters\")\r\n      .required(\"Name is required\"),\r\n      description: Yup.string()\r\n      .min(20, \"Description must have at least 20 characters\")\r\n      .required(\"Description is required\"), // will make it required soon,\r\n      cost: Yup.number()\r\n      .positive(\"Cost must be positive\")\r\n      // .integer()\r\n      .required(\"Cost is required\"),\r\n      duration: Yup.number()\r\n      .positive(\"Duration must be positive\")\r\n      .integer(\"Duration must be an integer\")\r\n      .required(\"Duration is required\"),\r\n      workers: Yup.array()\r\n      .required(\"Worker is required\")\r\n      .nullable(),\r\n      category: Yup.array()\r\n      .required(\"Category is required\")\r\n      .nullable(),\r\n      pictureCount: Yup.number()\r\n      .required(\"Pictures are required\")\r\n      .min(1, \"Must have at least one picture\")\r\n    });\r\n\r\n    this.triggerServiceDisplay = this.triggerServiceDisplay.bind(this);\r\n  }\r\n\r\n  // redirect to the service display page and pass the new store data\r\n  triggerServiceDisplay(returnedService) {\r\n    this.props.history.push({\r\n      pathname: '/stores/' + this.props.match.params.store_id + '/services/' + this.props.match.params.service_id,\r\n      state: {\r\n        service: returnedService\r\n      }\r\n    })\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.service !== this.state.service) {\r\n      let picturesFetched = await getPictures('stores/' + this.state.service.store_id + '/services/' + this.state.service.name + '/')\r\n      this.setState({\r\n        pictures: picturesFetched\r\n      })\r\n    }\r\n\r\n    // can put this for now so we don't have to upload to s3\r\n    // this.setState({\r\n      // pictures: [\r\n      //   { \r\n      //     url: \"/hair.jpg\",\r\n      //     key: \"/hair.jpg\"\r\n      //   },\r\n      //   {\r\n      //     url: \"/nails.jpg\",\r\n      //     key: \"/nails.jpg\"\r\n      //   },\r\n      //   {\r\n      //     url: \"/salon.jpg\",\r\n      //     key: \"/salon.jpg\"\r\n      //   }\r\n      // ]\r\n    // })\r\n  }\r\n\r\n  deleteFileChangeHandler = async (event, setFieldValue, newPictureLength) => {\r\n    if(event.target.checked){\r\n      await this.state.keys.push(event.target.id)\r\n      console.log(this.state.pictures.length, newPictureLength, this.state.keys.length)\r\n      setFieldValue('pictureCount', this.state.pictures.length + newPictureLength - this.state.keys.length)\r\n    }\r\n    else{\r\n      await this.state.keys.pop(event.target.id)\r\n      console.log(this.state.pictures.length, newPictureLength, this.state.keys.length)\r\n      setFieldValue('pictureCount', this.state.pictures.length + newPictureLength - this.state.keys.length)\r\n    }\r\n  }\r\n\r\n  fileChangedHandler = (event, setFieldValue, pictures) => {\r\n    this.setState({ selectedFiles: event.target.files })\r\n    setFieldValue('pictureCount', this.state.pictures.length + event.target.files.length - this.state.keys.length)\r\n    setFieldValue('pictures', event.target.files)\r\n  }\r\n\r\n  componentDidMount() {\r\n    if(this.props.location.state && this.props.location.state.service){\r\n      // console.log(this.props.location.state.service)\r\n      let convertedCategoryData = this.props.location.state.service.category.map((str) => ({ value: str.toLowerCase(), label: str }));\r\n      // console.log(convertedCategoryData)\r\n      this.setState({\r\n        service: this.props.location.state.service,\r\n        convertedCategory: convertedCategoryData\r\n      })\r\n    }\r\n    else{\r\n      // first we fetch the service itself\r\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/services/' + this.props.match.params.service_id, {\r\n        method: \"GET\",\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      })\r\n      .then(function(response){\r\n        if(response.status!==200){\r\n          // throw an error alert\r\n          store.dispatch(addAlert(response))\r\n        }\r\n        else{\r\n          return response.json();\r\n        }\r\n      })\r\n      .then(data => {\r\n        if(data){\r\n          let convertedCategoryData = data.category.map((str) => ({ value: str.toLowerCase(), label: str }));\r\n          this.setState({\r\n            service: data,\r\n            convertedCategory: convertedCategoryData\r\n          })\r\n        }\r\n      });\r\n\r\n\r\n\r\n      // // then we get the worker data to display for user\r\n      // // need to get store category, fetch?\r\n      // // refactor later to make it a get request\r\n      // // maybe have to refactor the whole table to keep track of names...?\r\n      // fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/workers\" , {\r\n      //   method: \"POST\",\r\n      //   headers: {\r\n      //       'Content-type': 'application/json'\r\n      //   },\r\n      //   credentials: 'include',\r\n      //   body: JSON.stringify(values)\r\n      // })\r\n      // .then(function(response){\r\n      //   console.log(response)\r\n      //   if(response.status!==200){\r\n      //     // should throw an error here\r\n      //     console.log(\"Error!\", response.status)\r\n      //     // throw new Error(response.status)\r\n      //     // window.location.href='/'\r\n      //   }\r\n      //   else{\r\n      //     return response.json();\r\n      //   }\r\n      // })\r\n      // .then(data => {\r\n      //   console.log(\"Limited store data from server:\", data)\r\n      //   let convertedWorkers = data.map((worker) => ({ value: worker.id, label: worker.first_name + \" \" + worker.last_name }));\r\n      //   this.setState({\r\n      //     workerOptions: convertedWorkers\r\n      //   })\r\n      // });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row className=\"justify-content-center\">\r\n          <Col xs={8} sm={7} md={6} lg={5}>\r\n          <Formik\r\n              enableReinitialize\r\n              initialValues={{\r\n                name: this.state.service.name,\r\n                cost: this.state.service.cost,\r\n                duration: this.state.service.duration,\r\n                description: this.state.service.description,\r\n                pictures: [],\r\n                pictureCount: this.state.pictures.length - this.state.keys.length,\r\n                workers: this.state.service.workers,\r\n                category: this.state.convertedCategory,\r\n                store_id: this.props.match.params.store_id\r\n              }}\r\n              validationSchema={this.yupValidationSchema}\r\n              onSubmit={async (values) => {\r\n                let store_id = this.props.match.params.store_id\r\n                let service_id = this.props.match.params.service_id\r\n                let triggerServiceDisplay = this.triggerServiceDisplay\r\n\r\n                values.category = values.category.map(function(val){ \r\n                  return val.label; \r\n                })\r\n\r\n                // remove files from s3\r\n                // await deleteHandler(this.state.keys)\r\n\r\n                // upload new images to s3 from client to avoid burdening back end\r\n                // let prefix = 'stores/' + this.props.match.params.store_id + '/services/' + values.name + '/'\r\n                // await uploadHandler(prefix, this.state.selectedFiles)\r\n\r\n                // need to figure out this...\r\n                // values.workers = values.workers.map(function(val){ \r\n                //   return val.value; \r\n                // })\r\n\r\n                fetch(fetchDomain + '/stores/' + store_id + \"/services/\" + service_id, {\r\n                  method: \"POST\",\r\n                  headers: {\r\n                    'Content-type': 'application/json'\r\n                  },\r\n                  credentials: 'include',\r\n                  body: JSON.stringify(values)\r\n                })\r\n                .then(function(response){\r\n                  if(response.status!==200){\r\n                    store.dispatch(addAlert(response))\r\n                  }\r\n                  else{\r\n                    return response.json();\r\n                  }\r\n                })\r\n                .then(function(data){\r\n                  // redirect to home page signed in\r\n                  if(data){\r\n                    triggerServiceDisplay()\r\n                  }\r\n                })\r\n              }}\r\n            >\r\n            {( {values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                setFieldValue}) => (\r\n              <Form className=\"formBody rounded\">\r\n                <h3>Edit Service</h3>\r\n\r\n                <Form.Group controlId=\"formService\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaHandshake/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control type=\"text\" \r\n                      value={values.name} \r\n                      placeholder=\"Name of Service\" \r\n                      name=\"name\" \r\n                      onChange={handleChange} \r\n                      onBlur={handleBlur}\r\n                      className={touched.name && errors.name ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.name && errors.name ? (\r\n                    <div className=\"error-message\">{errors.name}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formCost\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaDollarSign/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control type=\"text\" \r\n                    value={values.cost}\r\n                    placeholder=\"Cost\" \r\n                    name=\"cost\" \r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={touched.cost && errors.cost ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.cost && errors.cost ? (\r\n                    <div className=\"error-message\">{errors.cost}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formDuration\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                            <FaHourglassHalf/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control \r\n                      type=\"text\"\r\n                      value={values.duration}\r\n                      placeholder=\"Duration (in min)\" \r\n                      name=\"duration\" \r\n                      onChange={handleChange} \r\n                      onBlur={handleBlur}\r\n                      className={touched.duration && errors.duration ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.duration && errors.duration ? (\r\n                    <div className=\"error-message\">{errors.duration}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formDescription\">\r\n                  <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <FaPen/>\r\n                        </InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control \r\n                      type=\"textarea\"\r\n                      rows={3}\r\n                      value={values.description}\r\n                      placeholder=\"Description\" \r\n                      name=\"description\" \r\n                      onChange={handleChange} \r\n                      onBlur={handleBlur}\r\n                      className={touched.description && errors.description ? \"error\" : null}/>\r\n                  </InputGroup>\r\n                  {touched.description && errors.description ? (\r\n                    <div className=\"error-message\">{errors.description}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                {/* <Form.Group controlId=\"formWorkers\">\r\n                  <Select\r\n                    value={values.workers}\r\n                    onChange={option => setFieldValue(\"workers\", option)}\r\n                    name=\"workers\"\r\n                    options={this.state.workerOptions}\r\n                    isMulti={true}\r\n                    placeholder={\"Assigned Workers\"}\r\n                    className={touched.workers && errors.workers ? \"error\" : null}\r\n                  />\r\n                  {touched.workers && errors.workers ? (\r\n                    <div className=\"error-message\">{errors.workers}</div>\r\n                  ): null}\r\n                </Form.Group> */}\r\n\r\n                <Form.Group controlId=\"formCategory\">\r\n                  <Select\r\n                    value={values.category}\r\n                    onChange={option => setFieldValue(\"category\", option)}\r\n                    name=\"category\"\r\n                    options={this.state.categoryOptions}\r\n                    isMulti={true}\r\n                    placeholder={\"Category\"}\r\n                    className={touched.category && errors.category ? \"error\" : null}\r\n                  />\r\n                  {touched.category && errors.category ? (\r\n                    <div className=\"error-message\">{errors.category}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"pictureCount\">\r\n                  <Form.Label>Delete Images</Form.Label>\r\n                  {this.state.pictures.map((picture, index) => (\r\n                    <div key={\"pic-\" + index}>\r\n                      <img className=\"img-fluid\" src={picture.url} alt={\"Slide \" + index} />\r\n                      <Form.Check\r\n                        // style={{marginLeft: 30}}\r\n                        id={picture.key}\r\n                        label={picture.key.split('/').slice(-1)[0]}\r\n                        onChange={event => this.deleteFileChangeHandler(event, setFieldValue, values.pictures.length)}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"pictures\">\r\n                  <Form.Label>Add Images</Form.Label>\r\n                  <br/>\r\n                  <input \r\n                    onChange={event => this.fileChangedHandler(event, setFieldValue, values.pictures)}\r\n                    type=\"file\"\r\n                    multiple\r\n                    className={touched.pictures && errors.pictures ? \"error\" : null}\r\n                  />\r\n                  {touched.pictureCount && errors.pictureCount ? (\r\n                    <div className=\"error-message\">{errors.pictureCount}</div>\r\n                  ): null}\r\n                </Form.Group>\r\n\r\n                <Button onClick={handleSubmit}>Submit</Button>\r\n              </Form>\r\n            )}\r\n            </Formik>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ServiceEditForm;\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { Button, Card, ListGroup } from 'react-bootstrap';\r\nimport Cookies from 'js-cookie';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  addAlert\r\n} from '../../reduxFolder/actions/alert'\r\nimport store from '../../reduxFolder/store';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport { css } from '@emotion/core'\r\nimport GridLoader from 'react-spinners/GridLoader'\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nclass AppointmentDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      appointment: [],\r\n      start_time: 0,\r\n      user_id: 0,\r\n      end_time: 0,\r\n      store_name: '',\r\n      cost: 0,\r\n      service_names: [],\r\n      workers: [],\r\n      loading: true\r\n    }\r\n  }\r\n\r\n  deleteAppointment = () => {\r\n    fetch(fetchDomain + '/appointments/delete/' + this.props.match.params.group_id, {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n      .then(function (response) {\r\n        if (response.status !== 200) {\r\n          store.dispatch(addAlert(response))\r\n        }\r\n        else {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(data => {\r\n        store.dispatch(addAlert('Deleted Appointment'))\r\n        this.props.history.push({\r\n          pathname: '/'\r\n        })\r\n      });\r\n  }\r\n\r\n  triggerAppointmentCancel = () => {\r\n    confirmAlert({\r\n      title: 'Are you sure?',\r\n      message: 'You will be charged a cancellation fee by this store.',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => this.deleteAppointment()\r\n        },\r\n        {\r\n          label: 'No'\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  convertMinsToHrsMins(mins) {\r\n    let h = Math.floor(mins / 60);\r\n    let m = mins % 60;\r\n    let am = false\r\n    if (h == 24) {\r\n      am = true\r\n      h -= 12\r\n    }\r\n    else if (h < 12) {\r\n      am = true\r\n    } else if (h != 12) {\r\n      h -= 12\r\n    }\r\n    h = h < 10 ? '0' + h : h;\r\n    if (h == 0) {\r\n      h = '12'\r\n    }\r\n    m = m < 10 ? '0' + m : m;\r\n    if (am) {\r\n      return `${h}:${m}am`;\r\n    } else {\r\n      return `${h}:${m}pm`;\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Refactor to optimize if we were passed the appointment data from calling component\r\n    // if (this.props.location && this.props.location.state && this.props.location.state.appointment) {\r\n    //   this.setState({\r\n    //     appointment: this.props.location.state.appointment,\r\n    //     user_id: this.props.location.state.user_id,\r\n    //     start_time: this.props.location.state.start_time,\r\n    //     end_time: this.props.location.state.end_time,\r\n    //     store_name: this.props.location.state.store_name,\r\n    //     cost: this.props.location.state.cost,\r\n    //     workers: this.props.location.state.workers,\r\n    //     loading: false\r\n    //   })\r\n    // }\r\n    // else {\r\n      // retrieve the appointment data from the database\r\n      fetch(fetchDomain + '/appointments/display/' + this.props.match.params.group_id, {\r\n        method: \"GET\",\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      })\r\n        .then(function (response) {\r\n          if (response.status !== 200) {\r\n            // throw an error alert\r\n            store.dispatch(addAlert(response))\r\n          }\r\n          else {\r\n            return response.json();\r\n          }\r\n        })\r\n        .then(data => {\r\n          if (data) {\r\n            this.setState({\r\n              appointment: data.appointment,\r\n              user_id: data.user_id,\r\n              start_time: data.start_time,\r\n              end_time: data.end_time,\r\n              store_name: data.store_name,\r\n              cost: data.cost,\r\n              service_names: data.service_names,\r\n              workers: data.workers,\r\n              loading: false\r\n            })\r\n          }\r\n        });\r\n    // }\r\n  }\r\n\r\n  render() {\r\n    const DisplayWithLoading = (props) => {\r\n      if (this.state.loading) {\r\n        return <Row className=\"vertical-center\">\r\n          <Col>\r\n            <GridLoader\r\n              css={override}\r\n              size={20}\r\n              color={\"#2196f3\"}\r\n              loading={this.state.isLoading}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      } else {\r\n        let cancelButton;\r\n        if (Cookies.get('user') && this.state.user_id == JSON.parse(Cookies.get('user').substring(2)).id) {\r\n          cancelButton = <Button variant=\"danger\" className=\"float-left\" onClick={() => this.triggerAppointmentCancel()}>Cancel Appointment</Button>\r\n        }\r\n        return <Row className=\"justify-content-md-center\">\r\n          <Col lg={5}>\r\n            <Card className=\"mt-5\">\r\n              <Card.Header as=\"h5\">Your Appointment at: {this.state.store_name}</Card.Header>\r\n              <Card.Body>\r\n                <Card.Text as=\"div\">\r\n                  <ListGroup as=\"div\" variant=\"flush\">\r\n                    <ListGroup.Item>Appointment Start Time: {this.convertMinsToHrsMins(this.state.start_time)}</ListGroup.Item>\r\n                    <ListGroup.Item>Appointment End Time: {this.convertMinsToHrsMins(this.state.end_time)}</ListGroup.Item>\r\n                    <ListGroup.Item>Services: {this.state.service_names.toString()}</ListGroup.Item>\r\n                    <ListGroup.Item>Total Cost: {this.state.cost}</ListGroup.Item>\r\n                    <ListGroup.Item>Scheduled Technicians: {this.state.workers.toString()}</ListGroup.Item>\r\n                  </ListGroup>\r\n                </Card.Text>\r\n                {cancelButton}\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Container fluid>\r\n        <DisplayWithLoading />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(AppointmentDisplay);","import React from 'react';\r\nimport store from '../../reduxFolder/store';\r\nimport {\r\n  removeAlert\r\n} from '../../reduxFolder/actions/alert'\r\nimport { connect } from 'react-redux';\r\nimport './Flash.css';\r\n\r\nclass Alert extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.removeAlert = this.removeAlert.bind(this);\r\n    this.alertClass = this.alertClass.bind(this);\r\n  }\r\n  \r\n  alertClass (status) {\r\n    let classes = {\r\n      400: 'alert-danger',\r\n      300: 'alert-warning',\r\n      500: 'alert-info',\r\n      200: 'alert-success'\r\n    };\r\n    return classes[status] || classes.success;\r\n  }\r\n\r\n  removeAlert() {\r\n    store.dispatch(removeAlert())\r\n  }\r\n\r\n  render() {\r\n    let alert = this.props.alert;\r\n    let alertTag = null\r\n    if(!(Object.keys(alert).length === 0 && alert.constructor === Object) && !(alert.status === \"\")){\r\n      let alertClassName = `alert ${ this.alertClass(alert.status) } mb-0`;\r\n      alertTag = <div className={ alertClassName }>\r\n                <button className='close'\r\n                  onClick={ this.removeAlert }>\r\n                  &times;\r\n                </button>\r\n                { alert.statusText }\r\n              </div>\r\n    }\r\n \r\n    return(\r\n      <div className=\"alert-fixed\">\r\n        {alertTag}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  alert: state.alertReducer.alert,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { Button, Card, ListGroup, Image } from 'react-bootstrap';\r\nimport Cookies from 'js-cookie';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  addAlert\r\n} from '../../reduxFolder/actions/alert'\r\nimport store from '../../reduxFolder/store';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nimport { css } from '@emotion/core'\r\nimport GridLoader from 'react-spinners/GridLoader'\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nclass AppointmentDisplay extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      appointment: [],\r\n      start_time: 0,\r\n      user_id: 0,\r\n      end_time: 0,\r\n      store_name_mappings: [],\r\n      store_ids: [],\r\n      cost: 0,\r\n      service_name_mappings: [],\r\n      grouped_service_ids: [],\r\n      workers: [],\r\n      loading: true\r\n    }\r\n  }\r\n\r\n  deleteAppointment = () => {\r\n    fetch(fetchDomain + '/appointments/delete/' + this.props.match.params.group_id, {\r\n      method: \"GET\",\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n      .then(function (response) {\r\n        if (response.status !== 200) {\r\n          store.dispatch(addAlert(response))\r\n        }\r\n        else {\r\n          return response.json()\r\n        }\r\n      })\r\n      .then(data => {\r\n        store.dispatch(addAlert('Deleted Appointment'))\r\n        this.props.history.push({\r\n          pathname: '/'\r\n        })\r\n      });\r\n  }\r\n\r\n  triggerAppointmentCancel = () => {\r\n    confirmAlert({\r\n      title: 'Are you sure?',\r\n      message: 'You will be charged a cancellation fee by this store.',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => this.deleteAppointment()\r\n        },\r\n        {\r\n          label: 'No'\r\n        }\r\n      ]\r\n    });\r\n  }\r\n\r\n  triggerAppointmentDisplay = (group_id) => {\r\n    this.props.history.push({\r\n      pathname: '/appointments/' + group_id\r\n    })\r\n  }\r\n\r\n  convertMinsToHrsMins(mins) {\r\n    let h = Math.floor(mins / 60);\r\n    let m = mins % 60;\r\n    let am = false\r\n    if (h == 24) {\r\n      am = true\r\n      h -= 12\r\n    }\r\n    else if (h < 12) {\r\n      am = true\r\n    } else if (h != 12) {\r\n      h -= 12\r\n    }\r\n    h = h < 10 ? '0' + h : h;\r\n    if (h == 0) {\r\n      h = '12'\r\n    }\r\n    m = m < 10 ? '0' + m : m;\r\n    if (am) {\r\n      return `${h}:${m}am`;\r\n    } else {\r\n      return `${h}:${m}pm`;\r\n    }\r\n\r\n  }\r\n\r\n  formatDate(date) {\r\n    var d = new Date(date),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n\r\n    if (month.length < 2) \r\n        month = '0' + month;\r\n    if (day.length < 2) \r\n        day = '0' + day;\r\n\r\n    return [month, day, year].join('-');\r\n}\r\n\r\n  componentDidMount() {\r\n    // Refactor to optimize if we were passed the appointment data from calling component\r\n    // if (this.props.location && this.props.location.state && this.props.location.state.appointment) {\r\n    //   this.setState({\r\n    //     appointment: this.props.location.state.appointment,\r\n    //     user_id: this.props.location.state.user_id,\r\n    //     start_time: this.props.location.state.start_time,\r\n    //     end_time: this.props.location.state.end_time,\r\n    //     store_name: this.props.location.state.store_name,\r\n    //     cost: this.props.location.state.cost,\r\n    //     workers: this.props.location.state.workers,\r\n    //     loading: false\r\n    //   })\r\n    // }\r\n    // else {\r\n      // retrieve the appointment data from the database\r\n      fetch(fetchDomain + '/appointments/' + JSON.parse(Cookies.get('user').substring(2)).id, {\r\n        method: \"GET\",\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      })\r\n        .then(function (response) {\r\n          if (response.status !== 200) {\r\n            // throw an error alert\r\n            store.dispatch(addAlert(response))\r\n          }\r\n          else {\r\n            return response.json();\r\n          }\r\n        })\r\n        .then(data => {\r\n          if (data) {\r\n            if(Object.keys(data).length === 0 && data.constructor === Object) {\r\n              this.setState({\r\n                loading: false,\r\n                hasAppointments: false\r\n              })\r\n            } else {\r\n              this.setState({\r\n                store_ids: data.store_ids,\r\n                store_name_mappings: data.store_name_mappings,\r\n                dates: data.dates,\r\n                start_times: data.start_times, \r\n                end_times: data.end_times,\r\n                costs: data.costs,\r\n                group_ids: data.group_ids,\r\n                service_name_mappings: data.service_name_mappings,\r\n                grouped_service_ids: data.grouped_service_ids,\r\n                loading: false,\r\n                hasAppointments: true\r\n              })\r\n            }\r\n            \r\n          }\r\n        });\r\n    // }\r\n  }\r\n\r\n  render() {\r\n    //remove these props args if not needed\r\n    const ShowServices = (props) => {\r\n      let listGroupItems = [];\r\n      for (let i = 0; i < this.state.grouped_service_ids[props.index].length; i ++) {\r\n        listGroupItems.push(<ListGroup.Item key={this.state.grouped_service_ids[props.index][i]}>{this.state.service_name_mappings.find((element) => element.id == this.state.grouped_service_ids[props.index][i]).name}</ListGroup.Item>);\r\n      }\r\n      return listGroupItems;\r\n    }\r\n\r\n    const AppointmentList = (props) => {\r\n      let cards = [];\r\n      for (let i = 0; i < this.state.group_ids.length; i ++) {\r\n        cards.push(<Card style={{cursor: 'pointer'}} key={this.state.group_ids[i]}className=\"my-5\" onClick={() => this.triggerAppointmentDisplay(this.state.group_ids[i])}>\r\n          <Card.Header as=\"h4\">{this.state.store_name_mappings.find((element) => element.id == this.state.store_ids[i]).name} on {this.formatDate(this.state.dates[i])}</Card.Header>\r\n          <Card.Body>\r\n            <Card.Text as=\"div\">\r\n              <Row>\r\n                <Col>\r\n                  {this.convertMinsToHrsMins(this.state.start_times[i])} - {this.convertMinsToHrsMins(this.state.end_times[i])} ${this.state.costs[i]}\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <h5>Services Booked for Today</h5>\r\n                  <ListGroup as=\"div\" variant=\"flush\">\r\n                    <ShowServices index={i}/>\r\n                  </ListGroup>\r\n                </Col>\r\n              </Row>\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>);\r\n      }\r\n      return cards;\r\n    }\r\n\r\n    const DisplayWithLoading = (props) => {\r\n      if (this.state.loading) {\r\n        return <Row className=\"vertical-center\">\r\n          <Col>\r\n            <GridLoader\r\n              css={override}\r\n              size={20}\r\n              color={\"#2196f3\"}\r\n              loading={this.state.isLoading}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      } else if (this.state.hasAppointments) {\r\n        let cancelButton;\r\n        if (Cookies.get('user') && this.state.user_id == JSON.parse(Cookies.get('user').substring(2)).id) {\r\n          cancelButton = <Button variant=\"danger\" className=\"float-left\" onClick={() => this.triggerAppointmentCancel()}>Cancel Appointment</Button>\r\n        }\r\n        return <Row className=\"justify-content-md-center\">\r\n          <Col lg={5}>\r\n            <AppointmentList/>\r\n          </Col>\r\n        </Row>\r\n      } else {\r\n        return <Card>\r\n          <Card.Header as=\"h4\">My Appointments</Card.Header>\r\n            <Card.Body>\r\n              <Card.Text as=\"div\">\r\n                <h5>Whoops, looks like you need to book an appointment with us first. </h5>\r\n                <Image src=\"https://s3.amazonaws.com/thumbnails.thecrimson.com/photos/2018/11/15/001152_1334195.jpg.1500x998_q95_crop-smart_upscale.jpg\"/>\r\n              </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Container fluid>\r\n        <DisplayWithLoading />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(AppointmentDisplay);","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport LoginForm from './components/User/LoginForm';\r\nimport SignupForm from './components/User/SignupForm';\r\nimport MainNavbar from './components/Navbar/MainNavbar';\r\nimport Homepage from './components/Home/Homepage';\r\nimport StaticPage from './components/StaticPages/StaticPage';\r\nimport SearchDisplay from './components/Search/SearchDisplay';\r\nimport ReservationPage from './components/Reservation/ReservationPage'\r\nimport './App.css';\r\nimport StoreSignupForm from './components/Store/StoreSignupForm';\r\nimport Calendar from './components/Calendar/CalendarPage';\r\nimport StoreDisplay from './components/Store/StoreDisplay';\r\nimport StoreEditForm from './components/Store/StoreEditForm';\r\nimport redirectWithoutAuth from './components/redirectWithoutAuth';\r\nimport redirectWithAuth from './components/redirectWithAuth';\r\nimport EditProfileForm from './components/User/EditProfileForm';\r\nimport Cookies from 'js-cookie';\r\nimport Profile from './components/User/Profile';\r\nimport UserStoresDashboard from './components/Store/UserStoresDashboard';\r\nimport AddWorkerForm from './components/Worker/AddWorkerForm';\r\nimport WorkerDashboard from './components/Worker/WorkerDashboard';\r\nimport WorkerDisplay from './components/Worker/WorkerDisplay';\r\nimport WorkerEditForm from './components/Worker/WorkerEditForm';\r\nimport AddServiceForm from './components/Service/AddServiceForm';\r\nimport ServiceDashboard from './components/Service/ServiceDashboard';\r\nimport ServiceDisplay from './components/Service/ServiceDisplay';\r\nimport ServiceEditForm from './components/Service/ServiceEditForm';\r\nimport AppointmentDisplay from './components/Appointments/AppointmentDisplay';\r\nimport Alert from './components/Flash/Alert';\r\nimport {\r\n  userLogout\r\n} from './reduxFolder/actions/user'\r\nimport store from './reduxFolder/store';\r\nimport UserAppointments from './components/Appointments/UserAppointments';\r\n\r\nfunction App() {\r\n  function handleLogout() {\r\n    Cookies.remove(\"token\");\r\n    Cookies.remove(\"user\"); // don't think we need any cookies anymore now that redux persists to local storage for us...\r\n    store.dispatch(userLogout())\r\n    window.location.href='/'\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <MainNavbar/>\r\n        <Alert/>\r\n        <div className=\"App-body\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Homepage} />\r\n            <Route exact path=\"/help\" component={StaticPage} />\r\n            <Route exact path=\"/about\" component={StaticPage} />\r\n            <Route path=\"/search\" component={SearchDisplay} />\r\n\r\n            <Route exact path=\"/login\" component={redirectWithAuth(LoginForm)} />\r\n            <Route exact path=\"/logout\" component={handleLogout}/>\r\n            <Route exact path=\"/signup\" component={SignupForm} />\r\n            <Route path=\"/users/edit/:user_id\" component={redirectWithoutAuth(EditProfileForm)}/>\r\n            <Route path=\"/users/:user_id/stores\" component={redirectWithoutAuth(UserStoresDashboard)}/>\r\n            <Route path=\"/users/:user_id/appointments\" component={redirectWithoutAuth(UserAppointments)}/>\r\n            <Route path=\"/users/:user_id\" component={redirectWithoutAuth(Profile)}/>\r\n\r\n            <Route exact path=\"/storeCalendar\" component={redirectWithoutAuth(Calendar)} />\r\n            <Route path=\"/book/:store_id\" component={ReservationPage} />\r\n            <Route exact path=\"/store/signup\" component={redirectWithoutAuth(StoreSignupForm)} />\r\n            <Route path=\"/stores/edit/:store_id\" component={redirectWithoutAuth(StoreEditForm)}/>\r\n\r\n            <Route path=\"/stores/addService/:store_id\" component={redirectWithoutAuth(AddServiceForm)}/>\r\n            <Route path=\"/stores/:store_id/services/:service_id/edit\" component={redirectWithoutAuth(ServiceEditForm)}/>\r\n            <Route path=\"/stores/:store_id/services/:service_id\" component={redirectWithoutAuth(ServiceDisplay)}/>\r\n            <Route path=\"/stores/:store_id/services\" component={redirectWithoutAuth(ServiceDashboard)}/>\r\n\r\n            <Route path=\"/stores/addWorker/:store_id\" component={redirectWithoutAuth(AddWorkerForm)}/>\r\n            <Route path=\"/stores/:store_id/workers/:worker_id/edit\" component={redirectWithoutAuth(WorkerEditForm)}/>\r\n            <Route path=\"/stores/:store_id/workers/:worker_id\" component={redirectWithoutAuth(WorkerDisplay)}/>\r\n            <Route path=\"/stores/:store_id/workers\" component={redirectWithoutAuth(WorkerDashboard)}/>\r\n            <Route path=\"/stores/:store_id\" component={StoreDisplay}/>\r\n\r\n            <Route path=\"/appointments/:group_id\" component={redirectWithoutAuth(AppointmentDisplay)}/>\r\n\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\r\n\r\nexport default function redirectWithAuth(ComponentToProtect, addAlert) {\r\n  return class extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        loading: true,\r\n        redirect: false,\r\n      };\r\n    }\r\n    componentDidMount() {\r\n      fetch(fetchDomain + '/checkToken' , {\r\n        method: \"GET\",\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      }).then(res => {\r\n          if (res.status === 200) {\r\n            this.setState({ loading: false, redirect: true });\r\n          } else {\r\n            this.setState({ loading: false, redirect: false });\r\n          }\r\n        })\r\n    }\r\n    render() {\r\n      const { loading, redirect } = this.state;\r\n      if (loading) {\r\n        return null;\r\n      }\r\n      if (redirect) {\r\n        return <Redirect to=\"/\"/>;\r\n      }\r\n      else {\r\n        return <ComponentToProtect addAlertPassed={addAlert} {...this.props}/>;\r\n      }\r\n    }\r\n  }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux'\r\nimport store from './reduxFolder/store';\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <App/>\r\n</Provider>,\r\ndocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}