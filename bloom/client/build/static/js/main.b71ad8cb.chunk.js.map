{"version":3,"sources":["assets/abstract-painting.jpg","components/Search/helper.js","assets/barber.jpg","assets/facials.jpg","assets/hair.jpg","assets/lipstics2.jpg","assets/massage3.jpg","assets/nails3.jpg","assets/salon.jpg","assets/paint_line.png","assets/salon2.jpeg","assets/hair_salon.jpg","reduxFolder/actions/alert.js","reduxFolder/redux.js","components/User/LoginForm.js","reduxFolder/actions/user.js","components/User/SignupForm.js","components/User/Registration.js","components/Search/SearchBar.js","components/Navbar/MainNavbar.js","reduxFolder/reducers/user.js","reduxFolder/reducers/alert.js","reduxFolder/reducers/stores.js","reduxFolder/actions/stores.js","reduxFolder/reducers/index.js","reduxFolder/store.js","components/Search/AdvancedSearch.js","components/Home/Category.js","components/Home/Homepage.js","components/StaticPages/StaticPage.js","components/LargeCarousel.js","components/Search/SearchCard.js","components/Map/MapContainer.js","components/Search/SearchDisplayLoader.js","components/Search/SearchDisplayLoaderMobile.js","components/Search/SearchDisplay.js","components/Reservation/ServiceSelection.js","components/Reservation/DateSelection.js","components/Reservation/BookingPage.js","components/Reservation/RedirectToLogin.js","components/Reservation/ReservationPage.js","components/s3.js","components/Store/StoreSignupForm.js","components/Calendar/CalendarPage.js","components/Store/StoreDisplay.js","components/Store/StoreEditForm.js","components/redirectWithoutAuth.jsx","components/User/EditProfileForm.js","components/User/Profile.js","components/Store/UserStoresDashboardLoader.js","components/Store/UserStoresDashboard.js","components/Worker/AddWorkerForm.js","components/Worker/WorkerDashboard.js","components/Worker/WorkerEditForm.js","components/Worker/WorkerDisplay.js","components/Service/AddServiceForm.js","components/Service/ServiceDashboard.js","components/Service/ServiceDisplay.js","components/Service/ServiceEditForm.js","components/Appointments/AppointmentDisplay.js","components/Appointments/UserAppointments.js","App.js","components/redirectWithAuth.jsx","serviceWorker.js","index.js"],"names":["module","exports","queryString","query","qs","Object","entries","filter","pair","undefined","map","i","encodeURIComponent","join","getCategories","name","shorterVersion","longerVersion","getCategoriesAsPairs","value","label","addAlert","messagePassed","type","message","fetchDomain","process","successGoogle","response","console","log","accessToken","failureGoogle","error","successFacebook","failureFacebook","status","LoginForm","props","state","email","password","handleChange","bind","handleSubmit","event","this","setState","target","id","prevProps","prevState","user","appointments","history","push","pathname","store_id","currentStep","preventDefault","loginUser","Form","className","title","Group","style","marginTop","width","marginLeft","InputGroup","Prepend","Text","Control","placeholder","onChange","Col","xs","sm","md","lg","Button","variant","onClick","clientId","buttonText","onSuccess","onFailure","cookiePolicy","render","renderProps","backgroundColor","color","paddingRight","marginBottom","height","fontSize","size","appId","fields","xfbml","cssClass","icon","callback","toggleLogin","React","Component","connect","userReducer","dispatch","bindActionCreators","auth_token","fetch","headers","credentials","method","body","JSON","stringify","then","json","data","login","SignupForm","values","signUpUser","phoneRegExp","emailRegExp","yupValidationSchema","Yup","shape","first_name","min","max","required","last_name","phone","matches","password_confirmation","oneOf","initialValues","role","validationSchema","onSubmit","errors","touched","handleBlur","controlId","onBlur","signup","Registration","displayLogin","location","newValue","Container","fluid","Image","src","paint","alt","top","left","position","Row","helper","require","SearchBar","handleSelectChange","selectedCategory","center","lat","lng","categories","address","distance","autocomplete","handlePlaceSelect","nails","hair","spa","facials","barber","makeup","search","addressObject","getPlace","address_components","elem","long_name","geometry","google","window","maps","places","Autocomplete","document","getElementById","addListener","inline","autoComplete","Append","disabled","options","withRouter","MainNavbar","storeDisplay","Navbar","collapseOnSelect","expand","bg","fixed","to","fontFamily","Toggle","aria-controls","Collapse","Nav","marginRight","useLocation","keys","length","constructor","NavDropdown","Item","href","Divider","right","initialState","action","assign","new_user","alert","alertReducer","stores","storeReducer","new_stores","store","rootReducer","combineReducers","persistedState","serializedState","localStorage","getItem","parse","e","loadFromLocalStorage","createStore","reducers","applyMiddleware","thunk","subscribe","setItem","saveToLocalStorage","getState","AdvancedSearch","selected","redirect","category","onSelect","onRemove","selectedList","selectedItem","removedItem","parseInt","split","stateRep","Label","as","closeIcon","displayValue","avoidHighlightFirstOption","multiselectContainer","groupHeading","maxWidth","chips","background","inputField","searchBox","minWidth","borderRadius","border","Category","getStores","getCurrentLocation","navigator","geolocation","_displayLocation","latitude","longitude","geocoder","Geocoder","latlng","LatLng","geocodeAddress","geoSuccess","coords","geoError","code","TIMEOUT","PERMISSION_DENIED","POSITION_UNAVAILABLE","getCurrentPosition","geoCodeCallback","results","GeocoderStatus","OK","add","formatted_address","geocode","img","text","ScreenWidth","listen","children","useState","xys","setPosition","useEffect","setFromEvent","mounted","x","clientX","y","clientY","innerHeight","innerWidth","addEventListener","removeEventListener","useScreenWidth","ScreenResize","setWidth","handleResize","useResizeWidth","Homepage","Visible","transform","margin","isVisible","active","fontWeight","avgTypingDelay","startDelay","cursor","show","blink","element","Backspace","count","delay","lipstics","massage","goToStore","salon","StaticPage","LargeCarousel","Carousel","interval","pictures","picture","index","key","url","SearchCard","Card","Body","Title","onClickFunctionStore","description","onClickFunctionBook","MapContainer","onMarkerClick","marker","selectedPlace","activeMarker","showingInfoWindow","activeMarkerIndex","onClose","zoom","mapStyles","initialCenter","displayMarkers","visible","SearchDisplayLoader","speed","viewBox","foregroundColor","rx","ry","SearchDisplayMobileLoader","SearchDisplay","loading","ownUpdate","link","getResults","update","RenderStoreCards","xl","SearchDisplayLoaderMobile","nextProps","preState","ServiceSelection","currService","services","find","selectedServices","updateReservation","service","Check","custom","checked","cost","toFixed","block","override","css","DateSelection","handleDateChange","date","getMonth","startDate","parsedData","appointment","Date","currDate","selectedTime","handleSlotClick","schedule","updateAppointments","mins","h","Math","floor","m","am","SlotsAtSelectedTime","slots","schedules","currTime","foundSchedule","currSchedule","currDaySchedules","workersSchedules","day_of_the_week","getDay","scheduleStillWorks","currScheduleCurrTime","currScheduleCurrWorkerIndex","currScheduleServiceIndex","available","currScheduleCurrService","currScheduleCurrWorker","worker_id","start_time","end_time","duration","currWorkerAppointments","setHours","service_id","price","convertMinsToHrsMins","time","storeHours","close_time","overflow","minDate","popperModifiers","flip","behavior","items","open_time","isLoading","BookingPage","firstName","lastName","user_id","triggerAppointmentDisplay","returnedAppointment","appointmentGroupId","Cookies","get","substring","a","setFieldValue","RedirectToLogin","triggerSignInRedirect","ReservationPage","removal","total","selectedService","backStep","newStep","receivedAppointments","pluralize","val","word","plural","_pluralize","num","includes","Number","timeConvert","n","hours","rhours","minutes","rminutes","round","prefetchSchedules","Promise","all","match","params","allResponses","storeName","workers","response1","response2","that","noGutters","Header","servicesList","ListGroup","getPictures","prefixPassed","prefix","uploadHandler","selectedFiles","tempDate","getFullYear","getDate","getHours","getMinutes","getSeconds","fileName","fileType","deleteHandler","keysPassed","StoreSignupForm","day","indexOf","newStoreHours","querySelector","slice","fileChangedHandler","files","categoryError","pictureCount","triggerStoreDisplay","returnedStore","owner_id","updateRole","addStore","rows","multiple","today","isWeekEnd","DayScaleCell","restProps","classes","TimeTableCell","BasicLayout","appointmentData","onFieldChange","TextEditor","onValueChange","nextValue","messages","allDayLabel","repeatLabel","BooleanEditor","RecurrenceLayout","Appointment","Calendar","getAppointments","indx","endDate","worker_map","service_map","selectedAppointments","selectedWorkers","mainResourceName","resources","fieldName","allowMultiple","instances","currentDate","commitChanges","changeMainResource","onSelectWorker","onRemoveWorker","onSelectService","onRemoveService","onSearch","new_workers","new_services","service_instances","worker_instances","worker","includeWorker","includeService","newSelected","added","changed","deleted","startingAddedId","optionContainer","zIndex","Paper","defaultCurrentDate","onCommitChanges","startDayHour","endDayHour","cellDuration","dayScaleCellComponent","timeTableCellComponent","appointmentComponent","showCloseButton","showOpenButton","isRecurrence","basicLayoutComponent","recurrenceLayoutComponent","booleanEditorComponent","StoreDisplay","created_at","owners","clients","convertedCategory","str","toLowerCase","appendedStore","selectedOption","editButton","triggerStoreEdit","cat","triggerBook","StoreEditForm","updateNewHours","newHours","old_open_time","old_close_time","deleteFileChangeHandler","newPictureLength","pop","nullable","triggerStoreDisplayNoResp","autocompleteChange","picturesFetched","enableReinitialize","selectedValues","redirectWithoutAuth","ComponentToProtect","res","Error","catch","err","EditProfileForm","editProfile","failure","Profile","UserStoresDashboardLoader","UserStoresDashboard","redirectToWorkerForm","passedStore","newstore","appendedStores","triggerStoreShow","triggerShowCalendar","triggerShowWorkers","triggerShowServices","AddWorkerForm","old_start_time","old_end_time","newWorkerHours","workerHours","handleDayStatusChange","updateWeekIsWorking","weekIsWorking","triggerWorkerDisplay","returnedWorker","receivedWorkerHours","CreateStartTimesForDay","CreateEndTimesForDay","option","isMulti","WorkerDashboard","redirectToWorkerEditForm","redirectToWorkerDisplay","workerPassed","triggerWorkerEditForm","triggerAddWorker","WorkerEditForm","serviceMapping","0","1","noChange","WorkerDisplay","updateWorker","updateHours","dayHours","receivedServices","updateContent","selectedChoice","choice","daysOfWeek","convertedServices","ListWorkingHours","RenderProfileContent","rounded","defaultActiveKey","Link","eventKey","AddServiceForm","categoryOptions","workerOptions","positive","triggerServiceDisplay","convertedWorkers","setSubmitting","colors","ServiceDashboard","servicePassed","triggerAddService","triggerServiceEdit","ServiceDisplay","resolve","ServiceEditForm","returnedService","convertedCategoryData","AppointmentDisplay","deleteAppointment","group_id","triggerAppointmentCancel","confirmAlert","buttons","store_name","service_names","cancelButton","toString","store_name_mappings","store_ids","service_name_mappings","grouped_service_ids","d","month","year","hasAppointments","dates","start_times","end_times","costs","group_ids","ShowServices","listGroupItems","AppointmentList","cards","formatDate","App","exact","path","component","addAlertPassed","remove","UserAppointments","Boolean","hostname","ReactDOM","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b71ad8cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/abstract-painting.8e0472b0.jpg\";","// CITATION: https://stackoverflow.com/questions/37230555/get-with-query-string-with-fetch-in-react-native\nfunction queryString(query) {\n  // get array of key value pairs ([[k1, v1], [k2, v2]])\n  const qs = Object.entries(query)\n    // filter pairs with undefined value\n    .filter(pair => pair[1] !== undefined)\n    // encode keys and values, remove the value if it is null, but leave the key\n    .map(pair => pair.filter(i => i !== null).map(encodeURIComponent).join('='))\n    .join('&');\n\n  return qs && '?' + qs;\n}\n\n\nfunction getCategories() {\n  return [{ name: \"Nail Salon\" },{ name: \"Hair Salon\" },{ name: \"Facials\" },{ name: \"Barbershops\"},\n  {name: \"Spa & Wellness\"}, {name: \"Makeup\"}];\n}\n\nfunction getCategoriesAsPairs() {\n  return [{ value: 'Nails', label: \"Nail Salon\" },{ value: 'Hair', label: \"Hair Salon\" },\n  { value: \"Facials\", label: \"Facials\" },{ value: \"Barbershops\", label:\"Barbershops\"},\n  {value: \"Spa\", label: \"Spa & Wellness\" }, {value: \"Makeup\", label: \"Makeup\" }];\n}\n\nfunction shorterVersion(name) {\n  if(name == \"Spa & Wellness\") {\n    return \"Spa\"\n  }\n  else if(name == \"Barbershops\") {\n    return \"Barber\"\n  }\n  else if(name == \"Nail Salon\") {\n    return \"Nails\"\n  }\n  else if(name == \"Hair Salon\") {\n    return \"Hair\"\n  }\n  return name;\n}\n\nfunction longerVersion(name) {\n  if(name == \"Spa\") {\n    return \"Spa & Wellness\"\n  }\n  else if(name == \"Barber\") {\n    return \"Barbershops\"\n  }\n  else if(name == \"Nails\") {\n    return \"Nail Salon\"\n  }\n  else if(name == \"Hair\") {\n    return \"Hair Salon\"\n  }\n  return name;\n}\n\n exports.queryString = queryString;\n exports.getCategories = getCategories;\n exports.shorterVersion = shorterVersion;\n exports.longerVersion = longerVersion;\n exports.getCategoriesAsPairs = getCategoriesAsPairs;\n","module.exports = __webpack_public_path__ + \"static/media/barber.d2f9dfa8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/facials.ed0b2cb9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hair.d4215e0f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lipstics2.6d47408d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/massage3.55e106f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nails3.81962b22.jpg\";","module.exports = __webpack_public_path__ + \"static/media/salon.140a41f2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/paint_line.bb971069.png\";","module.exports = __webpack_public_path__ + \"static/media/salon2.5edf0e42.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/hair_salon.5e677ff9.jpg\";","export const ADD_ALERT = 'ADD_ALERT'\nexport const REMOVE_ALERT = 'REMOVE_ALERT'\n\nexport function addAlert(messagePassed) {\n  return {\n    type: ADD_ALERT,\n    message: messagePassed\n  }\n}\n\nexport function removeAlert() {\n  return { \n    type: REMOVE_ALERT\n  }\n}\n","import {userLoginSuccess, userLoginFailure, userSignupSuccess, userSignupFailure, editUserSuccess} from './actions/user';\n// import {addServiceSuccess} from './actions/service';\n// import {getWorkerOptionsSuccess, addWorker} from './actions/worker';\nimport {failure} from './actions/index'\nimport {addAlert} from './actions/alert';\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\n// USER FUNCTIONS \n\nexport function signup(values){\n  return dispatch => {\n    fetch(fetchDomain + '/signUp' , {\n      method: \"POST\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify(values)\n    })\n    .then(function(response){\n      dispatch(addAlert(response))  // seems this alert is not persisting...\n\n      if(response.status!==200){\n        dispatch(userSignupFailure(response))\n      }\n      else{\n        return response.json()\n      }\n    })\n    .then(data => {\n      if(data){\n        dispatch(userSignupSuccess(data.user));\n        return data;\n      }\n    });\n  }\n}\n\nexport function login(email, password, auth_token) {\n  return dispatch => {\n    fetch(fetchDomain + '/login' , {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      credentials: 'include',\n      method: \"POST\",\n      body: JSON.stringify({\n        \"email\": email,\n        \"password\": password\n      })\n    })\n    .then(function(response){\n      dispatch(addAlert(response))\n\n      if(response.status!==200){\n        dispatch(userLoginFailure(response));\n      }\n      else{\n        return response.json()\n      }\n    })\n    .then(data => {\n      if(data){\n        dispatch(userLoginSuccess(data.user));\n        return data;\n      }\n    });\n  }\n}\n\nexport function editUser(values){\n  return dispatch => {\n    fetch(fetchDomain + '/users/' + values.id , {\n      method: \"POST\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify(values)\n    })\n    .then(function(response){\n      dispatch(addAlert(response))\n      \n      if(response.status!==200){\n        dispatch(failure(response))\n      }\n      else{\n        // redirect to home page signed in\n        return response.json()\n      }\n    })\n    .then(data => {\n      if(data){\n        dispatch(editUserSuccess(data))\n        return data\n      }\n    });\n  }\n}\n\n// not going to refactor other code unless extra time left, too time consuming\n\n// SERVICE FUNCTIONS\n\n// export function addService(values, store_id){\n//   return dispatch => {\n//     fetch(fetchDomain + '/stores/addService/' + store_id, {\n//       method: \"POST\",\n//       headers: {\n//         'Content-type': 'application/json'\n//       },\n//       credentials: 'include',\n//       body: JSON.stringify(values)\n//     })\n//     .then(function(response){\n//       dispatch(addAlert(response))\n\n//       if(response.status!==200){\n//         dispatch(failure(response))\n//       }\n//       else{\n//         return response.json();\n//       }\n//     })\n//     .then(function(data){\n//       if(data){\n//         dispatch(addServiceSuccess(data))\n//         return data\n//       }\n//     })\n//   }\n// }\n\n// WORKER FUNCTIONS\n\n// export function getWorkerOptions(store_id){\n//   return dispatch => {\n//     fetch(fetchDomain + '/stores/' + store_id + \"/workers\" , {\n//       method: \"GET\",\n//       headers: {\n//           'Content-type': 'application/json'\n//       },\n//       credentials: 'include'\n//     })\n//     .then(function(response){\n//       if(response.status!==200){\n//         // throw an error alert\n//         dispatch(addAlert(response))\n//       }\n//       else{\n//         return response.json();\n//       }\n//     })\n//     .then(data => {\n//       if(data){\n//         let convertedWorkers = data.map((worker) => ({ value: worker.id, label: worker.first_name + \" \" + worker.last_name }));\n//         dispatch(getWorkerOptionsSuccess(convertedWorkers))\n//         return data\n//       }\n//     });\n//   }\n// }\n\n// export function addWorker(values, store_id){\n//   fetch(fetchDomain + '/stores/addWorker/' + store_id, {\n//     method: \"POST\",\n//     headers: {\n//       'Content-type': 'application/json'\n//     },\n//     credentials: 'include',\n//     body: JSON.stringify(values)\n//   })\n//   .then(function(response){\n//     dispatch(addAlert(response))\n\n//     if(response.status!==200){\n//       dispatch(failure(response))\n//     }\n//     else{\n//       return response.json();\n//     }\n//   })\n//   .then(function(data){\n//     // redirect to home page signed in\n//     if(data){\n//       dispatch(addWorkerSuccess(data))\n//       return data\n//     }\n//   })\n// }","import React from 'react';\nimport './LoginForm.css'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport { FaEnvelope, FaLock } from 'react-icons/fa';\nimport GoogleLogin from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login';\nimport {TiSocialFacebookCircular, TiSocialGooglePlus} from 'react-icons/ti';\nimport paint from '../../assets/abstract-painting.jpg';\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {login} from '../../reduxFolder/redux.js'\n// import ReactDOM from 'react-dom';\n// import { useGoogleLogin } from 'react-google-login';\n// import FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\n\n\nconst successGoogle = (response) => {\n  console.log(\"Google Success: \", response.accessToken);\n}\n\nconst failureGoogle = (response) => {\n  console.log(\"Google Failure:\", response.error);\n}\n\nconst successFacebook = (response) => {\n  console.log(\"Facebook Success:\", response.accessToken);\n}\n\nconst failureFacebook = (response) => {\n  if(response.status){\n    console.log(\"Facebook Failure\");\n  }\n}\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      message: {}\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({[event.target.id]: event.target.value});\n  }\n\n  componentDidUpdate(prevProps, prevState)  {\n    // means we updated redux store with the user and have successfully logged in\n    if (prevProps.user !== this.props.user) {\n      if(this.props.appointments) {\n        this.props.history.push({\n          pathname: '/book/' + this.props.store_id,\n          appointments: this.props.appointments,\n          currentStep: 3\n        })\n      } else {\n        this.props.history.push({\n          pathname: '/'\n        })\n      }\n      \n    }\n  }\n\n  handleSubmit(event) {\n    //there might be a CORS issue with the backend, this doesn't work without preventDefault..\n    event.preventDefault();\n    this.props.loginUser(this.state.email, this.state.password, \"\")\n  }\n\n  render() {\n    return ( <Form className=\"formBody rounded\">\n              <h3>{this.props.title}</h3>\n              <Form.Group style={{marginTop: 40, width: '65%', marginLeft: '17%'}}>\n                <InputGroup>\n                  <InputGroup.Prepend >\n                      <InputGroup.Text>\n                          <FaEnvelope/>\n                      </InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <Form.Control id=\"email\" type=\"email\" placeholder=\"Email\" onChange={this.handleChange}/>\n                </InputGroup>\n              </Form.Group>\n\n              <Form.Group style={{width: '65%', marginLeft: '17%'}}>\n                <InputGroup>\n                  <InputGroup.Prepend>\n                      <InputGroup.Text>\n                          <FaLock/>\n                      </InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <Form.Control id=\"password\" type=\"password\" placeholder=\"Password\" onChange={this.handleChange}/>\n                </InputGroup>\n              </Form.Group>\n              <Col xs={8} sm={8} md={8} lg={8} style={{marginLeft: '17%'}}>\n                <Button  className=\"login\" type=\"submit\" variant=\"primary\" onClick={this.handleSubmit}>Login</Button>\n                  <p><b> OR </b></p>\n                  <GoogleLogin\n                    clientId={process.env.REACT_APP_GOOGLE_ID}\n                    buttonText=\"Login with Google\"\n                    onSuccess={successGoogle}\n                    onFailure={failureGoogle}\n                    cookiePolicy={'single_host_origin'}\n                    render={renderProps => (\n                      <button onClick={renderProps.onClick} style={{ width: '100%', backgroundColor:\"#db4a39\", color: 'white', paddingRight: '30px',\n                    marginBottom: '10px', height: '48px', fontSize: '14px'}}> <TiSocialGooglePlus  size={45} style={{paddingRight:\"15px\"}}/>Login with Google</button>\n                    )}\n                  />\n\n                  <FacebookLogin\n                    appId={process.env.REACT_APP_FACEBOOK_ID} //APP ID NOT CREATED YET\n                    fields=\"name,email,picture\"\n                    onFailure={failureFacebook}\n                    xfbml={true}\n                    cssClass=\"facebookButton\"\n                    icon={<TiSocialFacebookCircular size={45} style={{paddingRight:\"15px\"}}/>}\n                    callback={successFacebook}\n                    />\n                  <p> Don't have a Bloom account yet? <Button className=\"toggle-button\" onClick={() => this.props.toggleLogin(false)}> Sign Up. </Button></p>\n              </Col>\n            </Form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.userReducer.user\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  loginUser: (email, password, auth_token) => login(email, password, auth_token)\n}, dispatch)\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\n","export const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAILURE = 'USER_LOGIN_FAILURE'\nexport const USER_SIGNUP_SUCCESS = 'USER_SIGNUP_SUCCESS'\nexport const USER_SIGNUP_FAILURE = 'USER_SIGNUP_FAILURE'\nexport const USER_LOGOUT = 'USER_LOGOUT'\nexport const EDIT_USER_SUCCESS = 'EDIT_USER_SUCCESS'\nexport const UPDATE_ROLE = 'UPDATE_ROLE'\n\n\nexport function userLoginSuccess(userPassed) {\n  return {\n    type: USER_LOGIN_SUCCESS,\n    user: userPassed\n  }\n}\n\nexport function userLoginFailure(error) {\n  return {\n    type: USER_LOGIN_FAILURE,\n    error: error\n  }\n}\n\nexport function userSignupSuccess(userPassed) {\n  return {\n    type: USER_SIGNUP_SUCCESS,\n    user: userPassed\n  }\n}\n\nexport function userSignupFailure(error) {\n  return {\n    type: USER_SIGNUP_FAILURE,\n    error: error\n  }\n}\n\nexport function editUserSuccess(userPassed) {\n  return {\n    type: EDIT_USER_SUCCESS,\n    user: userPassed\n  }\n}\n\nexport function userLogout() {\n  return {\n    type: USER_LOGOUT\n  }\n}\n\nexport function updateRole(role) {\n  return {\n    type: UPDATE_ROLE,\n    role: role\n  }\n}\n","import React from 'react';\nimport '../../App.css';\nimport './LoginForm.css'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport { FaEnvelope, FaLockOpen, FaLock, FaUser, FaPhone } from 'react-icons/fa';\nimport { Formik } from 'formik';\nimport paint from '../../assets/abstract-painting.jpg';\nimport { Link } from \"react-router-dom\";\nimport * as Yup from 'yup';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {signup} from '../../reduxFolder/redux.js'\n\nclass SignupForm extends React.Component {\n  constructor(props) {\n    super(props);\n    // RegEx for phone number validation\n    this.phoneRegExp = /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/\n    this.emailRegExp = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/\n    // Schema for yup\n    this.yupValidationSchema = Yup.object().shape({\n      first_name: Yup.string()\n      .min(2, \"First name must have at least 2 characters\")\n      .max(100, \"First name can't be longer than 100 characters\")\n      .required(\"First name is required\"),\n      last_name: Yup.string()\n      .min(2, \"Last name must have at least 2 characters\")\n      .max(100, \"Last name can't be longer than 100 characters\")\n      .required(\"Last name is required\"),\n      email: Yup.string()\n      .email(\"Must be a valid email address\")\n      .max(100, \"Email must be less than 100 characters\")\n      .required(\"Email is required\"),\n      phone: Yup.string()\n      .matches(this.phoneRegExp, \"Phone number is not valid\"),\n      password: Yup.string()\n      .min(6, \"Password must have at least 6 characters\")\n      .max(100, \"Password can't be longer than 100 characters\")\n      .required(\"Password required\"),\n      password_confirmation: Yup.string()\n      .oneOf([Yup.ref('password')], 'Passwords do not match')\n      .required(\"Password Confirmation required\")\n    });\n  }\n\n  handleSubmit = (values) => {\n    this.props.signUpUser(values)\n  }\n\n  componentDidUpdate(prevProps, prevState)  {\n    // means we updated redux store with the user and have successfully logged in\n    if (prevProps.user !== this.props.user) {\n      if(this.props.appointments) {\n        this.props.history.push({\n          pathname: '/book/' + this.props.store_id,\n          appointments: this.props.appointments,\n          currentStep: 3\n        })\n      } else {\n        this.props.history.push({\n          pathname: '/'\n        })\n      }\n      \n    }\n  }\n\n  render() {\n      return( <Formik\n          initialValues={{\n            first_name: '',\n            last_name: '',\n            email: '',\n            role: '0',\n            phone: '',\n            password: '',\n            password_confirmation: ''\n          }}\n          validationSchema={this.yupValidationSchema}\n          onSubmit={this.handleSubmit}\n        >\n        {( {values,\n            errors,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit}) => (\n          <Form className=\"formBody rounded\">\n            <h3 style={{marginBottom: 40}}>Sign Up</h3>\n\n            <Form.Group controlId=\"formFirstName\" className=\"form\">\n              <InputGroup>\n                <InputGroup.Prepend>\n                    <InputGroup.Text>\n                        <FaUser/>\n                    </InputGroup.Text>\n                </InputGroup.Prepend>\n                <Form.Control\n                  type=\"text\"\n                  name=\"first_name\"\n                  value={values.first_name}\n                  placeholder=\"First Name\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={touched.first_name && errors.first_name ? \"error\" : null}/>\n              </InputGroup>\n              {touched.first_name && errors.first_name ? (\n                <div className=\"error-message\">{errors.first_name}</div>\n              ): null}\n            </Form.Group>\n\n\n            <Form.Group controlId=\"formLastName\" className=\"form\">\n              <InputGroup>\n                <InputGroup.Prepend>\n                    <InputGroup.Text>\n                        <FaUser/>\n                    </InputGroup.Text>\n                </InputGroup.Prepend>\n                <Form.Control type=\"text\"\n                value={values.last_name}\n                placeholder=\"Last Name\"\n                name=\"last_name\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                className={touched.last_name && errors.last_name ? \"error\" : null}/>\n              </InputGroup>\n              {touched.last_name && errors.last_name ? (\n                <div className=\"error-message\">{errors.last_name}</div>\n              ): null}\n            </Form.Group>\n\n            <Form.Group controlId=\"formPhone\" className=\"form\">\n              <InputGroup>\n                <InputGroup.Prepend>\n                    <InputGroup.Text>\n                        <FaPhone/>\n                    </InputGroup.Text>\n                </InputGroup.Prepend>\n                <Form.Control type=\"text\"\n                  value={values.phone}\n                  placeholder=\"Phone Number\"\n                  name=\"phone\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={touched.phone && errors.phone ? \"error\" : null}/>\n              </InputGroup>\n              {touched.phone && errors.phone ? (\n                <div className=\"error-message\">{errors.phone}</div>\n              ): null}\n            </Form.Group>\n\n            <Form.Group controlId=\"formEmail\" className=\"form\">\n              <InputGroup>\n                <InputGroup.Prepend>\n                    <InputGroup.Text>\n                        <FaEnvelope/>\n                    </InputGroup.Text>\n                </InputGroup.Prepend>\n                <Form.Control\n                  type=\"email\"\n                  value={values.email}\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={touched.email && errors.email ? \"error\" : null}/>\n              </InputGroup>\n              {touched.email && errors.email ? (\n                <div className=\"error-message\">{errors.email}</div>\n              ): null}\n            </Form.Group>\n\n            <Form.Group controlId=\"formPassword\" className=\"form\">\n              <InputGroup>\n                <InputGroup.Prepend>\n                    <InputGroup.Text>\n                        <FaLockOpen/>\n                    </InputGroup.Text>\n                </InputGroup.Prepend>\n                <Form.Control\n                  type=\"password\"\n                  value={values.password}\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={touched.password && errors.password ? \"error\" : null}/>\n              </InputGroup>\n              {touched.password && errors.password ? (\n                <div className=\"error-message\">{errors.password}</div>\n              ): null}\n            </Form.Group>\n\n            <Form.Group controlId=\"formPasswordConfirmation\" className=\"form\">\n              <InputGroup>\n                <InputGroup.Prepend>\n                    <InputGroup.Text>\n                        <FaLock/>\n                    </InputGroup.Text>\n                </InputGroup.Prepend>\n                <Form.Control\n                  type=\"password\"\n                  value={values.password_confirmation}\n                  placeholder=\"Confirm Password\"\n                  name=\"password_confirmation\"\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={touched.password_confirmation && errors.password_confirmation ? \"error\" : null}/>\n              </InputGroup>\n              {touched.password_confirmation && errors.password_confirmation ? (\n                <div className=\"error-message\">{errors.password_confirmation}</div>\n              ): null}\n            </Form.Group>\n            <Button className=\"signup\" onClick={handleSubmit}>Sign Up</Button>\n            <p> Already have a Bloom account? <Button className=\"toggle-button\" onClick={() => this.props.toggleLogin(true)}> Log in. </Button></p>\n          </Form>\n        )}\n        </Formik>\n);\n\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.userReducer.user\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  signUpUser: (values) => signup(values)\n}, dispatch)\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignupForm);\n","import React from 'react';\nimport './LoginForm.css'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport paint from '../../assets/abstract-painting.jpg';\nimport LoginForm from './LoginForm'\nimport SignupForm from './SignupForm'\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {login} from '../../reduxFolder/redux.js'\nimport { useLocation } from 'react-router-dom'\nimport { Image } from 'react-bootstrap';\n// import ReactDOM from 'react-dom';\n// import { useGoogleLogin } from 'react-google-login';\n// import FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\n\nclass Registration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      message: {},\n      displayLogin: props.location.pathname == \"/login\"\n    };\n\n    this.toggleLogin = this.toggleLogin.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState)  {\n    // means we updated redux store with the user and have successfully logged in\n    if (prevProps.user !== this.props.user) {\n      if(this.props.appointments) {\n        this.props.history.push({\n          pathname: '/book/' + this.props.store_id,\n          appointments: this.props.appointments,\n          currentStep: 3\n        })\n      } else {\n        this.props.history.push({\n          pathname: '/'\n        })\n      }\n      \n    }\n  }\n\n  toggleLogin(newValue) {\n    this.setState({\n      displayLogin: newValue\n    })\n  }\n\n  render() {\n    const RenderLoginOrSignup = (props) => {\n      if(this.state.displayLogin) {\n        return <LoginForm title=\"Login\" history={this.props.history} toggleLogin={this.toggleLogin}/>\n      } else {\n        return <SignupForm history={this.props.history} toggleLogin={this.toggleLogin}/>\n      }\n    }\n    return (\n      <Container fluid>\n        <Image src={paint} alt=\"paint\" style={{top: 0, left: 0, position: 'absolute', width:'100%', filter: 'grayscale(0.4)'}}/>\n        <Row className=\"justify-content-center mt-5\">\n          <Col xs={8} sm={7} md={6} lg={5}>\n            <RenderLoginOrSignup/>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Registration;\n","import React from 'react';\nimport { Form, InputGroup, Button } from 'react-bootstrap';\nimport Col from 'react-bootstrap/Col'\nimport './SearchBar.css'\nimport {withRouter} from 'react-router'\nimport { FiSearch } from 'react-icons/fi';\nimport Select from 'react-select'\n\nconst helper = require('./helper.js');\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      center: {\n        lat: '',\n        lng: ''\n      },\n      categories: helper.getCategoriesAsPairs(),\n      selectedCategory: '',\n      address: '',\n      distance: 15,\n    }\n\n    this.autocomplete = null\n    this.handlePlaceSelect = this.handlePlaceSelect.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSelectChange = (selectedCategory) => {\n    this.setState({ selectedCategory });\n  }\n\n  handleSubmit() {\n    let queryString = require('./helper.js').queryString;\n    const formState = (({ address, distance, nails, hair, spa, facials, barber, makeup }) => ({ address, distance, nails, hair, spa, facials, barber, makeup }))(this.state);\n    let query = queryString(formState)\n    console.log(\"query is: \", query)\n    console.log(\"address is: \", this.state.address)\n    this.props.history.push({\n      pathname: \"/search\",\n      search: query,\n      state: {\n        address: this.state.address\n      }\n    });\n  }\n\n  handlePlaceSelect() {\n    let addressObject = this.autocomplete.getPlace()\n    let address = addressObject.address_components.map(function(elem){\n                      return elem.long_name;\n                  }).join(\", \");\n\n    this.setState({\n      address: address,\n      center: {\n        lat: addressObject.geometry.location.lat(),\n        lng: addressObject.geometry.location.lng()\n      }\n\n    })\n  }\n\n  componentDidMount () {\n    const google = window.google;\n    this.autocomplete = new google.maps.places.Autocomplete(document.getElementById('autocomplete'), { })\n\n    this.autocomplete.addListener(\"place_changed\", this.handlePlaceSelect)\n    if(this.props.location.state && this.props.location.state.address) {\n      console.log(\"exists address\", this.props.location.state.address)\n      this.setState({\n        address: this.props.location.state.address\n      })\n    }\n  }\n\n  render() {\n    return (\n        <Form inline className=\"full-width\">\n          <Form.Row className=\"px-1 full-width\">\n            <Col xs={12} md={6} className=\"form-horizontal\">\n              <Form.Group className=\"full-width\" controlId=\"autocomplete\">\n                <InputGroup className=\"not-auto\">\n                  <Form.Control\n                    className=\"full-width\"\n                    type=\"text\"\n                    placeholder=\"Try 'New Haven, CT'\"\n                    autoComplete=\"new-password\"\n                  />\n                  <InputGroup.Append>\n                    <Button variant=\"secondary\" onClick={this.handleSubmit} disabled={!this.state.address}>\n                      <FiSearch />\n                    </Button>\n                  </InputGroup.Append>\n                </InputGroup>\n              </Form.Group>\n            </Col>\n            <Col xs={12} md={3}>\n              <Form.Group className=\"full-width\">\n              <Select\n                className=\"full-width\"\n                value={this.state.selectedCategory}\n                onChange={this.handleSelectChange}\n                options={this.state.categories}\n              />\n              </Form.Group>\n            </Col>\n          </Form.Row>\n        </Form>\n    );\n  }\n}\n\nexport default withRouter(SearchBar);\n","import React from 'react';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport { Link } from \"react-router-dom\";\nimport './MainNavbar.css'\nimport { connect } from 'react-redux';\nimport { useLocation } from 'react-router-dom'\nimport SearchBar from '../Search/SearchBar'\n\nclass MainNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let storeDisplay = null\n\n    const RenderNavBarBasedOnPageAndUser = (props) => {\n      let location = useLocation();\n      if(location.pathname == '/search') {\n        return <Nav className=\"full-width\">\n            <SearchBar className=\"nav-link\"/>\n          </Nav>\n      }\n      if(this.props.user == null || (Object.keys(this.props.user).length === 0 && this.props.user.constructor === Object)) {\n        return <Nav className=\"left\">\n          <Link to=\"/login\" className=\"nav-link\">Login</Link>\n          <Link to=\"/signup\" className=\"nav-link\">Signup</Link>\n        </Nav>\n      } else {\n        if(this.props.user.role != '0'){\n          storeDisplay = <NavDropdown title=\"Manage Stores\" id=\"basic-nav-dropdown\">\n            <NavDropdown.Item href={\"/users/\" + this.props.user.id + \"/stores\"}>Dashboard</NavDropdown.Item>\n            {/* <NavDropdown.Item href=\"/stores/:store_id/services\">Services</NavDropdown.Item> */}\n            <NavDropdown.Divider />\n            <NavDropdown.Item href=\"/store/signup\">Create Store</NavDropdown.Item>\n          </NavDropdown>\n        }\n        else{\n          storeDisplay = <Link to=\"/store/signup\" className=\"nav-link\">Create Store</Link>\n        }\n        return <Nav>\n          {storeDisplay}\n          <NavDropdown title=\"Profile\" id=\"basic-nav-dropdown\">\n          <NavDropdown.Item href={\"/users/\" + this.props.user.id}>View</NavDropdown.Item>\n            <NavDropdown.Item href={\"/users/edit/\" + this.props.user.id}>Edit</NavDropdown.Item>\n          </NavDropdown>\n          <Link to={\"/users/\" + this.props.user.id + '/appointments'} className=\"nav-link\">My Appointments</Link>\n          <Link style={{position: 'absolute', right: 60}} to=\"/logout\" className=\"nav-link\">Logout</Link>\n        </Nav>\n      }\n    }\n\n    return (\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\" fixed=\"top\">\n        <Link to=\"/\" className=\"navbar-brand\" style={{fontFamily: 'Megrim, cursive', fontSize: '35px'}}>Bloom</Link>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"left\" style={{marginRight: '120px'}}>\n            <Link to=\"/about\" className=\"nav-link\">About</Link>\n          </Nav>\n          <RenderNavBarBasedOnPageAndUser/>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.userReducer.user\n})\n\nexport default connect(mapStateToProps)(MainNavbar);\n","import { USER_LOGIN_SUCCESS, USER_LOGIN_FAILURE, USER_SIGNUP_SUCCESS, USER_SIGNUP_FAILURE, USER_LOGOUT, EDIT_USER_SUCCESS, UPDATE_ROLE } from \"../actions/user\"\n\nconst initialState = {\n  user: {},\n  error: {},\n}\n\nfunction userReducer(state = initialState, action) {\n  switch (action.type) {\n    case USER_LOGIN_FAILURE:\n      return Object.assign({}, state, {\n        error: action.error\n      })\n\n    case USER_LOGIN_SUCCESS:\n      return Object.assign({}, state, {\n        user: action.user\n      })\n\n    case USER_SIGNUP_SUCCESS:\n      return Object.assign({}, state, {\n        user: action.user\n      })\n  \n    case USER_SIGNUP_FAILURE:\n      return Object.assign({}, state, {\n        error: action.error\n      })\n\n    case EDIT_USER_SUCCESS:\n      return Object.assign({}, state, {\n        user: action.user\n      })\n\n    case USER_LOGOUT:\n      return Object.assign({}, state, {\n        user: {}\n      })\n\n    case UPDATE_ROLE:\n      let new_user = state.user\n      new_user.role = action.role\n      return Object.assign({}, state, {\n        user: new_user\n      })\n\n    default:\n      return state\n  }\n}\n\nexport default userReducer;\n","import { ADD_ALERT, REMOVE_ALERT } from \"../actions/alert\"\n\nconst initialState = {\n  alert: {}\n}\n\nfunction alertReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_ALERT:\n      return Object.assign({}, state, {\n        alert: action.message\n      })\n    case REMOVE_ALERT:\n      return Object.assign({}, state, {\n        alert: {}\n      })\n\n    default:\n      return state\n  }\n}\n\nexport default alertReducer","import { ADD_STORE } from \"../actions/stores\"\n\nconst initialState = {\n  stores: [],\n}\n\nfunction storeReducer(state = initialState, action) {\n  switch (action.type) {\n\n    case ADD_STORE:\n\n      let new_stores = state.stores\n      if(new_stores) {\n        new_stores.push(action.store)\n      }\n      else {\n        new_stores = [action.store]\n      }\n      return Object.assign({}, state, {\n        stores: new_stores\n      })\n\n    default:\n      return state\n  }\n}\n\nexport default storeReducer;\n","export const ADD_STORE = 'ADD_STORE'\n\nexport function addStore(store) {\n  return {\n    type: ADD_STORE,\n    store: store,\n  }\n}\n","import { combineReducers } from 'redux'\nimport userReducer from './user'\nimport alertReducer from './alert'\n// import serviceReducer from './service'\n// import workerReducer from './worker'\nimport storeReducer from './stores'\n\nlet rootReducer = combineReducers({\n  userReducer,\n  alertReducer,\n  storeReducer\n  // serviceReducer,\n  // workerReducer\n})\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport reducers from './reducers/index';\nimport thunk from 'redux-thunk';\n\nfunction saveToLocalStorage(state) {\n  try {\n    const serializedState = JSON.stringify(state)\n    localStorage.setItem('state', serializedState)\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nfunction loadFromLocalStorage() {\n  try {\n    const serializedState = localStorage.getItem('state')\n    if(serializedState === null) return undefined\n    return JSON.parse(serializedState)\n  } catch (e) {\n    console.log(e)\n    return undefined\n  }\n}\n\nconst persistedState = loadFromLocalStorage()\n\nconst store = createStore(\n  reducers,\n  persistedState,\n  applyMiddleware(thunk)\n)\n\nstore.subscribe(() => saveToLocalStorage(store.getState()))\n\nexport default store;","import React from 'react';\nimport './AdvancedSearch.css'\nimport { Form, Row, Col, Container} from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport { withRouter } from \"react-router-dom\";\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport {\n  addAlert\n} from '../../reduxFolder/actions/alert'\nimport store from '../../reduxFolder/store';\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nconst helper = require('./helper.js');\n\nclass AdvancedSearch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: [],\n      address: '',\n      distance: 1,\n      redirect: false,\n      center: {\n        lat: '',\n        lng: ''\n      },\n      category: helper.getCategories(),\n      nails: false,\n      hair: false,\n      facials: false,\n      barber: false,\n      spa: false,\n      makeup: false,\n    };\n    this.autocomplete = null\n    this.redirect = false\n\n    this.handlePlaceSelect = this.handlePlaceSelect.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onSelect = this.onSelect.bind(this);\n    this.onRemove = this.onRemove.bind(this);\n  }\n\n  onSelect(selectedList, selectedItem) {\n\n    this.setState({\n      selected: selectedList\n    })\n\n    selectedItem = selectedItem.name;\n\n    if(selectedItem == \"Nail Salon\"){\n      this.setState({\n        nails: true\n      })\n    }\n    else if(selectedItem == \"Hair Salon\"){\n      this.setState({\n        hair: true\n      })\n    }\n    else if(selectedItem == \"Facials\"){\n      this.setState({\n        facials: true\n      })\n    }\n    else if(selectedItem == \"Spa & Wellness\"){\n      this.setState({\n        spa: true\n      })\n    }\n    else if(selectedItem == \"Makeup\"){\n      this.setState({\n        makeup: true\n      })\n    }\n    else{\n      if(selectedItem == \"Barbershops\"){\n        this.setState({\n          barber: true\n        })\n      }\n    }\n  }\n\n  onRemove(selectedList, removedItem, event) {\n\n    this.setState({\n      selected: selectedList\n    })\n\n    removedItem = removedItem.name;\n\n    if(removedItem == \"Nail Salon\"){\n      this.setState({\n        nails: false\n      })\n    }\n    else if(removedItem == \"Hair Salon\"){\n      this.setState({\n        hair: false\n      })\n    }\n    else if(removedItem == \"Facials\"){\n      this.setState({\n        facials: false\n      })\n    }\n    else if(removedItem == \"Spa & Wellness\"){\n      this.setState({\n        spa: false\n      })\n    }\n    else if(removedItem == \"Makeup\"){\n      this.setState({\n        makeup: false\n      })\n    }\n    else if(removedItem == \"Barbershops\"){\n      this.setState({\n        barber: false\n      })\n    }\n  }\n\n  componentDidMount() {\n    const google = window.google;\n    this.autocomplete = new google.maps.places.Autocomplete(document.getElementById('autocomplete'), { })\n\n    this.autocomplete.addListener(\"place_changed\", this.handlePlaceSelect)\n  }\n\n  handlePlaceSelect() {\n    let addressObject = this.autocomplete.getPlace()\n\n    let address = addressObject.address_components.map(function(elem){\n                      return elem.long_name;\n                  }).join(\", \");\n\n    this.setState({\n      address: address,\n      center: {\n        lat: addressObject.geometry.location.lat(),\n        lng: addressObject.geometry.location.lng()\n      }\n    })\n  }\n\n  handleChange(event) {\n    this.setState({\n      distance: parseInt(event.target.value.split(\" \")[0])\n    })\n  }\n\n  handleSubmit(event) {\n    // for some reason doesn't work without this..\n    event.preventDefault();\n\n    if(!this.state.address) {\n      return;\n    }\n\n    let queryString = helper.queryString;\n    let query = queryString(this.state)\n\n    console.log(this.state);\n    console.log(query);\n\n    const fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n    console.log(\"environment is: \", process.env.NODE_ENV)\n    console.log(\"fetch prod is: \", process.env.REACT_APP_FETCH_DOMAIN_PROD)\n    console.log(\"fetch dev is: \", process.env.REACT_APP_FETCH_DOMAIN_DEV)\n    console.log(\"fetch domain is: \", fetchDomain)\n    fetch(fetchDomain + '/stores' + query, {\n      method: \"GET\",\n      headers: {\n          'Content-type': 'application/json'\n      }\n    })\n    .then(function(response){\n      if(response.status!==200){\n        // throw an error alert\n        store.dispatch(addAlert(response))\n      }\n      else{\n        return response.json();\n      }\n    })\n    .then(data => {\n      if(data){\n        let stateRep = this.state\n        stateRep.stores = data\n        stateRep.redirect = true\n        // stateRep.center = {\n        //   lat: \"34.277639\",\n        //   lng: \"-118.3741806\"\n        // }\n\n        this.props.history.push({\n          pathname: '/search',\n          search: query,\n          state: stateRep\n        })\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Container className=\"book_window\">\n      <Form className=\"formBody rounded\" onSubmit={this.handleSubmit}>\n        <h3>Book Now</h3>\n        <Form.Group controlId=\"autocomplete\">\n        <Row>\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Try 'New Haven, CT'\"\n            autoComplete=\"new-password\"\n          />\n        </Row>\n        </Form.Group>\n\n        <Form.Group>\n          <Row>\n          <Form.Label>Distance</Form.Label>\n          <Form.Control as=\"select\" id=\"distance\" onChange={this.handleChange}>\n            <option>1 mile</option>\n            <option>5 miles</option>\n            <option>10 miles</option>\n            <option>25 miles</option>\n            <option>50 miles</option>\n          </Form.Control>\n          </Row>\n        </Form.Group>\n\n        <Form.Group controlId=\"category\">\n          <Row>\n          <Form.Label>Category</Form.Label>\n\n\n          <Multiselect\n            options={this.state.category}\n            onSelect={this.onSelect}\n            onRemove={this.onRemove}\n            placeholder=\"Category\"\n            closeIcon=\"cancel\"\n            displayValue=\"name\"\n            avoidHighlightFirstOption={true}\n            style={{multiselectContainer: { width: '100%'},  groupHeading:{width: 50, maxWidth: 50}, chips: { background: \"#587096\", height: 35 }, inputField: {color: 'black'}, searchBox: { minWidth: '100%', height: '30', backgroundColor: 'white', borderRadius: \"5px\" }} }\n            />\n\n          </Row>\n        </Form.Group>\n          <Button disabled={!(this.state.address)} style={{backgroundColor: '#8CAFCB', border: '0px'}} type=\"submit\">Submit</Button>\n      </Form>\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(AdvancedSearch);\n","import React from 'react';\nimport './Homepage.css';\nimport {\n  addAlert\n} from '../../reduxFolder/actions/alert'\nimport store from '../../reduxFolder/store';\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\nconst helper = require('../Search/helper.js');\n\nclass Category extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stores: [],\n      address: '',\n      distance: 1,\n      redirect: false,\n      center: {\n        lat: '',\n        lng: ''\n      },\n      nails: false,\n      hair: false,\n      facials: false,\n      barber: false,\n      spa: false,\n      makeup: false,\n    };\n\n    this.getStores = this.getStores.bind(this);\n    this.getCurrentLocation = this.getCurrentLocation.bind(this);\n  }\n\n  async getCurrentLocation() {\n\n    const google = window.google;\n    if (navigator.geolocation) {\n         this._displayLocation = (latitude, longitude) => {\n          const geocoder = new google.maps.Geocoder();\n          const latlng = new google.maps.LatLng(latitude, longitude);\n          this.geocodeAddress(geocoder, latlng);\n        };\n    this.geoSuccess = (position) => {\n         this._displayLocation(position.coords.latitude, position.coords.longitude);\n      };\n    this.geoError = (error) => {\n        switch (error.code) {\n          case error.TIMEOUT:\n          console.log(\"Browser geolocation error !\\n\\nTimeout.\");\n          break;\n          case error.PERMISSION_DENIED:\n          console.log(\"Only secure origins are allowed\");\n          break;\n          case error.POSITION_UNAVAILABLE:\n          console.log(\"Browser geolocation error !\\n\\nPosition unavailable.\");\n          break;\n          default:\n          console.log(error.code);\n          break;\n         }\n      };\n       await navigator.geolocation.getCurrentPosition(this.geoSuccess, this.geoError);\n      }\n      else {\n       console.log(\"Geolocation is not supported for this Browser/OS.\");\n      }\n\n\n    this.geoCodeCallback = (results, status, event) => {\n        const google = window.google; // eslint-disable-line\n       if (status === google.maps.GeocoderStatus.OK) {\n        if (results[0]) {\n          const add = results[0].formatted_address;\n          const value = add.split(\",\");\n          const count = value.length;\n          const city = value[count - 3];\n          console.log(\"My Current Location:\", add)\n          this.setState({\n            address: add\n          })\n          // here we can dispatch action to search by city name and autofill the autocomplete\n        } else {\n          console.log(\"address not found\");\n        }\n        } else {\n          console.log(status);\n        }\n      }\n    this.geocodeAddress = (geocoder, latlng) => {\n\n      this.setState({\n        center: {\n          lat: latlng.lat(),\n          lng: latlng.lng()\n        },\n      })\n        geocoder.geocode({ location: latlng }, this.geoCodeCallback);\n      }\n\n\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    if(prevState.address != this.state.address){\n      await this.setState({\n        [this.props.id]: true\n      })\n\n      console.log(this.state)\n\n      let query = helper.queryString(this.state)\n\n      fetch(fetchDomain + '/stores' + query, {\n        method: \"GET\",\n        headers: {\n            'Content-type': 'application/json'\n        }\n      })\n      .then(function(response){\n        if(response.status!==200){\n          // throw an error alert\n          store.dispatch(addAlert(response))\n        }\n        else{\n          return response.json();\n        }\n      })\n      .then(data => {\n        if(data){\n          let stateRep = this.state\n          stateRep.stores = data\n          stateRep.redirect = true\n          // stateRep.center = {\n          //   lat: \"34.277639\",\n          //   lng: \"-118.3741806\"\n          // }\n\n          this.props.history.push({\n            pathname: '/search',\n            search: query,\n            state: stateRep\n          })\n        }\n      });\n    }\n  }\n\n\n  async getStores() {\n\n    this.getCurrentLocation()\n\n  }\n\n\n  render() {\n    return (\n      <div onClick={() => this.getStores()} className=\"image_container\" style={this.props.style}>\n      <img src={this.props.img} alt=\"paint\" className=\"images\"\n\n      />\n      <p className=\"text\"> {this.props.text} </p>\n      </div>\n    );\n  }\n}\n\nexport default Category;\n","import React from 'react';\n// import Container from 'react-bootstrap/Container'\nimport {Row, Col, Container, Button} from 'react-bootstrap'\nimport AdvancedSearch from '../Search/AdvancedSearch';\nimport './Homepage.css';\nimport paint from '../../assets/abstract-painting.jpg';\nimport barber from '../../assets/barber.jpg';\n// import bride_hair from '../../assets/bride_hair.jpg';\nimport facials from '../../assets/facials.jpg';\nimport hair from '../../assets/hair.jpg';\nimport lipstics from '../../assets/lipstics2.jpg';\nimport massage from '../../assets/massage3.jpg';\nimport nails from '../../assets/nails3.jpg';\nimport salon from '../../assets/salon.jpg';\nimport paint_line from '../../assets/paint_line.png';\nimport Typist from 'react-typist';\nimport { useState, useEffect } from 'react'\n// import { useSpring, animated as a } from 'react-spring'\n// import TrackVisibility from 'react-on-screen';\nimport VizSensor from 'react-visibility-sensor';\n// import Typing from 'react-typing-animation';\nimport Category from './Category.js';\n\nconst calc = (x, y) => [-(y - window.innerHeight / 2) / 20, (x - window.innerWidth / 2) / 80, 1.04]\nconst trans = (x, y, s) => `perspective(600px) scale(${s})`\n\n\nfunction useScreenWidth(): number {\n\n  const [position, setPosition] = useState({ xys: [0, 0, 1]});\n\n  useEffect(() => {\n    let mounted = true\n    let setFromEvent;\n    let setLeaveEvent;\n\n    if(mounted){\n      setFromEvent = e => setPosition({  xys: calc(e.clientX, e.clientY) });\n      setLeaveEvent = e => setPosition({ xys : [0, 0, 1]})\n      window.addEventListener(\"mousemove\", setFromEvent);\n    }\n\n    return () => {\n      mounted = false;\n      window.removeEventListener(\"mousemove\", setFromEvent);\n    };\n  });\n\n  return position;\n}\n\nfunction useScroll() : number {\n  const [scrollPosition, setSrollPosition] = useState(0);\n  const handleScroll = () => {\n      const position = window.pageYOffset;\n      setSrollPosition(position);\n  };\n\n  useEffect(() => {\n      window.addEventListener('scroll', handleScroll);\n      return () => {\n          window.removeEventListener('scroll', handleScroll);\n      };\n  }, []);\n\nreturn scrollPosition;\n}\n\nfunction useResizeWidth(): number {\n\n  const [width, setWidth] = useState(window.innerWidth)\n\n  useEffect(() => {\n    let mounted = true\n    let handleResize;\n\n    if(mounted){\n      handleResize = () => {\n        setWidth(window.innerWidth)\n      }\n      window.addEventListener('resize', handleResize)\n    }\n    return () => {\n      mounted = false;\n      window.removeEventListener('resize', handleResize)\n    }\n\n  })\n\n  return width;\n}\n\nfunction ScreenWidth ({ listen, children }) {\n  const screenWidth: number = useScreenWidth();\n  // console.log(screenWidth);\n  return children(screenWidth);\n\n};\n\nfunction ScreenResize ({listen, children }) {\n  const resize: number = useResizeWidth();\n  // console.log(screenWidth);\n  return children(resize);\n};\n\nfunction ScreenScroll ({ listen, children }) {\n  const scroll: number = useScroll();\n  // console.log(scroll);\n  return children(scroll);\n\n};\n\n\nclass Homepage extends React.Component {\n  constructor(props) {\n      super(props)\n      this.state = {\n        Visible: false\n      }\n\n      // this.handleMouseEnter = this.handleMouseEnter.bind(this, this.props.handleMouseEnter)\n      // this.handleMouseMove = this.handleMouseMove.bind(this, this.props.handleMouseMove)\n      // this.handleMouseLeave = this.handleMouseLeave.bind(this, this.props.handleMouseLeave)\n\n  }\n\n  goToStore() {\n    this.props.history.push({\n      pathname: '/store/signup'\n    });\n  }\n\n  render() {\n\n    // console.log(this.state.Visible)\n    return (\n      <Container fluid style={{backgroundColor: '#c0cbcf'}}>\n        <div>\n          <ScreenWidth>\n            {(position) =>\n            <img src={paint} alt=\"paint\" style={{top: 80, left: 0, position: 'absolute', height: '700px', width:'100%', transform: `perspective(600px) rotateX(${position.xys[0]/10}deg) rotateY(${position.xys[1]/10}deg) scale(${position.xys[2]})` }}\n              // onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n              // onMouseLeave={() => set({ xys: [0, 0, 1] })}\n            />\n            }\n          </ScreenWidth>\n        </div>\n            <Row style={{marginTop: 120, height: 500, marginLeft: '10%'}}>\n            <ScreenResize>\n            {(width) => {\n              if(width > 1000) {\n                return (\n                <AdvancedSearch/>)\n              }\n              else {\n                return null;\n              }\n            }}\n            </ScreenResize>\n            <Col style={{margin:'10%', marginTop: '0%'}}>\n              <Row style={{marginLeft:'10%', marginTop: '2%'}}>\n                <p className=\"welcome\"> Welcome to </p>\n                <p className=\"bloom\"> Bloom </p>\n              </Row>\n              <p className=\"subtitle\"> A platform that helps you find\n              salons, beauty experts and stylists that are located near your house\n              and will soon become your favorite salons. ETC ETC We can change that later. </p>\n\n            </Col>\n          </Row>\n\n          <Col className=\"type_container\">\n            <VizSensor\n             onChange={(isVisible) => {\n               this.setState({Visible: isVisible})\n             }}\n             active={!this.state.Visible}>\n\n           <p style={{fontSize: 25, fontFamily: 'Bellota, cursive', fontWeight: 'bold'}}> At Bloom </p>\n           </VizSensor>\n\n           <Col>\n            {(this.state.Visible) ?\n              <Typist\n                className=\"typist\"\n                avgTypingDelay={100}\n                startDelay={10}\n                cursor={{\n                  show: true,\n                  blink: true,\n                  element: '|',\n                }}\n              >\n                You can find hair salons.\n\n                <Typist.Backspace count={12} delay={200} />\n                  <span> nail salons.</span>\n                <Typist.Backspace count={12} delay={200} />\n                  <span> beauty salons and more.</span>\n\n\n            </Typist>\n           : null}\n          </Col>\n        </Col>\n\n          <Col style={{marginLeft: '2%', marginTop: '3%'}}>\n            <Row>\n            <Category history={this.props.history} id={\"hair\"}  img={hair} text={\"Hair Salons\"}/>\n            <Category history={this.props.history} id={\"makeup\"} img={lipstics} text={\"Makeup Artists\"}/>\n            <Category history={this.props.history} id={\"barber\"} img={barber} text={\"Barber Shops\"}/>\n            </Row>\n            <Row>\n            <Category history={this.props.history} id={\"nails\"} img={nails} text={\"Nail Salons\"}/>\n            <Category history={this.props.history} id={\"facials\"} img={facials} text={\"Facials\"}/>\n            <Category history={this.props.history} id={\"spa\"} img={massage} text={\"Spa\"}/>\n            </Row>\n          </Col>\n\n          <Col style={{ marginTop: '8%', backgroundColor: '#e8e3d8'}}>\n          <Row>\n          <Col style={{margin: '5%', marginTop: '10%'}}>\n          <p className=\"header\"> Are you a salon owner? </p>\n          <p style={{fontSize: 20}}> Join our community by signing up your salon today! Join our community by signing up your salon today. Join our community by signing up your salon today.\n          Join our community by signing up your salon today. Join our community by signing up your salon today. </p>\n          <Button onClick={() =>  this.goToStore()} style={{marginTop: '5%', backgroundColor: '#354B74', border: 0}}> Learn More </Button>\n          </Col>\n          <img src={salon} className=\"salon\" alt=\"paint\"/>\n          </Row>\n          </Col>\n\n      </Container>\n    );\n  }\n}\n\nexport default Homepage;\n","import React from 'react';\nimport './StaticPage.css';\nimport {Container, Col, Row} from 'react-bootstrap'\nimport paint from '../../assets/abstract-painting.jpg';\n\nclass StaticPage extends React.Component {\n  render() {\n    return (\n      <Container fluid>\n\n          <img src={paint} alt=\"paint\" style={{top: 0, left: 0, position: 'absolute', height: '100%', width:'100%', filter: 'grayscale(0.4)'}}/>\n          <Row className=\"justify-content-center\">\n            <Col xs={12} sm={11} md={10} lg={9}>\n              <div className=\"container_about\">\n                <h1 className=\"about\">~ About Us ~</h1>\n                    <p style={{fontSize: 22, marginTop: '5%'}}>\n                    Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n                    Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,\n                    when an unknown printer took a galley of type and scrambled it to make a type\n                    specimen book. It has survived not only five centuries, but also the leap into\n                    electronic typesetting, remaining essentially unchanged. It was popularised in\n                    the 1960s with the release of Letraset sheets containing Lorem Ipsum passages,\n                    and more recently with desktop publishing software like Aldus PageMaker including\n                    versions of Lorem Ipsum\n                    </p>\n                </div>\n              </Col>\n            </Row>\n\n      </Container>\n    );\n  }\n}\n\nexport default StaticPage;\n","import React from 'react';\nimport Carousel from 'react-bootstrap/Carousel'\nimport './LargeCarousel.css'\n\n\nclass LargeCarousel extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  render() {\n    return (\n\n      <Carousel style={this.props.style} interval=\"\">\n        {this.props.pictures.map((picture, index) => (\n          <Carousel.Item key={\"pic-\" + index}>\n            <img style={this.props.img} src={picture.url} alt={\"Slide \" + index} />\n          </Carousel.Item>\n        ))}\n      </Carousel>\n    );\n  }\n}\n\nexport default LargeCarousel;\n","import React from 'react';\nimport LargeCarousel from '../LargeCarousel';\nimport Card from 'react-bootstrap/Card'\nimport { Button, Carousel, Image, Col } from 'react-bootstrap';\nimport Row from 'react-bootstrap/Row'\n\nclass SearchCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pictures: []\n    }\n  }\n\n  render() {\n    return (\n      <Col xs={12} className=\"my-3 px-0 h-100\">\n        <Card style={{height: '100%'}}>\n          <Row style={{height: '100%'}}>\n            <Col md={6} className=\"vertical-align-contents px-0 h-100 w-100\">\n              <Carousel interval=\"\">\n                {this.props.store.pictures.map((picture, index) => (\n                  <Carousel.Item key={\"pic-\" + index}>\n                    <Image fluid src={picture.url} alt={\"Slide \" + index} />\n                  </Carousel.Item>\n                ))}\n              </Carousel>\n            </Col>\n            <Col md={6} className=\"vertical-align-contents px-0 h-100\">\n              <Card.Body >\n                <div>\n                  <Card.Title onClick={() => this.props.onClickFunctionStore(this.props.store.id)} style={{cursor: 'pointer'}} >{this.props.store.name}</Card.Title>\n                  <Card.Text className=\"mb-3\">{this.props.store.description}</Card.Text>\n                </div>\n                <Button style={{backgroundColor: '#8CAFCA', border: 0}} onClick={() => this.props.onClickFunctionBook(this.props.store.id)}>Book Now</Button>\n              </Card.Body>\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default SearchCard;\n","import React, { Component } from 'react';\nimport { Map, InfoWindow, Marker } from 'google-maps-react';\nimport SearchCard from '../Search/SearchCard';\n\nclass MapContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showingInfoWindow: false,  //Hides or the shows the infoWindow\n      activeMarker: {},          //Shows the active marker upon click\n      selectedPlace: {},          //Shows the infoWindow to the selected place upon a marker\n      activeMarkerIndex: 0\n    };\n\n    this.onMarkerClick = this.onMarkerClick.bind(this);\n    this.onClose = this.onClose.bind(this);\n  }\n\n  displayMarkers() { \n    if(this.props.stores) {\n      return this.props.stores.map((store, index) => { \n        return <Marker key={\"store-\" + index} id={index} position={{ \n                       lat: store.lat, \n                       lng: store.lng }} \n                       onClick={this.onMarkerClick}\n                       name={store.name} /> \n      }) \n    } else {\n      return null\n    }\n  } \n\n  onMarkerClick = (props, marker, e) =>\n  this.setState({\n    selectedPlace: props,\n    activeMarker: marker,\n    showingInfoWindow: true,\n    activeMarkerIndex: marker.id\n  });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  onClickFunction (id) {\n    console.log(\"Here1\")\n    // Currently not working...\n    // window.location.href='/book/' + id\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(prevProps != this.props){\n      // console.log(\"BEFORE\", prevProps, \"AFTER\", this.props)\n      // for some reason, center is not updating, the value changes but visually it does not\n    }\n  }\n\n  render() {\n\n  const DisplayInfoWindowContents = (props) => {\n    if(this.props.stores) {\n      return <h4 className=\"mb-0\">{this.props.stores[this.state.activeMarkerIndex].name}</h4>\n    } else {\n      return null\n    }\n  }\n    return (\n      <Map\n        google={this.props.google}\n        zoom={this.props.zoom}\n        style={this.props.mapStyles}\n        initialCenter={this.props.center}\n      >\n        {this.displayMarkers()}\n        <InfoWindow\n        marker={this.state.activeMarker}\n        visible={this.state.showingInfoWindow}\n        onClose={this.onClose}\n        >\n          <DisplayInfoWindowContents/>\n        </InfoWindow>\n      </Map>\n    );\n  }\n}\n\nexport default MapContainer;\n\n\n// for fixing clicking within infowindow, some resources: https://stackoverflow.com/questions/60426907/reactjs-onclick-not-triggered-on-click-of-button-inside-google-maps-marker-inf\n// https://github.com/fullstackreact/google-maps-react/issues/70\n// https://www.google.com/search?q=onclick+within+infowindow+not+working+react&rlz=1C5CHFA_enUS821US821&oq=onclick+within+infowindow+not+working+react&aqs=chrome..69i57.7600j0j7&sourceid=chrome&ie=UTF-8","import React from 'react'\nimport ContentLoader from 'react-content-loader'\n\nconst SearchDisplayLoader = props => (\n  <ContentLoader\n    speed={2}\n    width={600}\n    height={700}\n    viewBox=\"0 0 700 750\"\n    backgroundColor=\"#f5f5f5\"\n    foregroundColor=\"#dbdbdb\"\n    {...props}\n  >\n\n    <rect x=\"4\" y=\"0\" rx=\"3\" ry=\"3\" width=\"122\" height=\"26\" />\n    <rect x=\"4\" y=\"68\" rx=\"3\" ry=\"3\" width=\"7\" height=\"330\" />\n    <rect x=\"6\" y=\"390\" rx=\"3\" ry=\"3\" width=\"639\" height=\"8\" />\n    <rect x=\"640\" y=\"68\" rx=\"3\" ry=\"3\" width=\"6\" height=\"330\" />\n    <rect x=\"4\" y=\"70\" rx=\"3\" ry=\"3\" width=\"295\" height=\"325\" />\n    <rect x=\"346\" y=\"101\" rx=\"3\" ry=\"3\" width=\"231\" height=\"29\" />\n    <rect x=\"382\" y=\"183\" rx=\"3\" ry=\"3\" width=\"102\" height=\"7\" />\n    <rect x=\"372\" y=\"151\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\n    <rect x=\"375\" y=\"199\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\n    <rect x=\"386\" y=\"222\" rx=\"3\" ry=\"3\" width=\"102\" height=\"7\" />\n    <rect x=\"375\" y=\"249\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\n    <rect x=\"386\" y=\"273\" rx=\"3\" ry=\"3\" width=\"102\" height=\"7\" />\n    <rect x=\"375\" y=\"300\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\n    <rect x=\"5\" y=\"68\" rx=\"3\" ry=\"3\" width=\"639\" height=\"7\" />\n\n    <rect x=\"4\" y=\"350\" rx=\"3\" ry=\"3\" width=\"122\" height=\"26\" />\n    <rect x=\"4\" y=\"418\" rx=\"3\" ry=\"3\" width=\"7\" height=\"330\" />\n    <rect x=\"6\" y=\"740\" rx=\"3\" ry=\"3\" width=\"639\" height=\"8\" />\n    <rect x=\"640\" y=\"418\" rx=\"3\" ry=\"3\" width=\"6\" height=\"330\" />\n    <rect x=\"4\" y=\"420\" rx=\"3\" ry=\"3\" width=\"295\" height=\"325\" />\n    <rect x=\"346\" y=\"451\" rx=\"3\" ry=\"3\" width=\"231\" height=\"29\" />\n    <rect x=\"382\" y=\"533\" rx=\"3\" ry=\"3\" width=\"102\" height=\"7\" />\n    <rect x=\"372\" y=\"501\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\n    <rect x=\"375\" y=\"549\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\n    <rect x=\"386\" y=\"572\" rx=\"3\" ry=\"3\" width=\"102\" height=\"7\" />\n    <rect x=\"375\" y=\"599\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\n    <rect x=\"386\" y=\"623\" rx=\"3\" ry=\"3\" width=\"102\" height=\"7\" />\n    <rect x=\"375\" y=\"650\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\n    <rect x=\"5\" y=\"418\" rx=\"3\" ry=\"3\" width=\"639\" height=\"7\" />\n    \n  </ContentLoader>\n)\n\nexport default SearchDisplayLoader","import React from \"react\"\nimport ContentLoader from \"react-content-loader\" \n\nconst SearchDisplayMobileLoader = props => (\n  <ContentLoader \n    speed={2}\n    width={'100%'}\n    height={'100%'}\n    viewBox=\"0 0 600 1300\"\n    backgroundColor=\"#f3f3f3\"\n    foregroundColor=\"#ecebeb\"\n    {...props}\n  >\n    <rect x=\"5\" y=\"20\" rx=\"0\" ry=\"0\" width=\"222\" height=\"50\" /> \n    <rect x=\"5\" y=\"103\" rx=\"0\" ry=\"0\" width=\"5\" height=\"800\" /> \n    <rect x=\"5\" y=\"103\" rx=\"0\" ry=\"0\" width=\"580\" height=\"5\" /> \n    <rect x=\"585\" y=\"103\" rx=\"0\" ry=\"0\" width=\"5\" height=\"800\" /> \n    <rect x=\"5\" y=\"900\" rx=\"0\" ry=\"0\" width=\"580\" height=\"5\" /> \n    <rect x=\"5\" y=\"103\" rx=\"0\" ry=\"0\" width=\"580\" height=\"450\" /> \n    <rect x=\"55\" y=\"603\" rx=\"0\" ry=\"0\" width=\"480\" height=\"40\" /> \n    <rect x=\"55\" y=\"663\" rx=\"0\" ry=\"0\" width=\"480\" height=\"20\" /> \n    <rect x=\"70\" y=\"703\" rx=\"0\" ry=\"0\" width=\"450\" height=\"20\" /> \n    <rect x=\"55\" y=\"743\" rx=\"0\" ry=\"0\" width=\"480\" height=\"20\" /> \n    <rect x=\"250\" y=\"803\" rx=\"0\" ry=\"0\" width=\"100\" height=\"50\" /> \n\n  </ContentLoader>\n)\n\nexport default SearchDisplayMobileLoader","import React from 'react';\nimport { Row } from 'react-bootstrap';\nimport Col from 'react-bootstrap/Col'\nimport SearchCard from './SearchCard'\nimport './SearchDisplay.css'\nimport MapContainer from '../Map/MapContainer'\nimport SearchDisplayLoader from './SearchDisplayLoader'\nimport SearchDisplayLoaderMobile from './SearchDisplayLoaderMobile'\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\n\nclass SearchDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stores: [],\n      // center: {\n      //   lat: 0.0,\n      //   lng: 0.0\n      // },\n      zoom: 11,\n      mapStyles: {\n        width: '100%',\n        height: '100%'\n      },\n      center: {\n        lat: '',\n        lng: ''\n      },\n\n      loading: true,\n      query: this.props.location.search,\n      ownUpdate: false\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.location.state && this.props.location.state.stores && this.props.location.state.center) {\n      this.setState({\n        stores: this.props.location.state.stores,\n        center: this.props.location.state.center,\n        loading: false\n      })\n    }\n    else {\n      let link = window.location.href.split(\"search\")\n      let query = \"\"\n\n      if (link.length > 1) {\n        query = link[1]\n      }\n\n      this.getResults(false, query);\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, preState) {\n    if (preState.ownUpdate) {\n      return null\n    }\n    else {\n      if(nextProps.location.search !== preState.query) {\n        return {\n          loading: true\n        }\n      } else {\n        return null\n      }\n    }\n\n\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location) {\n      if (this.props.location.search !== prevProps.location.search) {\n        this.getResults(true, this.props.location.search);\n      }\n    }\n  }\n\n  getResults(update, query) {\n    fetch(fetchDomain + '/stores' + query, {\n      method: \"GET\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      credentials: 'include'\n    })\n      .then(function (response) {\n        if (response.status !== 200) {\n          // should throw an error here\n          console.log(\"ERROR!\")\n        }\n        else {\n          return response.json();\n        }\n      })\n      .then(data => {\n        if (data) {\n          this.setState({\n            stores: data,\n            center: {\n              lat: data[0].lat,\n              lng: data[0].lng,\n            },\n            loading: false,\n            ownUpdate: update\n          })\n        }\n      });\n  }\n\n  render() {\n    const RenderStoreCards = (props) => {\n      return this.state.stores.map(store => (\n          <SearchCard key={\"store-\" + store.id} store={store}\n            onClickFunctionBook={() => window.location.href = '/book/' + store.id}\n            onClickFunctionStore={() => window.location.href = '/stores/' + store.id}\n          />\n      ))\n    }\n    const DisplayWithLoading = (props) => {\n      if (this.state.loading) {\n        return <Row>\n            <Col xs=\"12\">\n              <SearchDisplayLoader className={'d-none d-xl-block'}/>\n              <SearchDisplayLoaderMobile className={'d-block d-xl-none'}/>\n            </Col>\n          </Row>\n      } else if(this.state.stores.length > 0) {\n        return(<div>\n          <h3 className=\"text-left\"> {this.state.stores.length} results </h3>\n          <Row className=\"mx-0 justify-content-center search-cards-row\">\n            <RenderStoreCards/>\n          </Row>\n        </div>\n        )\n      } else {\n        return <Row>\n            <Col xs=\"12\">\n              <h5>No results!</h5>\n            </Col>\n          </Row>\n      }\n    }\n\n    const DisplayMapDynamic = (props) => {\n        return <MapContainer google={window.google}\n        stores={this.state.stores}\n        center={this.state.center}\n        zoom={this.state.zoom}\n        mapStyles={this.state.mapStyles} />\n    }\n\n    return (\n      <div>\n        <Row className=\"restrict-viewport mx-0\">\n          <Col xs={12} xl={6} className=\"px-5 my-3 h-100\">\n            <DisplayWithLoading/>\n          </Col>\n          <Col id=\"map\" xs={12} xl={6}>\n            <div className=\"position-fixed h-100 w-50 d-none d-xl-block\">\n              <DisplayMapDynamic/>\n            </div>\n          </Col>\n        </Row>\n      </div>\n\n    );\n  }\n}\n\nexport default SearchDisplay;\n","import React from 'react';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport './ServiceSelection.css'\nimport { Form, Button } from 'react-bootstrap';\n\nclass ServiceSelection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categories: ['Nails', 'Hair', 'Makeup', 'Eyelashes', 'Eyebrows', 'Facials', 'Skin Care']\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    let currService = this.props.services.find(x => x.name === event.target.id)\n    if (this.props.selectedServices.find(x => x.name === currService.name)) {\n      this.props.updateReservation(true, currService)\n    }\n    else {\n      this.props.updateReservation(false, currService);\n    }\n    this.setState({ [event.target.id]: !this.state[event.target.id] })\n  }\n\n  render() {\n    let that = this;\n    const ServiceCheckBoxes = (props) => {\n      if (props.services) {\n        const categories = props.categories.map((category) => {\n          return <div id={category} key={category} className=\"pl-4\">\n              <h4>{category}</h4>\n              {\n                props.services.map((service) => {\n                  if(service.category == category) {\n                    return <div key={service.name}>\n                      <Row>\n                        <Col xs='8' sm='10'>\n                          <Form.Check\n                            custom\n                            type=\"checkbox\" \n                            id={service.name}\n                            label={service.name} \n                            checked={this.props.selectedServices.find(x => x.name === service.name)}\n                            onChange={this.handleChange}\n                            className='formCustom'\n                          />\n                        </Col>\n                        <Col xs='4' sm='2'>\n                          <h5 className=\"pt-2 text-center\">${service.cost.toFixed(2)}</h5>\n                        </Col>\n                      </Row>\n                    </div>\n                  }\n                })\n              }\n            </div>\n        })\n        return categories\n      }\n      return null\n    }\n    return (\n      <Card className='py-3'>\n        <h3>Select Services</h3>\n          <Row className=\"text-left\">\n            <Col>\n              <ServiceCheckBoxes categories={this.state.categories} services={this.props.services} />\n            </Col>\n          </Row>\n          <Row className=\"justify-content-center\">\n            <Col md=\"3\">\n            <Button block onClick={this.props.handleSubmit}>Next</Button>\n            </Col>\n          </Row>\n        \n      </Card>\n      \n    );\n  }\n}\n\nexport default ServiceSelection;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './DateSelection.css';\nimport { Form, Button } from 'react-bootstrap';\nimport store from '../../reduxFolder/store';\nimport { addAlert } from '../../reduxFolder/actions/alert'\nimport GridLoader from 'react-spinners/GridLoader'\nimport { css } from '@emotion/core'\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n`;\n\nclass DateSelection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startDate: new Date(),\n      currDate: new Date(),\n      selectedTime: 540,\n      loading: true,\n      appointments: []\n    };\n  }\n\n  handleDateChange = date => {\n    if (date.getMonth() != this.state.startDate.getMonth()) {\n      this.setState({\n        loading: true\n      })\n      fetch(fetchDomain + '/stores/' + this.props.store_id + '/appointments/month/' + (parseInt(date.getMonth()) + 1), {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      })\n        .then(function (response) {\n          if (response.status !== 200) {\n            store.dispatch(addAlert(response))\n          }\n          else {\n            return response.json()\n          }\n        })\n        .then(data => {\n          let parsedData = data.map(appointment => {\n            appointment.date = new Date(appointment.date)\n            return appointment\n          })\n          this.setState({\n            appointments: parsedData,\n            currDate: date,\n            startDate: date,\n            loading: false\n          })\n        });\n    }\n    this.setState({\n      currDate: date\n    });\n  };\n\n  handleSelectChange = (event) => {\n    this.setState({\n      selectedTime: parseInt(event.target.value)\n    });\n  };\n\n  handleSlotClick = (schedule) => {\n    this.props.updateAppointments(schedule)\n    this.props.handleSubmit()\n  }\n\n  convertMinsToHrsMins(mins) {\n    let h = Math.floor(mins / 60);\n    let m = mins % 60;\n    let am = false\n    if (h == 24) {\n      am = true\n      h -= 12\n    }\n    else if (h < 12) {\n      am = true\n    } else if (h != 12) {\n      h -= 12\n    }\n    h = h < 10 ? '0' + h : h;\n    if (h == 0) {\n      h = '12'\n    }\n    m = m < 10 ? '0' + m : m;\n    if (am) {\n      return `${h}:${m}am`;\n    } else {\n      return `${h}:${m}pm`;\n    }\n\n  }\n\n  componentDidMount() {\n    console.log(\"startdate is: \", this.state.startDate)\n    fetch(fetchDomain + '/stores/' + this.props.store_id + '/appointments/month/' + (parseInt(this.state.startDate.getMonth()) + 1), {\n      method: \"GET\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      credentials: 'include'\n    })\n      .then(function (response) {\n        if (response.status !== 200) {\n          store.dispatch(addAlert(response))\n        }\n        else {\n          return response.json()\n        }\n      })\n      .then(data => {\n        let parsedData = data.map(appointment => {\n          appointment.date = new Date(appointment.date + ' UTC')\n          return appointment\n        })\n        console.log(\"received these appointments: \", parsedData)\n        this.setState({\n          appointments: parsedData,\n          loading: false\n        })\n      });\n  }\n\n  render() {\n    const CreateTimeSelects = (props) => {\n      let items = [];\n      for (let i = this.props.storeHours[this.state.startDate.getDay()].open_time; i + this.props.time <= this.props.storeHours[this.state.startDate.getDay()].close_time; i += 60) {\n        items.push(<option key={i} value={i}>{this.convertMinsToHrsMins(i)}</option>);\n      }\n      return items;\n    }\n\n    const SlotsAtSelectedTime = () => {\n      let slots = []\n      let schedules = []\n      // Loop through different appointment start times for the day\n      for (let i = this.state.selectedTime; (i < this.state.selectedTime + 120 && i + this.props.time <= this.props.storeHours[this.state.currDate.getDay()].close_time); i += 15) {\n        let currTime = i\n        let foundSchedule = false\n        let currSchedule = []\n        let currDaySchedules = this.props.workersSchedules.filter(element => element.day_of_the_week == this.state.currDate.getDay());\n        let scheduleStillWorks = true\n        // We're going to increment through the workers that are scheduled for today and build a schedule bit by bit until we finish or realize there are no more appointments for the day\n        // Don't want to lose the original values of currTime, currService, and k when we continue ahead in our schedule\n        let currScheduleCurrTime = currTime\n        let currScheduleCurrWorkerIndex = 0\n        let currScheduleServiceIndex = 0\n        // console.log(\"current time is: \", this.convertMinsToHrsMins(currTime))\n        // Start building our schedule\n        while (scheduleStillWorks && !foundSchedule) {\n          let available = true\n          let currScheduleCurrService = this.props.selectedServices[currScheduleServiceIndex]\n          let currScheduleCurrWorker = currDaySchedules[currScheduleCurrWorkerIndex].worker_id\n          // console.log(\"checking if appointment is in worker's hours: \")\n          // console.log(\"currworker works from: \", currDaySchedules[currScheduleCurrWorkerIndex].start_time, \"-\",  currDaySchedules[currScheduleCurrWorkerIndex].end_time)\n          // console.log(\"trying to match with appointment from: \", this.convertMinsToHrsMins(currScheduleCurrTime), \"-\", this.convertMinsToHrsMins(currScheduleCurrTime + currScheduleCurrService.duration))\n          // Check if appointment is within worker's hours\n          if (currDaySchedules[currScheduleCurrWorkerIndex].start_time > currScheduleCurrTime || currDaySchedules[currScheduleCurrWorkerIndex].end_time < (currScheduleCurrTime + currScheduleCurrService.duration)) {\n            available = false\n          } else {\n            let currWorkerAppointments = this.state.appointments.filter((appointment) => {\n              return appointment.worker_id == currScheduleCurrWorker && appointment.date.setHours(0, 0, 0, 0) == this.state.currDate.setHours(0, 0, 0, 0)\n            })\n            // console.log(\"Within bounds, checking for conflicts. \")\n            // Check for conflicts via worker's existing appointments for the day\n            // console.log(\"currWorkers appointments: \", currWorkerAppointments)\n            for (let m = 0; m < currWorkerAppointments.length; m++) {\n              if ((currScheduleCurrTime >= currWorkerAppointments[m].start_time && currScheduleCurrTime <= currWorkerAppointments[m].end_time) || (currScheduleCurrTime + currScheduleCurrService.duration >= currWorkerAppointments[m].start_time && currScheduleCurrTime + currScheduleCurrService.duration <= currWorkerAppointments[m].end_time)) {\n                // console.log(\"conflict found with because of slot from: \", this.convertMinsToHrsMins(currWorkerAppointments[m].start_time), \"-\", this.convertMinsToHrsMins(currWorkerAppointments[m].end_time))\n                // Worker is unavailable\n                available = false\n                break\n              }\n            }\n          }\n\n          if (available) {\n            // Add slot to the schedule we are building\n            currSchedule.push({ worker_id: currScheduleCurrWorker, service_id: currScheduleCurrService.id, start_time: currScheduleCurrTime, end_time: currScheduleCurrTime + currScheduleCurrService.duration, price: currScheduleCurrService.cost, date: this.state.startDate })\n            currScheduleCurrTime += currScheduleCurrService.duration\n            currScheduleServiceIndex += 1\n            //NOTE, will always cycle to first worker. What if we want to maintain worker for entire appointment duration? May be worth refactoring for continuity. \n            currScheduleCurrWorkerIndex = 0\n            if (currScheduleServiceIndex == this.props.selectedServices.length) {\n              //We've found a worker for each service in the appointment. We're done. \n              foundSchedule = true\n            }\n          } else if (currScheduleCurrWorkerIndex + 1 < currDaySchedules.length) {\n            // continue checking if there's another worker available for this service\n            currScheduleCurrWorkerIndex += 1\n          } else {\n            // no workers were available for this appointment. \n            // NOTE: it may be possible, in the case where there are multiple services selected for the appointment, that there is still some combination of worker slots to make this appointment work. I'm only checking linearly. This may be worth refactoring for better scheduling, but the tradeoff is increased complexity in scheduling. \n            scheduleStillWorks = false\n          }\n        }\n\n        if (foundSchedule) {\n          schedules.push(currSchedule)\n          slots.push(<Button className=\"mt-3 mx-2\" key={i} onClick={() => this.handleSlotClick(currSchedule)}>{this.convertMinsToHrsMins(i)}</Button>)\n        }\n      }\n      if (slots.length == 0) {\n        return <h1>No available appointments</h1>\n      }\n      return slots\n    }\n\n    const DisplayWithLoading = (props) => {\n      if (this.state.loading) {\n        return <Row className=\"vertical-center\">\n          <Col>\n            <GridLoader\n              css={override}\n              size={20}\n              color={\"#2196f3\"}\n              loading={this.state.isLoading}\n            />\n          </Col>\n        </Row>\n      } else {\n        return <Row className=\"justify-content-center text-xs-center text-sm-left pl-2\">\n          <Col xs=\"12\" md=\"11\" className=\"px-1\">\n            {/* Maybe want to have this with multiple rows, each row belongs to technician. One last row is technician mix to make the appointment work out */}\n            <SlotsAtSelectedTime />\n          </Col>\n        </Row>\n\n      }\n    }\n\n    return (\n      <Card\n        text='dark'\n        className='mt-0 py-3'\n        style={{overflow: 'visible'}}\n      >\n        <div id=\"date-selection-form\">\n          <h3>Select Appointment Time</h3>\n          <Card.Body className='pt-0'>\n            <Row className='justify-content-center'>\n              <Col xs=\"11\" md=\"6\" className=\"mt-3\">\n                <div className=\"customDatePickerWidth\">\n                  <DatePicker\n                    className=\"form-control\"\n                    selected={this.state.currDate}\n                    onChange={this.handleDateChange}\n                    minDate={new Date()}\n                    popperModifiers={{\n                      flip: {\n                          behavior: [\"bottom\"] // don't allow it to flip to be above\n                      }\n                    }}\n                  />\n                </div>\n              </Col>\n              <Col xs=\"11\" md=\"6\" className=\"mt-3\">\n                <Form>\n                  <Form.Control as=\"select\" value={this.state.selectedTime} onChange={this.handleSelectChange.bind(this)}>\n                    <CreateTimeSelects date={this.state.startDate} />\n                  </Form.Control>\n                </Form>\n              </Col>\n            </Row>\n            <DisplayWithLoading />\n          </Card.Body>\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default DateSelection;","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport './BookingPage.css';\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport { FaEnvelope, FaUser, FaPhone } from 'react-icons/fa';\nimport { Formik } from 'formik';\nimport { Form, Button } from 'react-bootstrap';\nimport store from '../../reduxFolder/store';\nimport { addAlert } from '../../reduxFolder/actions/alert'\nimport GridLoader from 'react-spinners/GridLoader'\nimport { css } from '@emotion/core'\nimport Cookies from 'js-cookie';\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n`;\n\nclass BookingPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: '',\n      lastName: '',\n      phone: '',\n      email: '',\n      user_id: -1,\n    };\n    this.triggerAppointmentDisplay = this.triggerAppointmentDisplay.bind(this);\n  }\n\n  // redirect to the appointment display page and pass the new store data\n  triggerAppointmentDisplay(returnedAppointment) {\n    this.props.history.push({\n      pathname: '/appointments/' + returnedAppointment,\n      state: {\n        appointmentGroupId: returnedAppointment\n      }\n    })\n  }\n\n  convertMinsToHrsMins(mins) {\n    let h = Math.floor(mins / 60);\n    let m = mins % 60;\n    let am = false\n    if (h == 24) {\n      am = true\n      h -= 12\n    }\n    else if (h < 12) {\n      am = true\n    } else if (h != 12) {\n      h -= 12\n    }\n    h = h < 10 ? '0' + h : h;\n    if (h == 0) {\n      h = '12'\n    }\n    m = m < 10 ? '0' + m : m;\n    if (am) {\n      return `${h}:${m}am`;\n    } else {\n      return `${h}:${m}pm`;\n    }\n\n  }\n\n  componentDidMount () {\n    if(Cookies.get('user')){\n      let user = JSON.parse(Cookies.get('user').substring(2))\n      this.setState({\n        firstName: user.first_name,\n        lastName: user.last_name,\n        email: user.email,\n        phone: user.phone,\n        user_id: user.id\n      })\n    }\n  }\n\n  render() {\n    const DisplayWithLoading = (props) => {\n      if (this.state.loading) {\n        return <Card\n        text='dark'\n        className='mt-0 py-3'\n      >\n        <Card.Body className='pt-0'>\n          <Row className=\"vertical-center\">\n            <Col>\n              <GridLoader\n                css={override}\n                size={20}\n                color={\"#2196f3\"}\n                loading={this.state.isLoading}\n              />\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n      } else {\n        return <Card text='dark'\n        className='mt-0 py-3' id=\"date-selection-form\">\n          <Card.Title>Book Appointment</Card.Title>\n          <Card.Body className='pt-0'>\n            <Row className='justify-content-center'>\n              <Formik\n                initialValues={{\n                  firstName: this.state.firstName,\n                  lastName: this.state.lastName,\n                  phone: this.state.phone,\n                  email: this.state.email,\n                  user_id: this.state.user_id\n                }}\n                onSubmit={(values) => {\n                  values.appointments = this.props.appointments\n                  let triggerAppointmentDisplay = this.triggerAppointmentDisplay\n\n                  fetch(fetchDomain + '/stores/' + this.props.store_id + '/appointments/new', {\n                    method: \"POST\",\n                    headers: {\n                      'Content-type': 'application/json',\n                      'Accept': 'application/json'\n                    },\n                    credentials: 'include',\n                    body: JSON.stringify(values)\n                  })\n                    .then(function (response) {\n                      if (response.status !== 200) {\n                        // throw an error alert\n                        store.dispatch(addAlert(response))\n                      }\n                      else {\n                        return response.json();\n                      }\n                    })\n                    .then(async data => {\n                      if (data) {\n                        triggerAppointmentDisplay(data)\n                      }\n                    });\n                }}\n              >\n                {({ values,\n                  errors,\n                  touched,\n                  handleChange,\n                  handleBlur,\n                  handleSubmit,\n                  setFieldValue\n                }) => (\n                    <Form className=\"form-style\">\n\n                      <Form.Group controlId=\"formFirstName\">\n                        <InputGroup>\n                          <InputGroup.Prepend>\n                            <InputGroup.Text>\n                              <FaUser />\n                            </InputGroup.Text>\n                          </InputGroup.Prepend>\n                          <Form.Control\n                            type=\"text\"\n                            name=\"firstName\"\n                            value={values.firstName}\n                            placeholder=\"First Name\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            className={touched.firstName && errors.firstName ? \"error\" : null} />\n                        </InputGroup>\n                        {touched.firstName && errors.firstName ? (\n                          <div className=\"error-message\">{errors.firstName}</div>\n                        ) : null}\n                      </Form.Group>\n\n                      <Form.Group controlId=\"formLastName\">\n                        <InputGroup>\n                          <InputGroup.Prepend>\n                            <InputGroup.Text>\n                              <FaUser />\n                            </InputGroup.Text>\n                          </InputGroup.Prepend>\n                          <Form.Control\n                            type=\"text\"\n                            name=\"lastName\"\n                            value={values.lastName}\n                            placeholder=\"Last Name\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            className={touched.lastName && errors.lastName ? \"error\" : null} />\n                        </InputGroup>\n                        {touched.lastName && errors.lastName ? (\n                          <div className=\"error-message\">{errors.lastName}</div>\n                        ) : null}\n                      </Form.Group>\n\n                      <Form.Group controlId=\"formPhone\">\n                        <InputGroup>\n                          <InputGroup.Prepend>\n                            <InputGroup.Text>\n                              <FaPhone />\n                            </InputGroup.Text>\n                          </InputGroup.Prepend>\n                          <Form.Control type=\"text\"\n                            value={values.phone}\n                            placeholder=\"Phone Number\"\n                            name=\"phone\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            className={touched.phone && errors.phone ? \"error\" : null} />\n                        </InputGroup>\n                        {touched.phone && errors.phone ? (\n                          <div className=\"error-message\">{errors.phone}</div>\n                        ) : null}\n                      </Form.Group>\n\n                      <Form.Group controlId=\"formEmail\">\n                        <InputGroup>\n                          <InputGroup.Prepend>\n                            <InputGroup.Text>\n                              <FaEnvelope />\n                            </InputGroup.Text>\n                          </InputGroup.Prepend>\n                          <Form.Control\n                            type=\"email\"\n                            value={values.email}\n                            placeholder=\"Email\"\n                            name=\"email\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            className={touched.email && errors.email ? \"error\" : null} />\n                        </InputGroup>\n                        {touched.email && errors.email ? (\n                          <div className=\"error-message\">{errors.email}</div>\n                        ) : null}\n                      </Form.Group>\n\n                      <Button onClick={handleSubmit}>Submit</Button>\n                    </Form>\n                  )}\n              </Formik>\n            </Row>\n          </Card.Body>\n        </Card>\n      }\n    }\n\n    return (\n      <DisplayWithLoading />\n    );\n  }\n}\n\nexport default BookingPage;","import React from 'react';\nimport './BookingPage.css';\nimport LoginForm from '../User/LoginForm';\nimport SignupForm from '../User/SignupForm';\n\nclass RedirectToLogin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayLogin: true\n    };\n    this.toggleLogin = this.toggleLogin.bind(this);\n    this.triggerSignInRedirect = this.triggerSignInRedirect.bind(this);\n  }\n\n  // redirect to the login page and pass the appointment data\n  triggerSignInRedirect() {\n    this.props.history.push({\n      pathname: '/login',\n      state: {\n        appointments: this.props.appointments\n      }\n    })\n  }\n\n  // redirect to the login page and pass the appointment data\n  triggerSignUpRedirect() {\n    this.props.history.push({\n      pathname: '/signup',\n      state: {\n        appointments: this.props.appointments\n      }\n    })\n  }\n\n  toggleLogin(newValue) {\n    this.setState({\n      displayLogin: newValue\n    })\n  }\n\n  render() {\n    const RenderLoginOrSignup = (props) => {\n      if(this.state.displayLogin) {\n        return <LoginForm appointments={this.props.appointments} store_id={this.props.store_id} history={this.props.history} title=\"Login to continue.\" toggleLogin={this.toggleLogin}/>\n      } else {\n        return <SignupForm appointments={this.props.appointments} store_id={this.props.store_id} history={this.props.history} toggleLogin={this.toggleLogin}/>\n      }\n    }\n\n    return (\n      <RenderLoginOrSignup/>\n    );\n  }\n}\n\nexport default RedirectToLogin;","import React from 'react';\nimport Container from 'react-bootstrap/Container'\nimport ServiceSelection from './ServiceSelection'\nimport './ReservationPage.css'\nimport { Row, Col, Card, ListGroup } from 'react-bootstrap'\nimport { FaArrowLeft } from 'react-icons/fa'\nimport DateSelection from './DateSelection'\nimport { css } from '@emotion/core'\nimport GridLoader from 'react-spinners/GridLoader'\nimport BookingPage from './BookingPage';\nimport RedirectToLogin from './RedirectToLogin'\nimport Cookies from 'js-cookie';\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n`;\n\nclass ReservationPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      storeName: null,\n      total: 0,\n      time: 0,\n      currentStep: 1,\n      selectedServices: [],\n      services: [],\n      loading: true,\n      workers: [],\n      workersSchedules: [],\n      storeHours: [],\n      appointments: \"original value\"\n    };\n  }\n\n  updateReservation = (removal, currService) => {\n    if (removal) {\n      this.setState({ time: this.state.time - currService.duration })\n      this.setState({ total: this.state.total - currService.cost })\n      this.setState({\n        selectedServices: this.state.selectedServices.filter(function (selectedService) {\n          return currService.id !== selectedService.id;\n        }\n        )\n      })\n    } else {\n      this.setState({ time: this.state.time + currService.duration })\n      this.setState({ total: this.state.total + currService.cost })\n      this.setState({ selectedServices: [...this.state.selectedServices, currService] })\n    }\n  }\n\n  backStep = (event) => {\n    var newStep = this.state.currentStep - 1\n    this.setState({\n      currentStep: newStep\n    })\n  }\n\n  handleSubmit = () => {\n    if (this.state.currentStep < 4) {\n      var newStep = this.state.currentStep + 1\n      this.setState({\n        currentStep: newStep\n      })\n    } else {\n      alert(JSON.stringify(this.state));\n    }\n  }\n\n  updateAppointments = (receivedAppointments) => {\n    this.setState({\n      appointments: receivedAppointments\n    })\n  }\n\n  pluralize = (val, word, plural = word + 's') => {\n    const _pluralize = (num, word, plural = word + 's') =>\n      [1, -1].includes(Number(num)) ? word : plural;\n    if (typeof val === 'object') return (num, word) => _pluralize(num, word, val[word]);\n    return _pluralize(val, word, plural);\n  };\n\n  timeConvert = (n) => {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" \" + this.pluralize(rhours, 'hour') + \" and \" + rminutes + \" \" + this.pluralize(rminutes, 'minute');\n  }\n\n  prefetchSchedules = () => {\n    Promise.all([\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/workers/schedules', {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      }).then(value => value.json()),\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/storeHours\", {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      }).then(value => value.json())\n    ]).then(allResponses => {\n      this.setState({\n        storeHours: allResponses[1],\n        workersSchedules: allResponses[0]\n      })\n    })\n  }\n\n  componentDidMount() {\n    // need to get store category, fetch?\n    Promise.all([\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/services\", {\n      method: \"GET\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      credentials: 'include'\n    }).then(value => value.json()),\n    fetch(fetchDomain + '/stores/' + this.props.match.params.store_id, {\n      method: \"GET\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      credentials: 'include'\n    }).then(value => value.json())\n    ]).then(allResponses => {\n      const response1 = allResponses[0]\n      const response2 = allResponses[1]\n      if(this.props.location.currentStep && this.props.location.appointments) {\n        this.setState({\n          appointments: this.props.appointments,\n          currentStep: this.props.currentStep\n        })\n      }\n      this.setState({\n        services: response1,\n        storeName: response2.name,\n        workers: response2.workers,\n        loading: false\n      })\n    })\n\n    this.prefetchSchedules()\n  }\n\n  static getDerivedStateFromProps(nextProps, preState) {\n    if(nextProps.location.appointments && nextProps.location.appointments !== preState.appointments) {\n      return {\n        appointments: nextProps.location.appointments,\n        currentStep: nextProps.location.currentStep\n      }\n    } else {\n      return null\n    }\n  }\n\n\n  render() {\n    let that = this;\n    const DisplayByStep = (props) => {\n      if (this.state.loading) {\n        return <Card className=\"fullHeight\">\n          <Row className=\"vertical-center\">\n            <Col>\n              <GridLoader\n                css={override}\n                size={20}\n                color={\"#2196f3\"}\n                loading={this.state.loading}\n              />\n            </Col>\n          </Row>\n        </Card>\n      } else {\n        if (this.state.currentStep == 1) {\n          return <ServiceSelection services={this.state.services} updateReservation={this.updateReservation} selectedServices={this.state.selectedServices} time={this.state.time} total={this.state.total} handleSubmit={this.handleSubmit} timeConvert={this.timeConvert} pluralize={this.pluralize} />\n        } else if(this.state.currentStep == 2) {\n          return <DateSelection time={this.state.time}  store_id={this.props.match.params.store_id} selectedServices={this.state.selectedServices} storeHours={this.state.storeHours} workersSchedules={this.state.workersSchedules} handleSubmit={this.handleSubmit} updateAppointments={this.updateAppointments}/>\n        } else {\n          if(Cookies.get('user')){\n            return <BookingPage appointments={this.state.appointments} store_id={this.props.match.params.store_id} history={this.props.history}/>\n          } else {\n            return <RedirectToLogin appointments={this.state.appointments} store_id={this.props.match.params.store_id} history={this.props.history}/>\n          }\n        }\n      }\n    }\n\n    const DisplayBackButton = (props) => {\n      if (this.state.currentStep == 1) {\n        return null\n      } else {\n        return <FaArrowLeft size={'2em'} className=\"pt-2 pr-2\" onClick={this.backStep} />\n      }\n    }\n\n    function ServiceList(props) {\n      if (props.services) {\n        const servicesList = props.services.map((service) => {\n          return <ListGroup.Item variant=\"light\" key={service.name}>\n            <Row>\n              <Col lg={7}>\n                <Row>\n                  {service.name}\n                </Row>\n                <Row className=\"smallText\">\n                  {service.duration} {that.pluralize(service.duration, 'minute')}\n                </Row>\n              </Col>\n              <Col lg={5}>\n                <div className=\"float-right\">\n                  ${service.cost.toFixed(2)}\n                </div>\n              </Col>\n            </Row>\n          </ListGroup.Item>;\n        });\n\n        return (\n          <ListGroup variant='flush'>{servicesList}</ListGroup>\n        );\n      }\n      return null\n    }\n\n    return (\n      <Container fluid>\n        <Row noGutters className=\"pt-3 pb-0\">\n          <Col xs=\"1\">\n            <DisplayBackButton />\n          </Col>\n          <Col xs=\"11\" className=\"text-left\">\n            <h2>Step {this.state.currentStep}</h2>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={12} lg={8} className=\"largeMarginBottom\">\n            <DisplayByStep />\n          </Col>\n          <Col xs={12} lg={4} className=\"d-none d-lg-block\">\n            <Card\n              text='dark'\n              className='shoppingCart mt-0'\n            >\n              <Card.Header>Shopping Cart</Card.Header>\n              <Card.Body className='pt-0'>\n                <Row className='text-left'>\n                  <Col>\n                    <ServiceList services={this.state.selectedServices} />\n                  </Col>\n                </Row>\n\n                <h2>Total: ${this.state.total.toFixed(2)}</h2>\n                <h2>Time: {this.state.time} minutes</h2>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col xs={12} className=\"d-lg-none shoppingCartSmall px-0\">\n            <Card\n              bg='light'\n              text='dark'\n            >\n              <Card.Header className='py-1'>Shopping Cart</Card.Header>\n              <Card.Body className=\"smallPadding\">\n                <h6>{this.state.selectedServices.length} Selected {this.pluralize(this.state.selectedServices.length, 'Service')}</h6>\n                <h6>Total: ${this.state.total.toFixed(2)}</h6>\n                <h6>Time: {this.timeConvert(this.state.time)}</h6>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n\n\n      </Container>\n    );\n  }\n}\n\nexport default ReservationPage;","const fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\n// export let getPictures = async(prefixPassed) => {\n// module.exports.getPictures = async function(prefixPassed) {\n//   await getPictures(prefixPassed);\n// }\n// var getPictures = async function(prefixPassed) {\n\n// getting an export error, going to leave it for now\n\nasync function getPictures(prefixPassed) {\n  const response = await fetch(fetchDomain + '/getImages', {\n      method: \"POST\",\n      headers: {\n          'Content-type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({prefix: prefixPassed})\n    })\n  const pictures = await response.json()\n\n  return pictures\n}\n\n// function for uploading all selected files to s3\nasync function uploadHandler(prefix, selectedFiles) {\n  // upload each image to s3\n  // have to get presigned url from server before uploading directly\n  for(let i = 0; i < selectedFiles.length; i++){\n    var tempDate = new Date();\n    var date = '_' + tempDate.getFullYear() + '-' + (tempDate.getMonth()+1) + '-' + tempDate.getDate() +' '+ tempDate.getHours()+':'+ tempDate.getMinutes()+':'+ tempDate.getSeconds();\n\n    let values = {\n      fileName: prefix + selectedFiles[i].name + date, // add the current time so its unique..\n      fileType: selectedFiles[i].type\n    }\n\n    const response = await fetch(fetchDomain + '/getPresignedUrl/', {\n      method: \"POST\",\n      headers: {\n          'Content-type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify(values)\n    })\n    const url = await response.json()\n\n    const responseS3 = await fetch(url, {\n        method: \"PUT\",\n        headers: {\n            'Content-type': selectedFiles[i].type\n        },\n        body: selectedFiles[i]\n      })\n    \n    // if(responseS3.status!==200){\n    //   // throw an error alert\n    //   store.dispatch(addAlert(response))\n    // }\n  }\n}\n\n// function for uploading all selected files to s3\nasync function deleteHandler(keysPassed) {\n  // remove each image from s3\n  const response = await fetch(fetchDomain + '/deleteImages/', {\n    method: \"POST\",\n    headers: {\n        'Content-type': 'application/json'\n    },\n    credentials: 'include',\n    body: JSON.stringify({keys: keysPassed})\n  })\n}\n\nexport { getPictures, uploadHandler, deleteHandler}","import React from 'react';\nimport '../../App.css';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport { FaShoppingCart, FaRoad, FaBuilding, FaUniversity, FaGlobe, FaPen, FaPhone, FaMap } from 'react-icons/fa';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport Select from 'react-select';\nimport Cookies from 'js-cookie';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {updateRole} from '../../reduxFolder/actions/user.js'\nimport {addStore} from '../../reduxFolder/actions/stores.js'\nimport {\n  addAlert\n} from '../../reduxFolder/actions/alert'\nimport store from '../../reduxFolder/store';\nimport { uploadHandler } from '../s3';\nimport { Multiselect } from 'multiselect-react-dropdown';\n\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\nconst helper = require('../Search/helper.js');\n\n\nclass StoreSignupForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n      category: helper.getCategories(),\n      categoryError: false,\n      selected: [],\n      selectedFiles: [],\n      storeHours: [{ open_time: 540, close_time: 1020 },\n      { open_time: 540, close_time: 1020 },\n      { open_time: 540, close_time: 1020 },\n      { open_time: 540, close_time: 1020 },\n      { open_time: 540, close_time: 1020 },\n      { open_time: 540, close_time: 1020 },\n      { open_time: 540, close_time: 1020 }],\n      address: []\n    }\n\n    // options for store categories\n    // this.options = [\n    //   { value: 'nails', label: 'Nails' },\n    //   { value: 'hair', label: 'Hair' },\n    //   { value: 'makeup', label: 'Makeup' },\n    //   { value: 'eyelashes', label: 'Eyelashes' },\n    //   { value: 'eyelash extensions', label: 'Eyelash Extensions' },\n    //   { value: 'eyebrows', label: 'Eyebrows' },\n    //   { value: 'facials', label: 'Facials' },\n    //   { value: 'skincare', label: 'Skin Care' },\n    //   { value: 'waxing', label: 'Waxing' },\n    //   { value: 'mens', label: 'Mens Services' }\n    // ];\n\n    // RegEx for phone number validation\n    this.phoneRegExp = /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/\n\n    // Schema for yup\n    this.yupValidationSchema = Yup.object().shape({\n      name: Yup.string()\n        .min(2, \"Store name must have at least 2 characters\")\n        .max(100, \"Store name can't be longer than 100 characters\")\n        .required(\"Name is required\"),\n      description: Yup.string()\n        .min(20, \"Description must have at least 20 characters\")\n        .required(\"Description is required\"),\n      phone: Yup.string()\n        .matches(this.phoneRegExp, \"Phone number is not valid\")\n        .required(\"Phone number is required\"),\n      // category: Yup.array()\n      //   .required(\"Category is required\")\n      //   .nullable(),\n      address: Yup.string()\n        .required(\"Address is required\"),\n      pictureCount: Yup.number()\n      .required(\"Pictures are required\")\n      .min(1, \"Must have at least one picture\")\n    });\n\n    this.autocomplete = null\n    this.handlePlaceSelect = this.handlePlaceSelect.bind(this);\n\n    this.triggerStoreDisplay = this.triggerStoreDisplay.bind(this);\n    this.onSelect = this.onSelect.bind(this);\n    this.onRemove = this.onRemove.bind(this);\n    this.shorterVersion = this.shorterVersion.bind(this);\n  }\n\n  componentDidMount() {\n    const google = window.google;\n    this.autocomplete = new google.maps.places.Autocomplete(document.getElementById('autocomplete'), { })\n\n    this.autocomplete.addListener(\"place_changed\", this.handlePlaceSelect)\n  }\n\n  handlePlaceSelect() {\n    let addressObject = this.autocomplete.getPlace()\n    let address = addressObject.address_components.map(function(elem){\n                      return elem.long_name;\n                  }).join(\", \");\n\n    this.setState({\n      address: address\n    })\n  }\n\n  // redirect to the store display page and pass the new store data\n  triggerStoreDisplay(returnedStore) {\n\n    this.props.history.push({\n      pathname: '/stores/' + returnedStore.id,\n      state: {\n        store: returnedStore\n      }\n    })\n  }\n\n  convertMinsToHrsMins(mins) {\n    let h = Math.floor(mins / 60);\n    let m = mins % 60;\n    let am = false\n    if (h == 24) {\n      am = true\n      h -= 12\n    }\n    else if (h < 12) {\n      am = true\n    } else if (h != 12) {\n      h -= 12\n    }\n    h = h < 10 ? '0' + h : h;\n    if (h == 0) {\n      h = '12'\n    }\n    m = m < 10 ? '0' + m : m;\n    if (am) {\n      return `${h}:${m}am`;\n    } else {\n      return `${h}:${m}pm`;\n    }\n\n  }\n\n  shorterVersion(name) {\n\n    if(name == \"Spa & Wellness\") {\n      return \"Spa\"\n    }\n    else if(name == \"Barbershops\") {\n      return \"Barber\"\n    }\n    else if(name == \"Nail Salon\") {\n      return \"Nails\"\n    }\n    else if(name == \"Hair Salon\") {\n      return \"Hair\"\n    }\n    return name;\n  }\n\n  onSelect(selectedList, selectedItem) {\n\n    this.setState({\n      selected: selectedList,\n      categoryError: false\n\n    })\n\n  }\n\n  onRemove(selectedList, removedItem, event) {\n\n    this.setState({\n      selected: selectedList\n    })\n\n  }\n\n\n  handleSelectChange = (event) => {\n    var days = ['formHoursMonday', 'formHoursTuesday', 'formHoursWednesday', 'formHoursThursday', 'formHoursFriday', 'formHoursSaturday', 'formHoursSunday']\n    var day = days.indexOf(event.target.id)\n    var newStoreHours = []\n\n    if (event.target.querySelector('option').value == \"0\") {\n      newStoreHours = [\n        ...this.state.storeHours.slice(0, day),\n        { open_time: parseInt(event.target.value), close_time: this.state.storeHours[day].close_time },\n        ...this.state.storeHours.slice(day + 1)\n      ]\n    } else {\n      newStoreHours = [\n        ...this.state.storeHours.slice(0, day),\n        { open_time: this.state.storeHours[day].open_time, close_time: parseInt(event.target.value) },\n        ...this.state.storeHours.slice(day + 1)\n      ]\n    }\n\n    this.setState({\n      storeHours: newStoreHours\n    })\n  };\n\n  fileChangedHandler = (event, setFieldValue) => {\n    setFieldValue('pictureCount', event.target.files.length)\n    this.setState({ selectedFiles: event.target.files })\n  }\n\n  render() {\n    return (\n      <Container fluid>\n        <Row className=\"justify-content-center\">\n          <Col xs={8} sm={7} md={6} lg={5}>\n            <Formik\n              initialValues={{\n                name: '',\n                description: '',\n                phone: '',\n                address: '',\n                category: [],\n                owner_id: \"\",\n                pictureCount: this.state.selectedFiles.length,\n              }}\n              validationSchema={this.yupValidationSchema}\n              onSubmit={(values) => {\n\n                let shorterVersion = this.shorterVersion\n\n                values.category = this.state.selected.map(function (val) {\n                  return shorterVersion(val.name)\n                })\n\n                if(values.category.length == 0) {\n\n                  this.setState({\n                    categoryError: true\n                  })\n                  return;\n                }\n\n                values.owner_id = JSON.parse(Cookies.get('user').substring(2)).id\n                values.storeHours = this.state.storeHours\n                values.address = this.state.address\n\n\n                let triggerStoreDisplay = this.triggerStoreDisplay\n\n                fetch(fetchDomain + '/addStore', {\n                  method: \"POST\",\n                  headers: {\n                    'Content-type': 'application/json',\n                    'Accept': 'application/json'\n                  },\n                  credentials: 'include',\n                  body: JSON.stringify(values)\n                })\n                  .then(function (response) {\n                    if (response.status !== 200) {\n                      // throw an error alert\n                      store.dispatch(addAlert(response))\n                    }\n                    else {\n                      return response.json();\n                    }\n                  })\n                  .then(async data => {\n                    if (data) {\n                      let prefix = 'stores/' + data.id + '/images/'\n                      if (this.state.selectedFiles.length > 0) {\n                        await uploadHandler(prefix, this.state.selectedFiles)\n                      }\n                      this.props.updateRole(1)\n                      this.props.addStore(data)\n                      triggerStoreDisplay(data)\n                    }\n                  });\n              }}\n            >\n              {({ values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                setFieldValue\n              }) => (\n                  <Form className=\"formBody rounded\">\n                    <h3>Store Sign Up</h3>\n\n                    <Form.Group controlId=\"formName\">\n                      <InputGroup>\n                        <InputGroup.Prepend>\n                          <InputGroup.Text>\n                            <FaShoppingCart />\n                          </InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"name\"\n                          value={values.name}\n                          placeholder=\"Business Name\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          className={touched.name && errors.name ? \"error\" : null} />\n                      </InputGroup>\n                      {touched.name && errors.name ? (\n                        <div className=\"error-message\">{errors.name}</div>\n                      ) : null}\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formDescription\">\n                      <InputGroup>\n                        <InputGroup.Prepend>\n                          <InputGroup.Text>\n                            <FaPen />\n                          </InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control\n                          as=\"textarea\"\n                          rows={3}\n                          name=\"description\"\n                          value={values.description}\n                          placeholder=\"Description\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          className={touched.description && errors.description ? \"error\" : null} />\n                      </InputGroup>\n                      {touched.description && errors.description ? (\n                        <div className=\"error-message\">{errors.description}</div>\n                      ) : null}\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formPhone\">\n                      <InputGroup>\n                        <InputGroup.Prepend>\n                          <InputGroup.Text>\n                            <FaPhone />\n                          </InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control type=\"text\"\n                          value={values.phone}\n                          placeholder=\"Phone Number\"\n                          name=\"phone\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          className={touched.phone && errors.phone ? \"error\" : null} />\n                      </InputGroup>\n                      {touched.phone && errors.phone ? (\n                        <div className=\"error-message\">{errors.phone}</div>\n                      ) : null}\n                    </Form.Group>\n\n                    <Form.Group controlId=\"autocomplete\">\n                      <InputGroup>\n                        <InputGroup.Prepend>\n                          <InputGroup.Text>\n                            <FaMap />\n                          </InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Address\"\n                          autoComplete=\"new-password\"\n                          onChange={event => setFieldValue(\"address\", event.target.value)}\n                          className={touched.address && errors.address ? \"error\" : null}\n                        />\n                      </InputGroup>\n                      {touched.address && errors.address ? (\n                        <div className=\"error-message\">{errors.address}</div>\n                      ) : null}\n                    </Form.Group>\n                    \n                    <Form.Group controlId=\"formCategory\">\n                      <Multiselect\n                        options={this.state.category}\n                        onSelect={this.onSelect}\n                        onRemove={this.onRemove}\n                        placeholder=\"Category\"\n                        closeIcon=\"cancel\"\n                        displayValue=\"name\"\n                        avoidHighlightFirstOption={true}\n                        style={{multiselectContainer: { width: '100%'},  groupHeading:{width: 50, maxWidth: 50}, chips: { background: \"#587096\", height: 35 }, inputField: {color: 'black'}, searchBox: { minWidth: '100%', height: '30', backgroundColor: 'white', borderRadius: \"5px\" }} }\n                      />\n\n                      {(this.state.categoryError) ? (\n                        <div className=\"error-message\">Category is required</div>\n                      ) : null}\n                    </Form.Group>\n\n                    <h4>Store Hours</h4>\n\n                    <Form.Group controlId=\"formHoursMonday\">\n                      <h5 className=\"text-left\">Monday</h5>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" value={this.state.storeHours[0].open_time} onChange={this.handleSelectChange.bind(this)}>\n                            <option value={0}>{this.convertMinsToHrsMins(0)}</option>\n                            <option value={60}>{this.convertMinsToHrsMins(60)}</option>\n                            <option value={120}>{this.convertMinsToHrsMins(120)}</option>\n                            <option value={180}>{this.convertMinsToHrsMins(180)}</option>\n                            <option value={240}>{this.convertMinsToHrsMins(240)}</option>\n                            <option value={300}>{this.convertMinsToHrsMins(300)}</option>\n                            <option value={360}>{this.convertMinsToHrsMins(360)}</option>\n                            <option value={420}>{this.convertMinsToHrsMins(420)}</option>\n                            <option value={480}>{this.convertMinsToHrsMins(480)}</option>\n                            <option value={540}>{this.convertMinsToHrsMins(540)}</option>\n                            <option value={600}>{this.convertMinsToHrsMins(600)}</option>\n                            <option value={660}>{this.convertMinsToHrsMins(660)}</option>\n                            <option value={720}>{this.convertMinsToHrsMins(720)}</option>\n                            <option value={780}>{this.convertMinsToHrsMins(780)}</option>\n                            <option value={840}>{this.convertMinsToHrsMins(840)}</option>\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" value={this.state.storeHours[0].close_time} onChange={this.handleSelectChange.bind(this)}>\n                            <option value={900}>{this.convertMinsToHrsMins(900)}</option>\n                            <option value={960}>{this.convertMinsToHrsMins(960)}</option>\n                            <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\n                            <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\n                            <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\n                            <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\n                            <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\n                            <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\n                            <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\n                            <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formHoursTuesday\">\n                      <h5 className=\"text-left\">Tuesday</h5>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" value={this.state.storeHours[1].open_time} onChange={this.handleSelectChange.bind(this)}>\n                            <option value={0}>{this.convertMinsToHrsMins(0)}</option>\n                            <option value={60}>{this.convertMinsToHrsMins(60)}</option>\n                            <option value={120}>{this.convertMinsToHrsMins(120)}</option>\n                            <option value={180}>{this.convertMinsToHrsMins(180)}</option>\n                            <option value={240}>{this.convertMinsToHrsMins(240)}</option>\n                            <option value={300}>{this.convertMinsToHrsMins(300)}</option>\n                            <option value={360}>{this.convertMinsToHrsMins(360)}</option>\n                            <option value={420}>{this.convertMinsToHrsMins(420)}</option>\n                            <option value={480}>{this.convertMinsToHrsMins(480)}</option>\n                            <option value={540}>{this.convertMinsToHrsMins(540)}</option>\n                            <option value={600}>{this.convertMinsToHrsMins(600)}</option>\n                            <option value={660}>{this.convertMinsToHrsMins(660)}</option>\n                            <option value={720}>{this.convertMinsToHrsMins(720)}</option>\n                            <option value={780}>{this.convertMinsToHrsMins(780)}</option>\n                            <option value={840}>{this.convertMinsToHrsMins(840)}</option>\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" value={this.state.storeHours[1].close_time} onChange={this.handleSelectChange.bind(this)}>\n                            <option value={900}>{this.convertMinsToHrsMins(900)}</option>\n                            <option value={960}>{this.convertMinsToHrsMins(960)}</option>\n                            <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\n                            <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\n                            <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\n                            <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\n                            <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\n                            <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\n                            <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\n                            <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n\n                    <Form.Group controlId=\"formHoursWednesday\">\n                      <h5 className=\"text-left\">Wednesday</h5>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" value={this.state.storeHours[2].open_time} onChange={this.handleSelectChange.bind(this)}>\n                            <option value={0}>{this.convertMinsToHrsMins(0)}</option>\n                            <option value={60}>{this.convertMinsToHrsMins(60)}</option>\n                            <option value={120}>{this.convertMinsToHrsMins(120)}</option>\n                            <option value={180}>{this.convertMinsToHrsMins(180)}</option>\n                            <option value={240}>{this.convertMinsToHrsMins(240)}</option>\n                            <option value={300}>{this.convertMinsToHrsMins(300)}</option>\n                            <option value={360}>{this.convertMinsToHrsMins(360)}</option>\n                            <option value={420}>{this.convertMinsToHrsMins(420)}</option>\n                            <option value={480}>{this.convertMinsToHrsMins(480)}</option>\n                            <option value={540}>{this.convertMinsToHrsMins(540)}</option>\n                            <option value={600}>{this.convertMinsToHrsMins(600)}</option>\n                            <option value={660}>{this.convertMinsToHrsMins(660)}</option>\n                            <option value={720}>{this.convertMinsToHrsMins(720)}</option>\n                            <option value={780}>{this.convertMinsToHrsMins(780)}</option>\n                            <option value={840}>{this.convertMinsToHrsMins(840)}</option>\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" value={this.state.storeHours[2].close_time} onChange={this.handleSelectChange.bind(this)}>\n                            <option value={900}>{this.convertMinsToHrsMins(900)}</option>\n                            <option value={960}>{this.convertMinsToHrsMins(960)}</option>\n                            <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\n                            <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\n                            <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\n                            <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\n                            <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\n                            <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\n                            <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\n                            <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formHoursThursday\">\n                      <h5 className=\"text-left\">Thursday</h5>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" value={this.state.storeHours[3].open_time} onChange={this.handleSelectChange.bind(this)}>\n                            <option value={0}>{this.convertMinsToHrsMins(0)}</option>\n                            <option value={60}>{this.convertMinsToHrsMins(60)}</option>\n                            <option value={120}>{this.convertMinsToHrsMins(120)}</option>\n                            <option value={180}>{this.convertMinsToHrsMins(180)}</option>\n                            <option value={240}>{this.convertMinsToHrsMins(240)}</option>\n                            <option value={300}>{this.convertMinsToHrsMins(300)}</option>\n                            <option value={360}>{this.convertMinsToHrsMins(360)}</option>\n                            <option value={420}>{this.convertMinsToHrsMins(420)}</option>\n                            <option value={480}>{this.convertMinsToHrsMins(480)}</option>\n                            <option value={540}>{this.convertMinsToHrsMins(540)}</option>\n                            <option value={600}>{this.convertMinsToHrsMins(600)}</option>\n                            <option value={660}>{this.convertMinsToHrsMins(660)}</option>\n                            <option value={720}>{this.convertMinsToHrsMins(720)}</option>\n                            <option value={780}>{this.convertMinsToHrsMins(780)}</option>\n                            <option value={840}>{this.convertMinsToHrsMins(840)}</option>\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" value={this.state.storeHours[3].close_time} onChange={this.handleSelectChange.bind(this)}>\n                            <option value={900}>{this.convertMinsToHrsMins(900)}</option>\n                            <option value={960}>{this.convertMinsToHrsMins(960)}</option>\n                            <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\n                            <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\n                            <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\n                            <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\n                            <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\n                            <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\n                            <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\n                            <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n\n                    <Form.Group controlId=\"formHoursFriday\">\n                      <h5 className=\"text-left\">Friday</h5>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" value={this.state.storeHours[4].open_time} onChange={this.handleSelectChange.bind(this)}>\n                            <option value={0}>{this.convertMinsToHrsMins(0)}</option>\n                            <option value={60}>{this.convertMinsToHrsMins(60)}</option>\n                            <option value={120}>{this.convertMinsToHrsMins(120)}</option>\n                            <option value={180}>{this.convertMinsToHrsMins(180)}</option>\n                            <option value={240}>{this.convertMinsToHrsMins(240)}</option>\n                            <option value={300}>{this.convertMinsToHrsMins(300)}</option>\n                            <option value={360}>{this.convertMinsToHrsMins(360)}</option>\n                            <option value={420}>{this.convertMinsToHrsMins(420)}</option>\n                            <option value={480}>{this.convertMinsToHrsMins(480)}</option>\n                            <option value={540}>{this.convertMinsToHrsMins(540)}</option>\n                            <option value={600}>{this.convertMinsToHrsMins(600)}</option>\n                            <option value={660}>{this.convertMinsToHrsMins(660)}</option>\n                            <option value={720}>{this.convertMinsToHrsMins(720)}</option>\n                            <option value={780}>{this.convertMinsToHrsMins(780)}</option>\n                            <option value={840}>{this.convertMinsToHrsMins(840)}</option>\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" value={this.state.storeHours[4].close_time} onChange={this.handleSelectChange.bind(this)}>\n                            <option value={900}>{this.convertMinsToHrsMins(900)}</option>\n                            <option value={960}>{this.convertMinsToHrsMins(960)}</option>\n                            <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\n                            <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\n                            <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\n                            <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\n                            <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\n                            <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\n                            <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\n                            <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formHoursSaturday\">\n                      <h5 className=\"text-left\">Saturday</h5>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" value={this.state.storeHours[5].open_time} onChange={this.handleSelectChange.bind(this)}>\n                            <option value={0}>{this.convertMinsToHrsMins(0)}</option>\n                            <option value={60}>{this.convertMinsToHrsMins(60)}</option>\n                            <option value={120}>{this.convertMinsToHrsMins(120)}</option>\n                            <option value={180}>{this.convertMinsToHrsMins(180)}</option>\n                            <option value={240}>{this.convertMinsToHrsMins(240)}</option>\n                            <option value={300}>{this.convertMinsToHrsMins(300)}</option>\n                            <option value={360}>{this.convertMinsToHrsMins(360)}</option>\n                            <option value={420}>{this.convertMinsToHrsMins(420)}</option>\n                            <option value={480}>{this.convertMinsToHrsMins(480)}</option>\n                            <option value={540}>{this.convertMinsToHrsMins(540)}</option>\n                            <option value={600}>{this.convertMinsToHrsMins(600)}</option>\n                            <option value={660}>{this.convertMinsToHrsMins(660)}</option>\n                            <option value={720}>{this.convertMinsToHrsMins(720)}</option>\n                            <option value={780}>{this.convertMinsToHrsMins(780)}</option>\n                            <option value={840}>{this.convertMinsToHrsMins(840)}</option>\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" value={this.state.storeHours[5].close_time} onChange={this.handleSelectChange.bind(this)}>\n                            <option value={900}>{this.convertMinsToHrsMins(900)}</option>\n                            <option value={960}>{this.convertMinsToHrsMins(960)}</option>\n                            <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\n                            <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\n                            <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\n                            <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\n                            <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\n                            <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\n                            <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\n                            <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n\n                    <Form.Group controlId=\"formHoursSunday\">\n                      <h5 className=\"text-left\">Sunday</h5>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" value={this.state.storeHours[6].open_time} onChange={this.handleSelectChange.bind(this)}>\n                            <option value={0}>{this.convertMinsToHrsMins(0)}</option>\n                            <option value={60}>{this.convertMinsToHrsMins(60)}</option>\n                            <option value={120}>{this.convertMinsToHrsMins(120)}</option>\n                            <option value={180}>{this.convertMinsToHrsMins(180)}</option>\n                            <option value={240}>{this.convertMinsToHrsMins(240)}</option>\n                            <option value={300}>{this.convertMinsToHrsMins(300)}</option>\n                            <option value={360}>{this.convertMinsToHrsMins(360)}</option>\n                            <option value={420}>{this.convertMinsToHrsMins(420)}</option>\n                            <option value={480}>{this.convertMinsToHrsMins(480)}</option>\n                            <option value={540}>{this.convertMinsToHrsMins(540)}</option>\n                            <option value={600}>{this.convertMinsToHrsMins(600)}</option>\n                            <option value={660}>{this.convertMinsToHrsMins(660)}</option>\n                            <option value={720}>{this.convertMinsToHrsMins(720)}</option>\n                            <option value={780}>{this.convertMinsToHrsMins(780)}</option>\n                            <option value={840}>{this.convertMinsToHrsMins(840)}</option>\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" value={this.state.storeHours[6].close_time} onChange={this.handleSelectChange.bind(this)}>\n                            <option value={900}>{this.convertMinsToHrsMins(900)}</option>\n                            <option value={960}>{this.convertMinsToHrsMins(960)}</option>\n                            <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\n                            <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\n                            <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\n                            <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\n                            <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\n                            <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\n                            <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\n                            <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formPictureCount\">\n                      <input\n                        onChange={event => this.fileChangedHandler(event, setFieldValue)}\n                        type=\"file\"\n                        multiple\n                        className={touched.pictureCount && errors.pictureCount ? \"error\" : null}\n                      />\n                      {touched.pictureCount && errors.pictureCount ? (\n                        <div className=\"error-message\">{errors.pictures}</div>\n                      ) : null}\n                    </Form.Group>\n                    {touched.pictureCount && errors.pictureCount ? (\n                      <div className=\"error-message\">{errors.pictureCount}</div>\n                    ): null}\n\n                    <Button onClick={handleSubmit}>Submit</Button>\n                  </Form>\n                )}\n            </Formik>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  updateRole: (role) => updateRole(role),\n  addStore: (store) => addStore(store),\n}, dispatch)\n\n\nexport default connect(null, mapDispatchToProps)(StoreSignupForm);\n","import React from 'react';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport './CalendarPage.css';\nimport {  Resources, ConfirmationDialog, Scheduler, AppointmentForm, AppointmentTooltip, DateNavigator,TodayButton, DayView, WeekView, MonthView, Appointments, ViewSwitcher, Toolbar,  DragDropProvider} from '@devexpress/dx-react-scheduler-material-ui';\nimport { ViewState, EditingState, IntegratedEditing } from '@devexpress/dx-react-scheduler';\nimport 'react-calendar/dist/Calendar.css';\nimport Paper from '@material-ui/core/Paper';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport { FiSearch} from 'react-icons/fi';\nimport { withRouter } from \"react-router\"\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nconst today = new Date();\n\n//new Date(2018, 6, 1, 10, 0) start and end dates\n\nconst isWeekEnd = (date: Date): boolean => date.getDay() === 0 || date.getDay() === 6;\n\n\n\nconst Root = ({\n  children, style, ...restProps\n}) => (\n  <div\n    {...restProps}\n    style={{\n      ...style,\n      width: '1000px',\n    }}\n  >\n    {children}\n  </div>\n);\n\n\nconst DayScaleCell = ({\n  startDate, classes, ...restProps\n}: DayScaleCellProps) => (\n  <MonthView.DayScaleCell\n    // className={classNames({\n    //   [classes.weekEndDayScaleCell]: isWeekEnd(startDate),\n    // })}\n    className={isWeekEnd(startDate) ? 'weekend' : null}\n\n    // style={isWeekEnd(startDate) ? 'background-color: grey' : 'background-color: white'}\n    startDate={startDate}\n    {...restProps}\n  />\n);\n\nconst TimeTableCell = (\n  { startDate, classes, ...restProps }: TimeTableCellProps,\n) => (\n  <MonthView.TimeTableCell\n    className={isWeekEnd(startDate) ? 'weekend' : null}\n\n    startDate={startDate}\n    {...restProps}\n  />\n);\nconst recurringIcon = () => <div />\n\nconst BasicLayout = ({ appointmentData, onFieldChange,\n   ...restProps }) => {\n\n   const onCustomFieldChange = (nextValue) => {\n     onFieldChange({ price: nextValue });\n   };\n\n  return (\n    <AppointmentForm.BasicLayout\n      onFieldChange={onFieldChange}\n      appointmentData={appointmentData}\n      {...restProps}\n    >\n\n    <AppointmentForm.Label\n       text=\"Price\"\n       type=\"title\"\n     />\n     <Row className=\"justify-content-center\">\n     <AppointmentForm.TextEditor\n      style={{width: '50%'}}\n       value={appointmentData.price}\n       onValueChange={onCustomFieldChange}\n       placeholder=\"Price\"\n     />\n     <AppointmentForm.Label\n        style={{marginTop: 15, marginLeft: 10, fontSize: 20}}\n        text=\"$\"\n        type=\"text\"\n      />\n      </Row>\n    </AppointmentForm.BasicLayout>\n  );\n};\n\nconst messages = {\n  allDayLabel : '',\n  repeatLabel : ''\n}\n\nconst BooleanEditor = ({\n...restProps }) => {\n  // eslint-disable-next-line react/destructuring-assignment\n  // console.log(restProps);\n\nreturn null;\n  // if (restProps.type === 'endRepeat') {\n  //   console.log(\"BO\");\n  //   return null;\n  //\n  // } else {console.log(\"HELO\"); return <AppointmentForm.WeeklyRecurrenceSelectorComponent readOnly={true} {...restProps} />};\n};\n\nconst ResourceSwitcher = ({ styles,\n    mainResourceName, onChange, classes, resources,\n  }) => (\n    <div >\n      <Row className=\"justify-content-center text-xs-center text-sm-left pl-2\">\n      <p style={{fontSize: 20, marginRight:10, marginTop:2}}>\n        Filter By:\n      </p>\n      <Select\n        value={mainResourceName}\n        onChange={e => onChange(e.target.value)}\n        style={{paddingLeft: 60, height: 35}}\n      >\n        {resources.map(resource => (\n          <MenuItem key={resource.fieldName} value={resource.fieldName}>\n            {resource.title}\n          </MenuItem>\n        ))}\n      </Select>\n      </Row>\n    </div>\n\n  );\n\n\nconst RecurrenceLayout = ({\n  appointmentData,\n  visible,\n  ...restProps }) => {\n\n  return  (\n    <AppointmentForm.RecurrenceLayout\n      appointmentData={appointmentData}\n      visible={false}\n      {...restProps}\n    >\n\n    </AppointmentForm.RecurrenceLayout>\n  );\n\n};\n\nconst Appointment = ({\n  children, style,\n  ...restProps\n}) => {\n  // console.log(restProps);\n  return (\n    <Appointments.Appointment\n      {...restProps}\n      style={{\n        ...style,\n        backgroundColor: '#597096',\n        borderRadius: '5px',\n\n      }}\n\n    >\n      {children}\n    </Appointments.Appointment>\n  );\n}\n\nclass Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n       this.state = {\n         services: [],\n         workers: [],\n         worker_map: {},\n         service_map: {},\n         selectedWorkers: [],\n         selectedServices: [],\n         selectedAppointments: [\n           // { id: '0', startDate: '2020-04-19 15:00', endDate: '2020-04-19 16:00', title: 'Manicure', workers: [2],\n           // services: [2], price: 50},\n           // { id: '1', startDate: '2020-04-21 09:00', endDate: '2020-04-21 11:00', title: 'Hair Blowout', workers: [0, 1],\n           // services: [1], price: 20},\n         ],\n         appointments: [\n           // { id: '0', startDate: '2020-04-19 15:00', endDate: '2020-04-19 16:00', title: 'Manicure', workers: [2],\n           // services: [2], price: 50},\n           // { id: '1', startDate: '2020-04-21 09:00', endDate: '2020-04-21 11:00', title: 'Hair Blowout', workers: [0, 1],\n           //  services: [1], price: 20},\n         ],\n         mainResourceName: 'workers',\n          resources: [\n            {\n              fieldName: 'services',\n              title: 'Services',\n              allowMultiple: true,\n              instances: [\n                // { id: 1, text: 'Haircut' },\n                // { id: 2, text: 'Manicure' },\n\n              ],\n            },\n            {\n              fieldName: 'workers',\n              title: 'Workers',\n              allowMultiple: true,\n              instances: [\n                // { id: 0, text: 'Artin Kasumyan' },\n                // { id: 1, text: 'Arthur Kasumyan' },\n                // { id: 2, text: 'Roula Sharqawe' },\n                // { id: 3, text: 'George Clooney' },\n                // { id: 4, text: 'Johnny Depp' },\n              ],\n            },\n          ],\n         currentDate: today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate()\n       }\n       this.commitChanges = this.commitChanges.bind(this);\n       this.changeMainResource = this.changeMainResource.bind(this);\n       this.onSelectWorker = this.onSelectWorker.bind(this);\n       this.onRemoveWorker = this.onRemoveWorker.bind(this);\n       this.onSelectService = this.onSelectService.bind(this);\n       this.onRemoveService = this.onRemoveService.bind(this);\n       this.onSearch = this.onSearch.bind(this);\n  }\n\n    getAppointments = () => {\n\n        fetch('fetchDomain/stores/' + this.props.match.params.store_id + '/appointments' , {\n          method: \"GET\",\n          headers: {\n            'Content-type': 'application/json'\n          },\n          credentials: 'include'\n        }).then(value => value.json())\n        .then(data => {\n\n          let appointments = []\n\n          data.map((appointment, indx) => {\n\n              let date = new Date(appointment.date);\n              let startDate = new Date(date.getFullYear(), date.getMonth(), date.getDate(), appointment.start_time, 0);\n              let endDate = new Date(date.getFullYear(), date.getMonth(), date.getDate(), appointment.end_time, 0);\n\n              console.log(startDate)\n\n              appointments.push({\n                id: indx,\n                title: appointment.title,\n                workers: [this.state.worker_map[appointment.worker_id]],\n                services: [this.state.service_map[appointment.service_id]],\n                price: appointment.price,\n                startDate: startDate,\n                endDate: endDate\n              })\n\n              this.setState({\n                appointments: appointments,\n                selectedAppointments: appointments\n\n              })\n\n            })\n        })\n    }\n\n    async componentDidMount() {\n      let store_id = this.props.match.params.store_id\n      let workers = []\n      let services = []\n      let new_workers = []\n      let new_services = []\n\n      //fetching  workers and services\n      if(this.props.location.state && this.props.location.state.services) {\n        let service_map = {}\n        let service_instances = []\n\n        this.props.location.state.services.map((service, indx) => {\n          service_instances.push({id: indx, text: service.name})\n          service_map[service.id] = service.name\n        })\n\n        this.setState({\n          services: this.props.location.state.store.services,\n          service_map: service_map\n        })\n      }\n      else {\n\n          await fetch('fetchDomain/stores/' + store_id + \"/services\", {\n          method: \"GET\",\n          headers: {\n            'Content-type': 'application/json'\n          },\n          credentials: 'include'\n        }).then(function (response) {\n            if (response.status !== 200) {\n              // throw an error alert\n              console.log(\"error\")\n            }\n            else {\n              return response.json();\n            }\n          })\n          .then(async data => {\n            if (data) {\n              services = data;\n              let service_instances = []\n              let service_map = {}\n              console.log(\"here!!\", services);\n\n              services.map((service, indx) => {\n                    service_instances.push({id: indx, text: service.name})\n                    service_map[service.id] = service.name\n              })\n\n              this.setState({\n                  services: services,\n                  service_map: service_map\n              })\n\n              // return new_services;\n            }\n          });\n\n      }\n\n      if(this.props.location.state && this.props.location.state.workers){\n        let worker_instances = []\n        let worker_map = {}\n        this.props.location.state.workers.map((worker, indx) => {\n            worker_instances.push({id: indx, text: worker.first_name + ' ' + worker.last_name})\n            worker_map[worker.id] = worker.first_name + ' ' + worker.last_name\n        })\n        this.setState({\n          workers: worker_instances,\n          worker_map: worker_map\n        })\n      }\n      else{\n\n\n        await fetch('fetchDomain/stores/' + store_id + '/workers_list', {\n          method: \"GET\",\n          headers: {\n            'Content-type': 'application/json'\n          },\n          credentials: 'include'\n        }).then(function (response) {\n            if (response.status !== 200) {\n              // throw an error alert\n              console.log(\"error\")\n            }\n            else {\n              return response.json();\n            }\n          })\n          .then(async data => {\n            if (data) {\n              workers = data;\n              console.log(\"here\", workers);\n              let worker_instances = []\n              let worker_map = {}\n              workers.map((worker, indx) => {\n                  worker_instances.push({id: indx, text: worker.first_name + ' ' + worker.last_name})\n                  worker_map[worker.id] = worker.first_name + ' ' + worker.last_name\n              })\n              this.setState({\n                workers: worker_instances,\n                worker_map: worker_map\n              })\n            }\n          });\n\n      }\n\n      new_services = this.state.resources[0]\n      new_services.instances = this.state.services;\n      new_workers = this.state.resources[1]\n      new_workers.instances = this.state.workers;\n\n      this.setState({\n        resources: [new_services, new_workers]\n      })\n\n      this.getAppointments();\n\n    }\n\n  changeMainResource(mainResourceName) {\n    this.setState({ mainResourceName });\n  }\n\n  onSelectWorker(selectedList, selectedItem) {\n    // console.log(selectedList, selectedItem)\n    this.setState({ selectedWorkers: selectedList });\n  }\n\n  onRemoveWorker(selectedList, removedItem) {\n    // console.log(\"remove\", selectedList, removedItem);\n    this.setState({ selectedWorkers: selectedList });\n  }\n\n  onSelectService(selectedList, selectedItem) {\n    this.setState({ selectedServices: selectedList });\n  }\n\n  onRemoveService(selectedList, removedItem) {\n    this.setState({ selectedServices: selectedList });\n  }\n\n  onSearch() {\n\n    let includeWorker;\n    let includeService;\n    let newSelected = [];\n\n    this.state.appointments.map(appointment => {\n      includeWorker = (this.state.selectedWorkers.length==0) ? true : false;\n      includeService= (this.state.selectedServices.length==0) ? true : false;\n\n      this.state.selectedWorkers.map(worker => {\n\n        if(appointment.workers.includes(worker.id)) {\n          includeWorker = true;\n        }\n      })\n      this.state.selectedServices.map(service => {\n\n        if(appointment.services.includes(service.id)) {\n          includeService = true;\n        }\n      })\n\n      if(includeService && includeWorker) {\n        newSelected.push(appointment);\n      }\n    })\n    this.setState({ selectedAppointments: newSelected });\n  }\n\n\n  commitChanges({ added, changed, deleted }) {\n    this.setState((state) => {\n      let { selectedAppointments } = state;\n      let appointments = selectedAppointments;\n      if (added) {\n        const startingAddedId = appointments.length > 0 ? appointments[appointments.length - 1].id + 1 : 0;\n        appointments = [...appointments, { id: startingAddedId, ...added }];\n      }\n      if (changed) {\n        appointments = appointments.map(appointment => (\n          changed[appointment.id] ? { ...appointment, ...changed[appointment.id] } : appointment));\n      }\n      if (deleted !== undefined) {\n        appointments = appointments.filter(appointment => appointment.id !== deleted);\n      }\n      return { appointments };\n    });\n  }\n\n\n\n  render() {\n\n    console.log(this.state.selectedAppointments);\n    return (\n      <Container fluid>\n        <Row className=\"justify-content-center\">\n          <Col>\n            <p className=\"title\"> Manage Your Appointments </p>\n            <Row style={{marginBottom: 50, marginLeft: '22%', position: 'relative'}}>\n            <Multiselect\n              // isObject={false}\n              options={this.state.resources[0][\"instances\"]}\n              // selectedValues={this.state.selected}\n              onSelect={this.onSelectService}\n              onRemove={this.onRemoveService}\n              placeholder=\"Service\"\n              closeIcon=\"cancel\"\n              displayValue=\"text\"\n              style={{multiselectContainer: {marginLeft: '2%', width: '35%'},  groupHeading:{width: 50, maxWidth: 50}, chips: { background: \"#587096\", height: 35 }, inputField: {color: 'black'}, searchBox: { minWidth: 250, width: '100%', height: '30', backgroundColor: 'white', borderRadius: \"5px\" }} }\n              />\n            <Multiselect\n                // isObject={false}\n                options={this.state.resources[1][\"instances\"]}\n                // selectedValues={this.state.selected}\n                onSelect={this.onSelectWorker}\n                onRemove={this.onRemoveWorker}\n                placeholder=\"Workers\"\n                closeIcon=\"cancel\"\n                displayValue=\"text\"\n                style={{multiselectContainer: {marginLeft: '2%', width: '35%'},  optionContainer:{ zIndex: 10000000}, chips: { background: \"#587096\", height: 35 }, inputField: {color: 'black'}, searchBox: { minWidth: 250, width: '100%', height: '30', backgroundColor: 'white', borderRadius: \"5px\" }} }\n              />\n              <FiSearch onClick={this.onSearch} size={35} style={{cursor: \"pointer\", marginLeft: 10, paddingRight:\"10px\"}}/>\n            </Row>\n\n           <Paper className=\"react-calendar\">\n          <Scheduler\n            data={this.state.selectedAppointments}\n\n          >\n          <ViewState\n            defaultCurrentDate={this.state.currentDate}\n\n          />\n          <EditingState\n           onCommitChanges={this.commitChanges}\n         />\n         <IntegratedEditing />\n\n            <WeekView\n             startDayHour={8}\n             endDayHour={24}\n             cellDuration={60}\n           />\n           <MonthView\n             dayScaleCellComponent={DayScaleCell}\n             timeTableCellComponent={TimeTableCell}\n          />\n          <DayView\n            startDayHour={8}\n            endDayHour={24}\n            cellDuration={60}\n          />\n\n            <Toolbar />\n            <ViewSwitcher />\n            <DateNavigator/>\n            <TodayButton />\n            <ConfirmationDialog />\n            <Appointments\n            appointmentComponent={Appointment}/>\n            <AppointmentTooltip\n            showCloseButton\n            showOpenButton/>\n            <AppointmentForm\n            isRecurrence={false}\n            basicLayoutComponent={BasicLayout}\n            recurrenceLayoutComponent={RecurrenceLayout}\n            // textEditorComponent={TextEditor}\n            messages={messages}\n            booleanEditorComponent={BooleanEditor}\n            />\n            <Resources\n              data={this.state.resources}\n              // mainResourceName={this.state.mainResourceName}\n              />\n            <DragDropProvider/>\n          </Scheduler>\n          </Paper>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(Calendar);\n\n// <ResourceSwitcher\n//  resources={this.state.resources}\n//  mainResourceName={this.state.mainResourceName}\n//  onChange={this.changeMainResource}\n// />\n","import React from 'react';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport LargeCarousel from '../LargeCarousel';\nimport { Button } from 'react-bootstrap';\nimport Cookies from 'js-cookie';\nimport { withRouter } from \"react-router-dom\";\nimport {\n  addAlert\n} from '../../reduxFolder/actions/alert'\nimport store from '../../reduxFolder/store';\nimport './StoreDisplay.css'\nimport { getPictures } from '../s3'\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nclass StoreDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      store: {\n        id: \"\",\n        name: \"\",\n        address: \"\",\n        created_at: \"\",\n        category: [],\n        services: [],\n        workers: [],\n        owners: [],\n        phone: \"\",\n        clients: [],\n        pictures: [],\n        description: \"\",\n        lat: \"\",\n        lng: \"\"\n      },\n      pictures: []\n    }\n  }\n\n  triggerStoreEdit() {\n    this.props.history.push({\n      pathname: '/stores/edit/' + this.props.match.params.store_id,\n      state: this.state\n    })\n  }\n\n  triggerBook() {\n    this.props.history.push({\n      pathname: '/book/' + this.props.match.params.store_id,\n      state: this.state\n    })\n  }\n\n  async componentDidMount() {\n    // if we were passed the store data from calling component\n    let pictures = await getPictures('stores/' + this.props.match.params.store_id + '/images/')\n    if(pictures.length == 0){\n      pictures = [\n        {\n          url: \"/hair.jpg\",\n          key: \"/hair.jpg\"\n        },\n        {\n          url: \"/nails.jpg\",\n          key: \"/nails.jpg\"\n        },\n        {\n          url: \"/salon.jpg\",\n          key: \"/salon.jpg\"\n        }\n      ]\n    }\n\n    if(this.props.location.state && this.props.location.state.store){\n      let convertedCategory = this.props.location.state.store.category.map((str) => ({ value: str.toLowerCase(), label: str }));\n      let appendedStore = this.props.location.state.store\n      appendedStore.pictures = pictures\n\n      this.setState({\n        store: appendedStore,\n        selectedOption: convertedCategory\n      })\n    }\n    else{\n      // retrieve the store data from the database\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id , {\n        method: \"GET\",\n        headers: {\n            'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      })\n      .then(function(response){\n        if(response.status!==200){\n          // throw an error alert\n          store.dispatch(addAlert(response))\n        }\n        else{\n          return response.json();\n        }\n      })\n      .then(data => {\n        if(data){\n          let convertedCategory = data.category.map((str) => ({ value: str.toLowerCase(), label: str }));\n          data.pictures = pictures\n\n          this.setState({\n            store: data,\n            selectedOption: convertedCategory\n          })\n        }\n      });\n    }\n  }\n\n  render() {\n    let editButton;\n    if(Cookies.get('user') && this.state.store.owners.indexOf(JSON.parse(Cookies.get('user').substring(2)).id) > -1){\n      editButton = <Button className=\"float-left\" onClick={() =>  this.triggerStoreEdit()}>Edit Store</Button>\n    }\n\n    return (\n      <Container fluid>\n        <Row className=\"justify-content-md-center\" style={{ marginTop: '15px', marginBottom: '15px'}}>\n          <Col lg={3}>\n            <h1>{this.state.store.name}</h1>\n            <h5 style={{color: \"gray\"}}>{this.state.store.address}</h5>\n            <hr/>\n            <p style={{fontSize: \"25px\"}}>{this.state.store.description}</p>\n            <ul>\n              {this.state.store.category.map((cat, index) => (\n                <li key={\"cat-\" + index}>{cat}</li>\n              ))}\n            </ul>\n            <div id=\"buttonGroup\">\n              {editButton}\n              <Button className=\"float-left\" onClick={() =>  this.triggerBook()}>Book Now</Button>\n            </div>\n          </Col>\n          <Col xs={10} sm={9} md={8} lg={7}>\n            <LargeCarousel className=\"carousel\" pictures={this.state.store.pictures}/>\n          </Col>\n        </Row>\n        <Row>\n          {/* <WorkerDisplay/> */}\n        </Row>\n        <Row>\n          {/* <ServiceDisplay/> */}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(StoreDisplay);","import React from 'react';\nimport '../../App.css';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport GridLoader from 'react-spinners/GridLoader'\nimport { FaShoppingCart, FaRoad, FaBuilding, FaUniversity, FaGlobe, FaPen, FaPhone, FaMap } from 'react-icons/fa';\nimport { Formik } from 'formik';\nimport { css } from '@emotion/core'\nimport * as Yup from 'yup';\nimport Select from 'react-select';\nimport {\n  addAlert\n} from '../../reduxFolder/actions/alert'\nimport store from '../../reduxFolder/store';\nimport { getPictures, deleteHandler, uploadHandler } from '../s3'\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport { withRouter } from \"react-router-dom\";\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n`;\nconst helper = require('../Search/helper.js');\n\nclass StoreEditForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      store: {\n        name: \"\",\n        description: \"\",\n        phone: \"\",\n        id: \"\",\n        address: \"\",\n        category: []\n      },\n      address: \"\",\n      storeHours: [{ open_time: 540, close_time: 1020 },\n      { open_time: 540, close_time: 1020 },\n      { open_time: 540, close_time: 1020 },\n      { open_time: 540, close_time: 1020 },\n      { open_time: 540, close_time: 1020 },\n      { open_time: 540, close_time: 1020 },\n      { open_time: 540, close_time: 1020 }],\n      newHours: [],\n      // selectedOption: [],\n      loading: true,\n      pictures: [],\n      selectedFiles: [],\n      keys: [],\n      category: helper.getCategories(),\n      categoryError: false,\n      selected: [],\n\n    };\n\n    // options for the categories field\n    // this.options = [\n    //   { value: 'nails', label: 'Nails' },\n    //   { value: 'hair', label: 'Hair' },\n    // ];\n\n    // RegEx for phone number validation\n    this.phoneRegExp = /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/\n\n    // Schema for yup\n    this.yupValidationSchema = Yup.object().shape({\n      name: Yup.string()\n        .min(2, \"Store name must have at least 2 characters\")\n        .max(100, \"Store name can't be longer than 100 characters\")\n        .required(\"Name is required\"),\n      description: Yup.string()\n        .min(20, \"Description must have at least 20 characters\")\n        .required(\"Description is required\"), // will make it required soon\n      phone: Yup.string()\n        .matches(this.phoneRegExp, \"Phone number is not valid\")\n        .required(\"Phone number is required\"),\n      address: Yup.string()\n        .required(\"Address is required\"),\n      category: Yup.array()\n        .required(\"Category is required\")\n        .nullable(),\n      pictureCount: Yup.number()\n        .required(\"Pictures are required\")\n        .min(1, \"Must have at least one picture\")\n    });\n\n    this.autocomplete = null\n    this.handlePlaceSelect = this.handlePlaceSelect.bind(this);\n\n    this.triggerStoreDisplay = this.triggerStoreDisplay.bind(this);\n    this.onSelect = this.onSelect.bind(this);\n    this.onRemove = this.onRemove.bind(this);\n    this.shorterVersion = this.shorterVersion.bind(this);\n    this.longerVersion = this.longerVersion.bind(this);\n    this.triggerStoreDisplayNoResp = this.triggerStoreDisplayNoResp.bind(this);\n    this.autocompleteChange = this.autocompleteChange.bind(this)\n  }\n\n  onSelect(selectedList, selectedItem) {\n\n    this.setState({\n      selected: selectedList,\n      categoryError: false\n\n    })\n\n\n  }\n\n  onRemove(selectedList, removedItem, event) {\n\n    this.setState({\n      selected: selectedList\n    })\n\n  }\n\n  autocompleteChange(event, setFieldValue){\n    setFieldValue(\"address\", event.target.value)\n    this.setState({\n      address: event.target.value\n    })\n  }\n\n  handlePlaceSelect() {\n    let addressObject = this.autocomplete.getPlace()\n    let address = addressObject.address_components.map(function(elem){\n                      return elem.long_name;\n                  }).join(\", \");\n\n    this.setState({\n      address: address\n    })\n  }\n\n  // redirect to the store display page and pass the new store data\n  triggerStoreDisplay(returnedStore) {\n    this.props.history.push({\n      pathname: '/stores/' + this.props.match.params.store_id,\n      state: {\n        store: returnedStore\n      }\n    })\n  }\n\n  triggerStoreDisplayNoResp() {\n    this.props.history.push({\n      pathname: '/stores/' + this.props.match.params.store_id\n    })\n  }\n\n  convertMinsToHrsMins(mins) {\n    let h = Math.floor(mins / 60);\n    let m = mins % 60;\n    let am = false\n    if (h == 24) {\n      am = true\n      h -= 12\n    }\n    else if (h < 12) {\n      am = true\n    } else if (h != 12) {\n      h -= 12\n    }\n    h = h < 10 ? '0' + h : h;\n    if(h == 0) {\n      h = '12'\n    }\n    m = m < 10 ? '0' + m : m;\n    if (am) {\n      return `${h}:${m}am`;\n    } else {\n      return `${h}:${m}pm`;\n    }\n\n  }\n\n  shorterVersion(name) {\n\n    if(name == \"Spa & Wellness\") {\n      return \"Spa\"\n    }\n    else if(name == \"Barbershops\") {\n      return \"Barber\"\n    }\n    else if(name == \"Nail Salon\") {\n      return \"Nails\"\n    }\n    else if(name == \"Hair Salon\") {\n      return \"Hair\"\n    }\n    return name;\n  }\n\n  longerVersion(name) {\n\n    if(name == \"Spa\") {\n      return \"Spa & Wellness\"\n    }\n    else if(name == \"Barber\") {\n      return \"Barbershops\"\n    }\n    else if(name == \"Nails\") {\n      return \"Nail Salon\"\n    }\n    else if(name == \"Hair\") {\n      return \"Hair Salon\"\n    }\n    return name;\n  }\n\n  handleSelectChange = (event) => {\n    var days = ['formHoursMonday', 'formHoursTuesday', 'formHoursWednesday', 'formHoursThursday', 'formHoursFriday', 'formHoursSaturday', 'formHoursSunday']\n    var day = days.indexOf(event.target.id)\n    var updateNewHours = this.state.newHours\n    var old_open_time = 0\n    var old_close_time = 0\n    var newStoreHours = []\n    if(this.state.newHours[day]) {\n      old_open_time = this.state.newHours[day].open_time\n      old_close_time = this.state.newHours[day].close_time\n    } else {\n      old_open_time = this.state.storeHours[day].open_time\n      old_close_time = this.state.storeHours[day].close_time\n    }\n    if(parseInt(event.target.querySelector('option').value) <= 840) {\n      updateNewHours[day] = {open_time: parseInt(event.target.value), close_time: old_close_time}\n      newStoreHours = [\n        ...this.state.storeHours.slice(0, day),\n        {open_time: parseInt(event.target.value), close_time: old_close_time},\n        ...this.state.storeHours.slice(day + 1)\n      ]\n    } else {\n      updateNewHours[day] = {open_time: old_open_time, close_time: parseInt(event.target.value)}\n      newStoreHours = [\n        ...this.state.storeHours.slice(0, day),\n        {open_time: old_open_time, close_time: parseInt(event.target.value)},\n        ...this.state.storeHours.slice(day + 1)\n      ]\n    }\n\n    this.setState({\n      newHours: updateNewHours,\n      storeHours: newStoreHours\n    })\n  };\n\n  deleteFileChangeHandler = async (event, setFieldValue, newPictureLength) => {\n    if(event.target.checked){\n      await this.state.keys.push(event.target.id)\n      setFieldValue('pictureCount', this.state.pictures.length + newPictureLength - this.state.keys.length)\n    }\n    else{\n      await this.state.keys.pop(event.target.id)\n      setFieldValue('pictureCount', this.state.pictures.length + newPictureLength - this.state.keys.length)\n    }\n  }\n\n  fileChangedHandler = async (event, setFieldValue, pictures) => {\n    this.setState({ selectedFiles: event.target.files })\n    setFieldValue('pictureCount', this.state.pictures.length + event.target.files.length - this.state.keys.length)\n    setFieldValue('pictures', event.target.files)\n  }\n\n  async componentDidMount() {\n    let picturesFetched = await getPictures('stores/' + this.props.match.params.store_id + '/images/')\n\n    // if we were given the existing data from calling component use that, else fetch\n    // check if categories are empty, if they are then cache/store needs to be updated.\n    if (this.props.location.state && this.props.location.state.store) {\n      let convertedCategory = this.props.location.state.store.category.map((str, indx) => ({ id: indx, name: this.longerVersion(str)}));\n\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/storeHours', {\n        method: \"GET\",\n        headers: {\n            'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      })\n      .then(function(response){\n        if(response.status!==200){\n          // throw an error alert\n          store.dispatch(addAlert(response))\n        }\n        else{\n          return response.json();\n        }\n      })\n      .then(data => {\n        this.setState({\n          store: this.props.location.state.store,\n          selected: convertedCategory,\n          address: this.props.location.state.store.address,\n          storeHours: data,\n          loading: false,\n          pictures: picturesFetched\n        })\n      });\n    }\n    else {\n\n      Promise.all([\n        fetch(fetchDomain + '/stores/' + this.props.match.params.store_id, {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      }).then(value => value.json()),\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/storeHours', {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      }).then(value => value.json())\n      ]).then(allResponses => {\n        const response1 = allResponses[0]\n        const response2 = allResponses[1]\n\n        let convertedCategory = response1.category.map((str, indx) => ({ id: indx, name: this.longerVersion(str)}) );\n        this.setState({\n          store: response1,\n          selected: convertedCategory,\n          address: response1.address,\n          storeHours: response2,\n          loading: false,\n          pictures: picturesFetched\n        })\n      })\n    }\n\n    const google = window.google;\n    this.autocomplete = new google.maps.places.Autocomplete(document.getElementById('autocomplete'), { })\n\n    this.autocomplete.addListener(\"place_changed\", this.handlePlaceSelect)\n  }\n\n  render() {\n        return <Row className=\"justify-content-center\" id=\"test\">\n        <Col xs={8} sm={7} md={6} lg={5}>\n          <Formik\n            enableReinitialize\n            initialValues={{\n              name: this.state.store.name,\n              description: this.state.store.description,\n              phone: this.state.store.phone,\n              address: this.state.store.address,\n              category: this.state.selected,\n              services: null,\n              owners: null,\n              pictures: [],\n              pictureCount: this.state.pictures.length - this.state.keys.length,\n              storeHours: this.state.storeHours\n            }}\n            validationSchema={this.yupValidationSchema}\n            onSubmit={async (values) => {\n              let shorterVersion = this.shorterVersion\n\n              values.category = this.state.selected.map(function (val) {\n                return shorterVersion(val.name)\n              })\n\n              if(values.category.length == 0) {\n\n                this.setState({\n                  categoryError: true\n                })\n                return;\n              }\n\n                let store_id = this.props.match.params.store_id\n                let triggerStoreDisplay = this.triggerStoreDisplay\n                let triggerStoreDisplayNoResp = this.triggerStoreDisplayNoResp\n\n                values.services = this.state.store.services\n                values.owners = this.state.store.owners\n                values.id = store_id\n                values.storeHours = this.state.newHours\n                values.address = this.state.address\n\n                // remove files from s3\n                if(this.state.keys.length > 0){\n                  await deleteHandler(this.state.keys)\n                }\n\n                // upload new images to s3 from client to avoid burdening back end\n                if(this.state.selectedFiles.length > 0){\n                  let prefix = 'stores/' + this.props.match.params.store_id + '/images/'\n                  await uploadHandler(prefix, this.state.selectedFiles)\n                }\n\n                fetch(fetchDomain + '/stores/edit/' + store_id , {\n                  method: \"POST\",\n                  headers: {\n                    'Content-type': 'application/json'\n                  },\n                  credentials: 'include',\n                  body: JSON.stringify(values)\n                })\n                .then(function(response){\n                  if(response.status!==200){\n                    store.dispatch(addAlert(response))\n                  }\n                  else {\n                    // redirect to home page signed in\n                    return response.json()\n                  }\n                })\n                .then(data => {\n                  if(data){\n                    triggerStoreDisplay(data)\n                  }\n                  else{\n                    console.log(\"should not be here, but going to redirect until this is fixed\")\n                    // this.triggerStoreDisplayNoResp()\n                  }\n                });\n            }}\n          >\n            {({ values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              setFieldValue }) => (\n                <Form className=\"formBody rounded\">\n                  <h3>Store Edit</h3>\n\n                  <Form.Group controlId=\"formName\">\n                    <InputGroup>\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>\n                          <FaShoppingCart />\n                        </InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Control\n                        type=\"text\"\n                        name=\"name\"\n                        value={values.name}\n                        placeholder=\"Business Name\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        className={touched.name && errors.name ? \"error\" : null} />\n                    </InputGroup>\n                    {touched.name && errors.name ? (\n                      <div className=\"error-message\">{errors.name}</div>\n                    ) : null}\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formDescription\">\n                    <InputGroup>\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>\n                          <FaPen />\n                        </InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Control\n                        as=\"textarea\"\n                        rows={3}\n                        name=\"description\"\n                        value={values.description}\n                        placeholder=\"Description\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        className={touched.description && errors.description ? \"error\" : null} />\n                    </InputGroup>\n                    {touched.description && errors.description ? (\n                      <div className=\"error-message\">{errors.description}</div>\n                    ) : null}\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formPhone\">\n                    <InputGroup>\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>\n                          <FaPhone />\n                        </InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Control type=\"text\"\n                        value={values.phone}\n                        placeholder=\"Phone Number\"\n                        name=\"phone\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        className={touched.phone && errors.phone ? \"error\" : null} />\n                    </InputGroup>\n                    {touched.phone && errors.phone ? (\n                      <div className=\"error-message\">{errors.phone}</div>\n                    ) : null}\n                  </Form.Group>\n\n                  <Form.Group controlId=\"autocomplete\">\n                      <InputGroup>\n                        <InputGroup.Prepend>\n                          <InputGroup.Text>\n                            <FaMap />\n                          </InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control\n                          type=\"text\"\n                          placeholder=\"Address\"\n                          autoComplete=\"new-password\"\n                          onChange={event => this.autocompleteChange(event, setFieldValue) }\n                          className={touched.address && errors.address ? \"error\" : null}\n                          value={this.state.address}\n                        />\n                      </InputGroup>\n                      {touched.address && errors.address ? (\n                        <div className=\"error-message\">{errors.address}</div>\n                      ) : null}\n                    </Form.Group>\n\n                  <Form.Group controlId=\"category\">\n\n\n                  <Multiselect\n                    selectedValues={this.state.selected}\n                    options={this.state.category}\n                    onSelect={this.onSelect}\n                    onRemove={this.onRemove}\n                    placeholder=\"Category\"\n                    closeIcon=\"cancel\"\n                    displayValue=\"name\"\n                    avoidHighlightFirstOption={true}\n                    style={{multiselectContainer: { width: '100%'},  groupHeading:{width: 50, maxWidth: 50}, chips: { background: \"#587096\", height: 35 }, inputField: {color: 'black'}, searchBox: { minWidth: '100%', height: '30', backgroundColor: 'white', borderRadius: \"5px\" }} }\n                    />\n\n                  {(this.state.categoryError) ? (\n                    <div className=\"error-message\">Category is required</div>\n                      ) : null}\n                </Form.Group>\n\n                  <h4>Store Hours</h4>\n\n                  <Form.Group controlId=\"formHoursMonday\">\n                    <h5 className=\"text-left\">Monday</h5>\n                    <Form.Row>\n                      <Col>\n                        <Form.Control as=\"select\" value={this.state.storeHours[0].open_time} onChange={this.handleSelectChange.bind(this)}>\n                          <option value={0}>{this.convertMinsToHrsMins(0)}</option>\n                          <option value={60}>{this.convertMinsToHrsMins(60)}</option>\n                          <option value={120}>{this.convertMinsToHrsMins(120)}</option>\n                          <option value={180}>{this.convertMinsToHrsMins(180)}</option>\n                          <option value={240}>{this.convertMinsToHrsMins(240)}</option>\n                          <option value={300}>{this.convertMinsToHrsMins(300)}</option>\n                          <option value={360}>{this.convertMinsToHrsMins(360)}</option>\n                          <option value={420}>{this.convertMinsToHrsMins(420)}</option>\n                          <option value={480}>{this.convertMinsToHrsMins(480)}</option>\n                          <option value={540}>{this.convertMinsToHrsMins(540)}</option>\n                          <option value={600}>{this.convertMinsToHrsMins(600)}</option>\n                          <option value={660}>{this.convertMinsToHrsMins(660)}</option>\n                          <option value={720}>{this.convertMinsToHrsMins(720)}</option>\n                          <option value={780}>{this.convertMinsToHrsMins(780)}</option>\n                          <option value={840}>{this.convertMinsToHrsMins(840)}</option>\n                        </Form.Control>\n                      </Col>\n                      <Col>\n                        <Form.Control as=\"select\" value={this.state.storeHours[0].close_time} onChange={this.handleSelectChange.bind(this)}>\n                          <option value={900}>{this.convertMinsToHrsMins(900)}</option>\n                          <option value={960}>{this.convertMinsToHrsMins(960)}</option>\n                          <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\n                          <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\n                          <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\n                          <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\n                          <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\n                          <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\n                          <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\n                          <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\n                        </Form.Control>\n                      </Col>\n                    </Form.Row>\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formHoursTuesday\">\n                    <h5 className=\"text-left\">Tuesday</h5>\n                    <Form.Row>\n                      <Col>\n                        <Form.Control as=\"select\" value={this.state.storeHours[1].open_time} onChange={this.handleSelectChange.bind(this)}>\n                          <option value={0}>{this.convertMinsToHrsMins(0)}</option>\n                          <option value={60}>{this.convertMinsToHrsMins(60)}</option>\n                          <option value={120}>{this.convertMinsToHrsMins(120)}</option>\n                          <option value={180}>{this.convertMinsToHrsMins(180)}</option>\n                          <option value={240}>{this.convertMinsToHrsMins(240)}</option>\n                          <option value={300}>{this.convertMinsToHrsMins(300)}</option>\n                          <option value={360}>{this.convertMinsToHrsMins(360)}</option>\n                          <option value={420}>{this.convertMinsToHrsMins(420)}</option>\n                          <option value={480}>{this.convertMinsToHrsMins(480)}</option>\n                          <option value={540}>{this.convertMinsToHrsMins(540)}</option>\n                          <option value={600}>{this.convertMinsToHrsMins(600)}</option>\n                          <option value={660}>{this.convertMinsToHrsMins(660)}</option>\n                          <option value={720}>{this.convertMinsToHrsMins(720)}</option>\n                          <option value={780}>{this.convertMinsToHrsMins(780)}</option>\n                          <option value={840}>{this.convertMinsToHrsMins(840)}</option>\n                        </Form.Control>\n                      </Col>\n                      <Col>\n                        <Form.Control as=\"select\" value={this.state.storeHours[1].close_time} onChange={this.handleSelectChange.bind(this)}>\n                          <option value={900}>{this.convertMinsToHrsMins(900)}</option>\n                          <option value={960}>{this.convertMinsToHrsMins(960)}</option>\n                          <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\n                          <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\n                          <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\n                          <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\n                          <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\n                          <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\n                          <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\n                          <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\n                        </Form.Control>\n                      </Col>\n                    </Form.Row>\n                  </Form.Group>\n\n\n                  <Form.Group controlId=\"formHoursWednesday\">\n                    <h5 className=\"text-left\">Wednesday</h5>\n                    <Form.Row>\n                      <Col>\n                        <Form.Control as=\"select\" value={this.state.storeHours[2].open_time} onChange={this.handleSelectChange.bind(this)}>\n                          <option value={0}>{this.convertMinsToHrsMins(0)}</option>\n                          <option value={60}>{this.convertMinsToHrsMins(60)}</option>\n                          <option value={120}>{this.convertMinsToHrsMins(120)}</option>\n                          <option value={180}>{this.convertMinsToHrsMins(180)}</option>\n                          <option value={240}>{this.convertMinsToHrsMins(240)}</option>\n                          <option value={300}>{this.convertMinsToHrsMins(300)}</option>\n                          <option value={360}>{this.convertMinsToHrsMins(360)}</option>\n                          <option value={420}>{this.convertMinsToHrsMins(420)}</option>\n                          <option value={480}>{this.convertMinsToHrsMins(480)}</option>\n                          <option value={540}>{this.convertMinsToHrsMins(540)}</option>\n                          <option value={600}>{this.convertMinsToHrsMins(600)}</option>\n                          <option value={660}>{this.convertMinsToHrsMins(660)}</option>\n                          <option value={720}>{this.convertMinsToHrsMins(720)}</option>\n                          <option value={780}>{this.convertMinsToHrsMins(780)}</option>\n                          <option value={840}>{this.convertMinsToHrsMins(840)}</option>\n                        </Form.Control>\n                      </Col>\n                      <Col>\n                        <Form.Control as=\"select\" value={this.state.storeHours[2].close_time} onChange={this.handleSelectChange.bind(this)}>\n                          <option value={900}>{this.convertMinsToHrsMins(900)}</option>\n                          <option value={960}>{this.convertMinsToHrsMins(960)}</option>\n                          <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\n                          <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\n                          <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\n                          <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\n                          <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\n                          <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\n                          <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\n                          <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\n                        </Form.Control>\n                      </Col>\n                    </Form.Row>\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formHoursThursday\">\n                    <h5 className=\"text-left\">Thursday</h5>\n                    <Form.Row>\n                      <Col>\n                        <Form.Control as=\"select\" value={this.state.storeHours[3].open_time} onChange={this.handleSelectChange.bind(this)}>\n                          <option value={0}>{this.convertMinsToHrsMins(0)}</option>\n                          <option value={60}>{this.convertMinsToHrsMins(60)}</option>\n                          <option value={120}>{this.convertMinsToHrsMins(120)}</option>\n                          <option value={180}>{this.convertMinsToHrsMins(180)}</option>\n                          <option value={240}>{this.convertMinsToHrsMins(240)}</option>\n                          <option value={300}>{this.convertMinsToHrsMins(300)}</option>\n                          <option value={360}>{this.convertMinsToHrsMins(360)}</option>\n                          <option value={420}>{this.convertMinsToHrsMins(420)}</option>\n                          <option value={480}>{this.convertMinsToHrsMins(480)}</option>\n                          <option value={540}>{this.convertMinsToHrsMins(540)}</option>\n                          <option value={600}>{this.convertMinsToHrsMins(600)}</option>\n                          <option value={660}>{this.convertMinsToHrsMins(660)}</option>\n                          <option value={720}>{this.convertMinsToHrsMins(720)}</option>\n                          <option value={780}>{this.convertMinsToHrsMins(780)}</option>\n                          <option value={840}>{this.convertMinsToHrsMins(840)}</option>\n                        </Form.Control>\n                      </Col>\n                      <Col>\n                        <Form.Control as=\"select\" value={this.state.storeHours[3].close_time} onChange={this.handleSelectChange.bind(this)}>\n                          <option value={900}>{this.convertMinsToHrsMins(900)}</option>\n                          <option value={960}>{this.convertMinsToHrsMins(960)}</option>\n                          <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\n                          <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\n                          <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\n                          <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\n                          <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\n                          <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\n                          <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\n                          <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\n                        </Form.Control>\n                      </Col>\n                    </Form.Row>\n                  </Form.Group>\n\n\n                  <Form.Group controlId=\"formHoursFriday\">\n                    <h5 className=\"text-left\">Friday</h5>\n                    <Form.Row>\n                      <Col>\n                        <Form.Control as=\"select\" value={this.state.storeHours[4].open_time} onChange={this.handleSelectChange.bind(this)}>\n                          <option value={0}>{this.convertMinsToHrsMins(0)}</option>\n                          <option value={60}>{this.convertMinsToHrsMins(60)}</option>\n                          <option value={120}>{this.convertMinsToHrsMins(120)}</option>\n                          <option value={180}>{this.convertMinsToHrsMins(180)}</option>\n                          <option value={240}>{this.convertMinsToHrsMins(240)}</option>\n                          <option value={300}>{this.convertMinsToHrsMins(300)}</option>\n                          <option value={360}>{this.convertMinsToHrsMins(360)}</option>\n                          <option value={420}>{this.convertMinsToHrsMins(420)}</option>\n                          <option value={480}>{this.convertMinsToHrsMins(480)}</option>\n                          <option value={540}>{this.convertMinsToHrsMins(540)}</option>\n                          <option value={600}>{this.convertMinsToHrsMins(600)}</option>\n                          <option value={660}>{this.convertMinsToHrsMins(660)}</option>\n                          <option value={720}>{this.convertMinsToHrsMins(720)}</option>\n                          <option value={780}>{this.convertMinsToHrsMins(780)}</option>\n                          <option value={840}>{this.convertMinsToHrsMins(840)}</option>\n                        </Form.Control>\n                      </Col>\n                      <Col>\n                        <Form.Control as=\"select\" value={this.state.storeHours[4].close_time} onChange={this.handleSelectChange.bind(this)}>\n                          <option value={900}>{this.convertMinsToHrsMins(900)}</option>\n                          <option value={960}>{this.convertMinsToHrsMins(960)}</option>\n                          <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\n                          <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\n                          <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\n                          <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\n                          <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\n                          <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\n                          <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\n                          <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\n                        </Form.Control>\n                      </Col>\n                    </Form.Row>\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formHoursSaturday\">\n                    <h5 className=\"text-left\">Saturday</h5>\n                    <Form.Row>\n                      <Col>\n                        <Form.Control as=\"select\" value={this.state.storeHours[5].open_time} onChange={this.handleSelectChange.bind(this)}>\n                          <option value={0}>{this.convertMinsToHrsMins(0)}</option>\n                          <option value={60}>{this.convertMinsToHrsMins(60)}</option>\n                          <option value={120}>{this.convertMinsToHrsMins(120)}</option>\n                          <option value={180}>{this.convertMinsToHrsMins(180)}</option>\n                          <option value={240}>{this.convertMinsToHrsMins(240)}</option>\n                          <option value={300}>{this.convertMinsToHrsMins(300)}</option>\n                          <option value={360}>{this.convertMinsToHrsMins(360)}</option>\n                          <option value={420}>{this.convertMinsToHrsMins(420)}</option>\n                          <option value={480}>{this.convertMinsToHrsMins(480)}</option>\n                          <option value={540}>{this.convertMinsToHrsMins(540)}</option>\n                          <option value={600}>{this.convertMinsToHrsMins(600)}</option>\n                          <option value={660}>{this.convertMinsToHrsMins(660)}</option>\n                          <option value={720}>{this.convertMinsToHrsMins(720)}</option>\n                          <option value={780}>{this.convertMinsToHrsMins(780)}</option>\n                          <option value={840}>{this.convertMinsToHrsMins(840)}</option>\n                        </Form.Control>\n                      </Col>\n                      <Col>\n                        <Form.Control as=\"select\" value={this.state.storeHours[5].close_time} onChange={this.handleSelectChange.bind(this)}>\n                          <option value={900}>{this.convertMinsToHrsMins(900)}</option>\n                          <option value={960}>{this.convertMinsToHrsMins(960)}</option>\n                          <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\n                          <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\n                          <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\n                          <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\n                          <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\n                          <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\n                          <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\n                          <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\n                        </Form.Control>\n                      </Col>\n                    </Form.Row>\n                  </Form.Group>\n\n\n                  <Form.Group controlId=\"formHoursSunday\">\n                    <h5 className=\"text-left\">Sunday</h5>\n                    <Form.Row>\n                      <Col>\n                        <Form.Control as=\"select\" value={this.state.storeHours[6].open_time} onChange={this.handleSelectChange.bind(this)}>\n                          <option value={0}>{this.convertMinsToHrsMins(0)}</option>\n                          <option value={60}>{this.convertMinsToHrsMins(60)}</option>\n                          <option value={120}>{this.convertMinsToHrsMins(120)}</option>\n                          <option value={180}>{this.convertMinsToHrsMins(180)}</option>\n                          <option value={240}>{this.convertMinsToHrsMins(240)}</option>\n                          <option value={300}>{this.convertMinsToHrsMins(300)}</option>\n                          <option value={360}>{this.convertMinsToHrsMins(360)}</option>\n                          <option value={420}>{this.convertMinsToHrsMins(420)}</option>\n                          <option value={480}>{this.convertMinsToHrsMins(480)}</option>\n                          <option value={540}>{this.convertMinsToHrsMins(540)}</option>\n                          <option value={600}>{this.convertMinsToHrsMins(600)}</option>\n                          <option value={660}>{this.convertMinsToHrsMins(660)}</option>\n                          <option value={720}>{this.convertMinsToHrsMins(720)}</option>\n                          <option value={780}>{this.convertMinsToHrsMins(780)}</option>\n                          <option value={840}>{this.convertMinsToHrsMins(840)}</option>\n                        </Form.Control>\n                      </Col>\n                      <Col>\n                        <Form.Control as=\"select\" value={this.state.storeHours[6].close_time} onChange={this.handleSelectChange.bind(this)}>\n                          <option value={900}>{this.convertMinsToHrsMins(900)}</option>\n                          <option value={960}>{this.convertMinsToHrsMins(960)}</option>\n                          <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\n                          <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\n                          <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\n                          <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\n                          <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\n                          <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\n                          <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\n                          <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\n                        </Form.Control>\n                      </Col>\n                    </Form.Row>\n                  </Form.Group>\n\n                  <Form.Group controlId=\"pictures\">\n                    <Form.Label>Delete Images</Form.Label>\n                    {this.state.pictures.map((picture, index) => (\n                      <div key={\"pic-\" + index}>\n                        <img className=\"img-fluid\" src={picture.url} alt={\"Slide \" + index} />\n                        <Form.Check\n                          // style={{marginLeft: 30}}\n                          id={picture.key}\n                          label={picture.key.split('/').slice(-1)[0]}\n                          onChange={event => this.deleteFileChangeHandler(event, setFieldValue, values.pictures.length)}\n                        />\n                      </div>\n                    ))}\n                  </Form.Group>\n\n                  <Form.Group controlId=\"pictureCount\">\n                    <Form.Label>Add Images</Form.Label>\n                    <br/>\n                    <input\n                      onChange={event => this.fileChangedHandler(event, setFieldValue, values.pictures)}\n                      type=\"file\"\n                      multiple\n                      className={touched.pictures && errors.pictures ? \"error\" : null}\n                    />\n                    {touched.pictureCount && errors.pictureCount ? (\n                      <div className=\"error-message\">{errors.pictureCount}</div>\n                    ): null}\n                  </Form.Group>\n\n                  <Button onClick={handleSubmit}>Submit</Button>\n                </Form>\n              )}\n          </Formik>\n        </Col>\n      </Row>\n      }\n    }\n\nexport default withRouter(StoreEditForm);\n","//CITATION: https://medium.com/@faizanv/authentication-for-your-react-and-express-application-w-json-web-tokens-923515826e0\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nexport default function redirectWithoutAuth(ComponentToProtect) {\n  return class extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        loading: true,\n        redirect: false,\n      };\n    }\n    componentDidMount() {\n      // note, should you be allowed to edit serivces if you are a worker and not the owner?\n      if(this.props.match.params.store_id){\n        if(Cookies.get('token')){\n          fetch(fetchDomain + '/checkTokenAndPermissions' , {\n            method: \"POST\",\n            headers: {\n              'Content-type': 'application/json'\n            },\n            credentials: 'include',\n            body: JSON.stringify({store_id: this.props.match.params.store_id, worker_id: this.props.match.params.worker_id, user_id: JSON.parse(Cookies.get('user').substring(2)).id})\n          }).then(res => {\n            if (res.status === 200) {\n              this.setState({ loading: false });\n            } else {\n              const error = new Error(res.error);\n              throw error;\n            }\n          })\n          .catch(err => {\n            this.setState({ loading: false, redirect: true });\n          });\n        }\n        else{\n          this.setState({ loading: false, redirect: true})\n        }\n      }\n      else {\n        fetch(fetchDomain + '/checkToken' , {\n          method: \"GET\",\n          headers: {\n            'Content-type': 'application/json'\n          },\n          credentials: 'include'\n        }).then(res => {\n            if (res.status === 200) {\n              // verified user is logged in and has a valid token\n              // if they are trying to access private data, make sure it is the correct user\n              if(this.props.match.params.user_id){\n                if (JSON.parse(Cookies.get('user').substring(2)).id == this.props.match.params.user_id) {\n                  this.setState({\n                    loading: false\n                  })\n                }\n                else{\n                  this.setState({\n                    loading: false,\n                    redirect: true\n                  })\n                }\n              }\n              this.setState({ loading: false });\n            } else {\n              const error = new Error(res.error);\n              throw error;\n            }\n          })\n          .catch(err => {\n            this.setState({ loading: false, redirect: true });\n          });\n      }\n    }\n    render() {\n      const { loading, redirect } = this.state;\n      if (loading) {\n        return null;\n      }\n      if (redirect) {\n        return <Redirect to=\"/login\" />;\n      }\n      else {\n        return <ComponentToProtect {...this.props} />;\n      }\n    }\n  }\n}","import React from 'react';\nimport '../../App.css';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport { FaLockOpen, FaLock, FaUser, FaPhone } from 'react-icons/fa';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {editUser} from '../../reduxFolder/redux.js'\n\nclass EditProfileForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {\n        first_name: '',\n        last_name: '',\n        phone: '',\n        password: '',\n        password_confirmation: '',\n        id: ''\n      }\n    }\n    // RegEx for phone number validation\n    this.phoneRegExp = /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/\n    // this.emailRegExp = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/\n    // Schema for yup\n    this.yupValidationSchema = Yup.object().shape({\n      first_name: Yup.string()\n      .min(2, \"First name must have at least 2 characters\")\n      .max(100, \"First name can't be longer than 100 characters\")\n      .required(\"First name is required\"),\n      last_name: Yup.string()\n      .min(2, \"Last name must have at least 2 characters\")\n      .max(100, \"Last name can't be longer than 100 characters\")\n      .required(\"Last name is required\"),\n      // email: Yup.string()\n      // .email(\"Must be a valid email address\")\n      // .max(100, \"Email must be less than 100 characters\")\n      // .required(\"Email is required\"),\n      phone: Yup.string()\n      .matches(this.phoneRegExp, \"Phone number is not valid\"),\n      password: Yup.string()\n      .min(6, \"Password must have at least 6 characters\")\n      .max(100, \"Password can't be longer than 100 characters\")\n      .required(\"Password is required\"),\n      password_confirmation: Yup.string()\n      .oneOf([Yup.ref('password')], 'Passwords do not match')\n      .required(\"Password confirmation is required\"),\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState)  {\n    if (prevProps.user !== this.props.user) {\n      this.props.history.push({\n        pathname: '/users/' + this.props.user.id,\n      })\n    }\n  }\n    \n  render() {\n    return (\n      <Container fluid>\n        <Row className=\"justify-content-center\">\n          <Col xs={8} sm={7} md={6} lg={5}>\n            <Formik\n              enableReinitialize\n              initialValues={{\n                first_name: this.props.user.first_name,\n                last_name: this.props.user.last_name,\n                phone: this.props.user.phone,\n                password: '',\n                password_confirmation: '',\n                id: 0\n              }}\n              validationSchema={this.yupValidationSchema}\n              onSubmit={(values) => {\n                values.id = this.props.match.params.user_id\n\n                this.props.editProfile(values)\n              }}\n            >\n            {( {values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit}) => (\n              <Form className=\"formBody rounded\">\n                <h3>Edit Profile</h3>\n\n                <Form.Group controlId=\"formFirstName\">\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                            <FaUser/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control \n                      type=\"text\" \n                      name=\"first_name\"\n                      value={values.first_name} \n                      placeholder=\"First Name\" \n                      onChange={handleChange} \n                      onBlur={handleBlur}\n                      className={touched.first_name && errors.first_name ? \"error\" : null}/>\n                  </InputGroup>\n                  {touched.first_name && errors.first_name ? (\n                    <div className=\"error-message\">{errors.first_name}</div>\n                  ): null}\n                </Form.Group>\n\n                <Form.Group controlId=\"formLastName\">\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                            <FaUser/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control type=\"text\" \n                    value={values.last_name}\n                    placeholder=\"Last Name\" \n                    name=\"last_name\" \n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    className={touched.last_name && errors.last_name ? \"error\" : null}/>\n                  </InputGroup>\n                  {touched.last_name && errors.last_name ? (\n                    <div className=\"error-message\">{errors.last_name}</div>\n                  ): null}\n                </Form.Group>\n\n                <Form.Group controlId=\"formPhone\">\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                            <FaPhone/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control type=\"text\" \n                      value={values.phone} \n                      placeholder=\"Phone Number\" \n                      name=\"phone\" \n                      onChange={handleChange} \n                      onBlur={handleBlur}\n                      className={touched.phone && errors.phone ? \"error\" : null}/>\n                  </InputGroup>\n                  {touched.phone && errors.phone ? (\n                    <div className=\"error-message\">{errors.phone}</div>\n                  ): null}\n                </Form.Group>\n\n                <Form.Group controlId=\"formPassword\">\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                            <FaLockOpen/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control \n                      type=\"password\" \n                      value={values.password} \n                      placeholder=\"Password\" \n                      name=\"password\" \n                      onChange={handleChange} \n                      onBlur={handleBlur}\n                      className={touched.password && errors.password ? \"error\" : null}/>\n                  </InputGroup>\n                  {touched.password && errors.password ? (\n                    <div className=\"error-message\">{errors.password}</div>\n                  ): null}\n                </Form.Group>\n\n                <Form.Group controlId=\"formPasswordConfirmation\">\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                            <FaLock/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control \n                      type=\"password\" \n                      value={values.password_confirmation}\n                      placeholder=\"Confirm Password\" \n                      name=\"password_confirmation\" \n                      onChange={handleChange} \n                      onBlur={handleBlur}\n                      className={touched.password_confirmation && errors.password_confirmation ? \"error\" : null}/>\n                  </InputGroup>\n                  {touched.password_confirmation && errors.password_confirmation ? (\n                    <div className=\"error-message\">{errors.password_confirmation}</div>\n                  ): null}\n                </Form.Group>\n                <Button onClick={handleSubmit}>Submit</Button>\n              </Form>\n            )}\n            </Formik>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.userReducer.user\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  editProfile: (email, password, auth_token) => editUser(email, password, auth_token)\n}, dispatch)\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfileForm);\n","import React from 'react';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { connect } from 'react-redux';\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    // fix later to render all users not just current one? this.props.match.params.user_id\n    return (\n      <Container fluid>\n        <Row className=\"justify-content-center\">\n            <Col>\n              <h1>{this.props.user.first_name} {this.props.user.last_name}</h1>\n              <h1>{this.props.user.phone}</h1>\n              <h1>{this.props.user.email}</h1>\n            </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.userReducer.user\n})\n\nexport default connect(mapStateToProps)(Profile);\n","import React from \"react\"\nimport ContentLoader from \"react-content-loader\" \n\nconst UserStoresDashboardLoader = () => (\n  <ContentLoader \n    speed={1}\n    style={{ width: '100%', height: '100%' }}\n    viewBox=\"0 0 1000 1500\"\n    backgroundColor=\"#f3f3f3\"\n    foregroundColor=\"#eae8e8\"\n  >\n    <rect className={'d-none d-md-block'} x=\"50\" y=\"30\" rx=\"0\" ry=\"0\" width=\"500\" height=\"250\" /> \n    <rect className={'d-none d-md-block'} x=\"630\" y=\"71\" rx=\"3\" ry=\"3\" width=\"200\" height=\"15\" /> \n    <rect className={'d-none d-md-block'} x=\"645\" y=\"105\" rx=\"3\" ry=\"3\" width=\"164\" height=\"6\" /> \n    <rect className={'d-none d-md-block'} x=\"630\" y=\"130\" rx=\"3\" ry=\"3\" width=\"200\" height=\"25\" /> \n    <rect className={'d-none d-md-block'} x=\"630\" y=\"170\" rx=\"3\" ry=\"3\" width=\"200\" height=\"25\" /> \n    <rect className={'d-none d-md-block'} x=\"630\" y=\"210\" rx=\"3\" ry=\"3\" width=\"200\" height=\"25\" /> \n    \n    <rect className={'d-block d-md-none'} x=\"66\" y=\"0\" rx=\"0\" ry=\"0\" width=\"858\" height=\"614\" /> \n    <rect className={'d-block d-md-none'}x=\"69\" y=\"689\" rx=\"3\" ry=\"3\" width=\"858\" height=\"115\" /> \n    <rect className={'d-block d-md-none'}x=\"104\" y=\"869\" rx=\"3\" ry=\"3\" width=\"788\" height=\"55\" /> \n    <rect className={'d-block d-md-none'}x=\"49\" y=\"999\" rx=\"3\" ry=\"3\" width=\"900\" height=\"115\" /> \n    <rect className={'d-block d-md-none'}x=\"49\" y=\"1169\" rx=\"3\" ry=\"3\" width=\"900\" height=\"115\" /> \n    <rect className={'d-block d-md-none'}x=\"49\" y=\"1339\" rx=\"3\" ry=\"3\" width=\"900\" height=\"115\" /> \n  </ContentLoader>\n)\n\nexport default UserStoresDashboardLoader","import React from 'react';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { Button, Image } from 'react-bootstrap';\n// import SearchCard from '../Search/SearchCard';\nimport Carousel from 'react-bootstrap/Carousel'\n// import salon from '../../assets/salon.jpg';\nimport salon2 from '../../assets/salon2.jpeg';\nimport hair from '../../assets/hair_salon.jpg';\nimport { FaEdit } from 'react-icons/fa';\nimport './UserStoresDashboard.css'\nimport {\n  addAlert\n} from '../../reduxFolder/actions/alert'\nimport store from '../../reduxFolder/store';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n// import {addStore} from '../../reduxFolder/actions/stores.js'\nimport UserStoresDashboardLoader from './UserStoresDashboardLoader';\nimport { getPictures } from '../s3'\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\n// ***** NOTE: fix to properly display all the stores\n\nclass UserStoresDashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      stores: [\n        {\n          id: \"\",\n          name: \"\",\n          address: \"\",\n          created_at: \"\",\n          category: [],\n          services: [],\n          workers: [],\n          owners: [],\n          phone: \"\",\n          clients: [],\n          description: \"\",\n          lat: \"\",\n          lng: \"\"\n        }\n      ],\n      redirectToWorkerForm: null,\n      store_id: null,\n      loading: true\n    }\n  }\n\n  triggerStoreEdit(passedStore) {\n    this.props.history.push({\n      pathname: '/stores/edit/' + passedStore.id,\n      state: {\n        store: passedStore\n      }\n    })\n  }\n\n  triggerAddWorker(id) {\n    this.props.history.push({\n      pathname: '/stores/addWorker/' + id\n    })\n  }\n\n  triggerShowWorkers(id) {\n    this.props.history.push({\n      pathname: '/stores/' + id + '/workers'\n    })\n  }\n\n  triggerStoreShow(passedStore) {\n    this.props.history.push({\n      pathname: '/stores/' + passedStore.id,\n      state: {\n        store: passedStore\n      }\n    })\n  }\n\n  triggerShowServices(id) {\n    this.props.history.push({\n      pathname: '/stores/' + id + '/services'\n    })\n  }\n\n  triggerAddService(id) {\n    this.props.history.push({\n      pathname: '/stores/addService/' + id,\n    })\n  }\n\n  triggerShowCalendar(store) {\n    this.props.history.push({\n      pathname: '/storeCalendar/' + store.id,\n      state: {\n        store: store\n      }\n    })\n  }\n\n  componentDidMount() {\n    fetch(fetchDomain + '/stores/users/' + this.props.match.params.user_id , {\n      method: \"GET\",\n      headers: {\n          'Content-type': 'application/json'\n      },\n      credentials: 'include'\n    })\n    .then(function(response){\n      if(response.status!==200){\n        // throw an error alert\n        store.dispatch(addAlert(response))\n      }\n      else{\n        return response.json();\n      }\n    })\n    .then(async data => {\n      if(data){\n        // let convertedCategory = data.category.map((str) => ({ value: str.toLowerCase(), label: str }));\n\n        var appendedStores = await Promise.all(data.map(async (store): Promise<Object> => {\n          let pictures = await getPictures('stores/' + store.id + '/images/')\n\n          // once all data is clean and picture requirement is enforced we can remove this\n          if(pictures.length == 0){\n            pictures = [\n              {\n                url: \"/hair.jpg\",\n                key: \"/hair.jpg\"\n              },\n              {\n                url: \"/nails.jpg\",\n                key: \"/nails.jpg\"\n              },\n              {\n                url: \"/salon.jpg\",\n                key: \"/salon.jpg\"\n              }\n            ]\n          }\n\n          // we can use this for now to avoid s3 fetches\n          // let pictures = [\n          //     {\n          //       url: \"/hair.jpg\",\n          //       key: \"/hair.jpg\"\n          //     },\n          //     {\n          //       url: \"/nails.jpg\",\n          //       key: \"/nails.jpg\"\n          //     },\n          //     {\n          //       url: \"/salon.jpg\",\n          //       key: \"/salon.jpg\"\n          //     }\n          //   ]\n\n          var newstore = Object.assign({}, store);\n          newstore.pictures = pictures;\n          return newstore;\n        }));\n\n        this.setState({\n          stores: appendedStores,\n          loading: false\n        })\n      }\n      // this.props.addStore(data);\n    });\n  }\n\n  render() {\n    const DisplayWithLoading = (props) => {\n      if (this.state.loading) {\n        return <Row className=\"mt-5\">\n            <Col xs=\"12\">\n              <UserStoresDashboardLoader/>\n            </Col>\n          </Row>\n      } else {\n        return(\n          <>{this.state.stores.map((store, index) => (\n            <div key={\"store\" + index}>\n              <Row className=\"justify-content-center align-content-center my-5\">\n                <Col md={6} className=\"vertical-align-contents\">\n                  <Carousel className=\"dashboard-carousel\" interval=\"\">\n                    {store.pictures.map((picture, index) => (\n                      <Carousel.Item key={\"pic-\" + index}>\n                        <Image fluid src={picture.url} alt={\"alt-\" + index}/>\n                        <img style={this.props.img} src={picture.url} alt={\"Slide \" + index} />\n                      </Carousel.Item>\n                    ))}\n                  </Carousel>\n                </Col>\n                <Col md={5} className=\"vertical-align-contents\">\n                  <Row className={\"justify-content-center\"}>\n                    <Col sm={12}>\n                      <span className=\"name\" onClick={() => this.triggerStoreShow(store)} style={{cursor: 'pointer'}}> {store.name} </span>\n                      <FaEdit className=\"edit mb-3\" size={25} onClick={() => this.triggerStoreEdit(store)}/>\n                    </Col>\n                    <Col sm={12}>\n                      <p className=\"address\">{store.address} </p>\n                    </Col>\n                    <Col sm={8} className={\"py-1\"}>\n                      <Button block className=\"update_button\"  onClick={() =>  this.triggerShowCalendar(store)}>Calendar</Button> &nbsp;\n                    </Col>\n                    <Col sm={8} className={\"py-1\"}>\n                      <Button block className=\"update_button\" onClick={() =>  this.triggerShowWorkers(store.id)}>Workers</Button> &nbsp;\n                    </Col>\n                    <Col sm={8} className={\"py-1\"}>\n                      <Button block className=\"update_button\" onClick={() =>  this.triggerShowServices(store.id)}>Services</Button> &nbsp;\n                    </Col>\n                  </Row>\n                </Col>\n              </Row>\n            </div>\n          ))}</>\n        )\n      }\n    }\n    return (\n      <Container fluid>\n        <DisplayWithLoading/>\n      </Container>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  // stores: state.storeReducer.stores,\n  user: state.userReducer.user\n})\n\n// const mapDispatchToProps = dispatch => bindActionCreators({\n//   addStore: (store) => addStore(store),\n// }, dispatch)\n\n\nexport default connect(mapStateToProps/*, mapDispatchToProps*/)(UserStoresDashboard);\n","import React from 'react';\nimport '../../App.css';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport { FaEnvelope } from 'react-icons/fa';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport Select from 'react-select';\nimport {\n  addAlert\n} from '../../reduxFolder/actions/alert'\nimport store from '../../reduxFolder/store';\nimport GridLoader from 'react-spinners/GridLoader'\nimport { css } from '@emotion/core'\n\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n`;\n\nclass AddWorkerForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: [\n        { value: 0, label: 'Brazilian Blowout' },\n        { value: 1, label: 'Manicure' },\n      ],\n      workerHours: [],\n      storeHours: [],\n      weekIsWorking: [true, true, true, true, true, true, true],\n      loading: true\n    };\n    this.emailRegExp = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/\n    // Schema for yup\n    this.yupValidationSchema = Yup.object().shape({\n      email: Yup.string()\n        .email(\"Must be a valid email address\")\n        .max(100, \"Email must be less than 100 characters\")\n        .required(\"Email is required\"),\n    });\n\n    this.triggerWorkerDisplay = this.triggerWorkerDisplay.bind(this);\n  }\n\n  convertMinsToHrsMins(mins) {\n    let h = Math.floor(mins / 60);\n    let m = mins % 60;\n    let am = false\n    if (h == 24) {\n      am = true\n      h -= 12\n    }\n    else if (h < 12) {\n      am = true\n    } else if (h != 12) {\n      h -= 12\n    }\n    h = h < 10 ? '0' + h : h;\n    if (h == 0) {\n      h = '12'\n    }\n    m = m < 10 ? '0' + m : m;\n    if (am) {\n      return `${h}:${m}am`;\n    } else {\n      return `${h}:${m}pm`;\n    }\n\n  }\n\n  handleSelectChange = (event) => {\n    var days = ['formHoursMonday', 'formHoursTuesday', 'formHoursWednesday', 'formHoursThursday', 'formHoursFriday', 'formHoursSaturday', 'formHoursSunday']\n    var day = days.indexOf(event.target.id)\n    var old_start_time = 0\n    var old_end_time = 0\n    var newWorkerHours = []\n    old_start_time = this.state.workerHours[day].start_time\n    old_end_time = this.state.workerHours[day].end_time\n    if (parseInt(event.target.querySelector('option').value) <= 840) {\n      newWorkerHours = [\n        ...this.state.workerHours.slice(0, day),\n        { start_time: parseInt(event.target.value), end_time: old_end_time },\n        ...this.state.workerHours.slice(day + 1)\n      ]\n    } else {\n      newWorkerHours = [\n        ...this.state.workerHours.slice(0, day),\n        { start_time: old_start_time, end_time: parseInt(event.target.value) },\n        ...this.state.workerHours.slice(day + 1)\n      ]\n    }\n\n    this.setState({\n      workerHours: newWorkerHours\n    })\n  };\n\n  handleDayStatusChange = (day) => {\n    var updateWeekIsWorking = [\n      ...this.state.weekIsWorking.slice(0, day),\n      !this.state.weekIsWorking[day],\n      ...this.state.weekIsWorking.slice(day + 1)\n    ]\n\n    this.setState({\n      weekIsWorking: updateWeekIsWorking\n    })\n  };\n\n  // redirect to the worker display page and pass the new worker data\n  triggerWorkerDisplay(returnedWorker) {\n    this.props.history.push({\n      pathname: '/stores/' + this.props.match.params.store_id + '/workers/' + returnedWorker.id,\n      state: {\n        worker: returnedWorker\n      }\n    })\n  }\n\n  componentDidMount() {\n    fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/storeHours\", {\n      method: \"GET\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      credentials: 'include'\n    })\n      .then(function (response) {\n        if (response.status !== 200) {\n          // throw an error alert\n          store.dispatch(addAlert(response))\n        }\n        else {\n          return response.json();\n        }\n      })\n      .then(data => {\n        if (data) {\n          let receivedWorkerHours = data.map((day) => ({ start_time: day.open_time, end_time: day.close_time }));\n          this.setState({\n            storeHours: data, \n            workerHours: receivedWorkerHours,\n            loading: false\n          })\n        }\n      });\n  }\n\n  render() {\n    const CreateStartTimesForDay = (props) => {\n      let items = [];\n      for (let i = this.state.storeHours[props.day].open_time; i <= 840; i += 60) {\n        items.push(<option key={i} value={i}>{this.convertMinsToHrsMins(i)}</option>);\n      }\n      return items;\n    }\n    const CreateEndTimesForDay = (props) => {\n      let items = [];\n      for (let i = 900; i <= this.state.storeHours[props.day].close_time; i += 60) {\n        items.push(<option key={i} value={i}>{this.convertMinsToHrsMins(i)}</option>);\n      }\n      return items;\n    }\n    const DisplayWithLoading = (props) => {\n      if (this.state.loading) {\n        return <Row className=\"vertical-center\">\n          <Col>\n            <GridLoader\n              css={override}\n              size={20}\n              color={\"#2196f3\"}\n              loading={this.state.isLoading}\n            />\n          </Col>\n        </Row>\n      } else { \n        return <Row className=\"justify-content-center\">\n          <Col xs={8} sm={7} md={6} lg={5}>\n            <Formik\n              initialValues={{\n                email: '',\n                services: '',\n                workerHours: []\n              }}\n              validationSchema={this.yupValidationSchema}\n              onSubmit={(values) => {\n                let store_id = this.props.match.params.store_id\n                let triggerWorkerDisplay = this.triggerWorkerDisplay\n\n                values.workerHours = this.state.workerHours\n                values.services = values.services.map(function (val) {\n                  return val.value;\n                })\n\n                fetch(fetchDomain + '/stores/addWorker/' + store_id, {\n                  method: \"POST\",\n                  headers: {\n                    'Content-type': 'application/json'\n                  },\n                  credentials: 'include',\n                  body: JSON.stringify(values)\n                })\n                  .then(function (response) {\n                    if (response.status !== 200) {\n                      store.dispatch(addAlert(response))\n                    }\n                    else {\n                      return response.json();\n                    }\n                  })\n                  .then(function (data) {\n                    // redirect to home page signed in\n                    if (data) {\n                      triggerWorkerDisplay(data)\n                    }\n                  })\n              }}\n            >\n              {({ values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                setFieldValue }) => (\n                  <Form className=\"formBody rounded\">\n                    <h3>Add Worker</h3>\n\n                    <Form.Group controlId=\"formEmail\">\n                      <InputGroup>\n                        <InputGroup.Prepend>\n                          <InputGroup.Text>\n                            <FaEnvelope />\n                          </InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control\n                          type=\"email\"\n                          value={values.email}\n                          placeholder=\"Email\"\n                          name=\"email\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          className={touched.email && errors.email ? \"error\" : null} />\n                      </InputGroup>\n                      {touched.email && errors.email ? (\n                        <div className=\"error-message\">{errors.email}</div>\n                      ) : null}\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formServices\">\n                      <Select\n                        value={values.services}\n                        onChange={option => setFieldValue(\"services\", option)}\n                        name=\"services\"\n                        options={this.state.options}\n                        isMulti={true}\n                        placeholder={\"Services\"}\n                        className={touched.services && errors.services ? \"error\" : null}\n                      />\n                      {touched.services && errors.services ? (\n                        <div className=\"error-message\">{errors.services}</div>\n                      ) : null}\n                    </Form.Group>\n\n                    {/* Later make this work with store hours*/}\n                    <h4>Worker Hours</h4>\n\n                    <Form.Group controlId=\"formHoursMonday\">\n                      <Form.Row className=\"text-left\">\n                        <Col>\n                          <h5>Monday</h5>\n                          <Form.Check\n                            type=\"checkbox\"\n                            id=\"monday-toggle\"\n                            label=\"Working Today?\"\n                            checked={this.state.weekIsWorking[0]}\n                            onChange={() => this.handleDayStatusChange(0)}\n                          />\n                        </Col>\n                      </Form.Row>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[0]} value={this.state.workerHours[0].start_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateStartTimesForDay day={0} />\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[0]} value={this.state.workerHours[0].end_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateEndTimesForDay day={0} />\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formHoursTuesday\">\n                      <Form.Row className=\"text-left\">\n                        <Col>\n                          <h5>Tuesday</h5>\n                          <Form.Check\n                            type=\"checkbox\"\n                            id=\"tuesday-toggle\"\n                            label=\"Working Today?\"\n                            checked={this.state.weekIsWorking[1]}\n                            onChange={() => this.handleDayStatusChange(1)}\n                          />\n                        </Col>\n                      </Form.Row>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[1]} value={this.state.workerHours[1].start_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateStartTimesForDay day={1} />\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[1]} value={this.state.workerHours[1].end_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateEndTimesForDay day={1} />\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n\n                    <Form.Group controlId=\"formHoursWednesday\">\n                      <Form.Row className=\"text-left\">\n                        <Col>\n                          <h5>Wednesday</h5>\n                          <Form.Check\n                            type=\"checkbox\"\n                            id=\"wednesday-toggle\"\n                            label=\"Working Today?\"\n                            checked={this.state.weekIsWorking[2]}\n                            onChange={() => this.handleDayStatusChange(2)}\n                          />\n                        </Col>\n                      </Form.Row>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[2]} value={this.state.workerHours[2].start_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateStartTimesForDay day={2} />\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[2]} value={this.state.workerHours[2].end_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateEndTimesForDay day={2} />\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formHoursThursday\">\n                      <Form.Row className=\"text-left\">\n                        <Col>\n                          <h5>Thursday</h5>\n                          <Form.Check\n                            type=\"checkbox\"\n                            id=\"thursday-toggle\"\n                            label=\"Working Today?\"\n                            checked={this.state.weekIsWorking[3]}\n                            onChange={() => this.handleDayStatusChange(3)}\n                          />\n                        </Col>\n                      </Form.Row>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[3]} value={this.state.workerHours[3].start_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateStartTimesForDay day={3} />\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[3]} value={this.state.workerHours[3].end_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateEndTimesForDay day={3} />\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n\n                    <Form.Group controlId=\"formHoursFriday\">\n                      <Form.Row className=\"text-left\">\n                        <Col>\n                          <h5>Friday</h5>\n                          <Form.Check\n                            type=\"checkbox\"\n                            id=\"friday-toggle\"\n                            label=\"Working Today?\"\n                            checked={this.state.weekIsWorking[4]}\n                            onChange={() => this.handleDayStatusChange(4)}\n                          />\n                        </Col>\n                      </Form.Row>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[4]} value={this.state.workerHours[4].start_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateStartTimesForDay day={4} />\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[4]} value={this.state.workerHours[4].end_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateEndTimesForDay day={4} />\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formHoursSaturday\">\n                      <Form.Row className=\"text-left\">\n                        <Col>\n                          <h5>Saturday</h5>\n                          <Form.Check\n                            type=\"checkbox\"\n                            id=\"saturday-toggle\"\n                            label=\"Working Today?\"\n                            checked={this.state.weekIsWorking[5]}\n                            onChange={() => this.handleDayStatusChange(5)}\n                          />\n                        </Col>\n                      </Form.Row>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[5]} value={this.state.workerHours[5].start_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateStartTimesForDay day={5} />\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[5]} value={this.state.workerHours[5].end_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateEndTimesForDay day={5} />\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n\n                    <Form.Group controlId=\"formHoursSunday\">\n                      <Form.Row className=\"text-left\">\n                        <Col>\n                          <h5>Sunday</h5>\n                          <Form.Check\n                            type=\"checkbox\"\n                            id=\"sunday-toggle\"\n                            label=\"Working Today?\"\n                            checked={this.state.weekIsWorking[6]}\n                            onChange={() => this.handleDayStatusChange(6)}\n                          />\n                        </Col>\n                      </Form.Row>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[6]} value={this.state.workerHours[6].start_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateStartTimesForDay day={6} />\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[6]} value={this.state.workerHours[6].end_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateEndTimesForDay day={6} />\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n                    <Button onClick={handleSubmit}>Submit</Button>\n                  </Form>\n                )}\n            </Formik>\n          </Col>\n        </Row>\n      } \n    }\n\n    return (\n      <Container fluid>\n        <DisplayWithLoading/>\n      </Container>\n    );\n  }\n}\n\nexport default AddWorkerForm;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { Button } from 'react-bootstrap';\nimport './Worker.css'\n// import {\n//   addAlert\n// } from '../../reduxFolder/actions'\n// import store from '../../reduxFolder/store';\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nclass WorkerDashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      workers: [],\n      redirectToWorkerEditForm: null,\n      redirectToWorkerDisplay: null\n    }\n  }\n\n  triggerWorkerEditForm(workerPassed) {\n    this.props.history.push({\n      pathname: '/stores/' + this.props.match.params.store_id + '/workers/' + workerPassed.id + '/edit',\n      state: {\n        worker: workerPassed\n      }\n    })\n  }\n\n  triggerWorkerDisplay(workerPassed) {\n    this.props.history.push({\n      pathname: '/stores/' + this.props.match.params.store_id + '/workers/' + workerPassed.id,\n      state: {\n        worker: workerPassed\n      }\n    })\n  }\n\n  triggerAddWorker() {\n    this.props.history.push({\n      pathname: '/stores/addWorker/' + this.props.match.params.store_id\n    })\n  }\n\n  componentDidMount() {\n    if(this.props.location.state && this.props.location.state.workers){\n      this.setState({\n        workers: this.props.location.state.workers\n      })\n    }\n    else{\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/workers', {\n        method: \"GET\",\n        headers: {\n            'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      })\n      .then(function(response){\n        if(response.status!==200){\n          // throw an error alert\n          // store.dispatch(addAlert(response))\n        }\n        else{\n          return response.json();\n        }\n      })\n      .then(data => {\n        if(data){\n          this.setState({\n            workers: data\n          })\n        }\n      });\n    }\n  }\n\n  render() {\n    let workers = null;\n    if(this.state.workers.length != 0){\n      workers = <div>\n                  {this.state.workers.map(worker => (\n                    <Col key={\"worker-\" + worker.id}>\n                      <Button onClick={() => this.triggerWorkerDisplay(worker)}>Show Worker</Button>\n                      <Button onClick={() => this.triggerWorkerEditForm(worker)}>Edit Worker</Button>\n                    </Col>\n                  ))}\n                </div>\n    }\n    else{\n      workers = <div>\n                  <p className=\"noResults\">No Workers!</p>\n                  <Button onClick={() => this.triggerAddWorker()}>Add Worker</Button>\n                </div>\n    }\n\n    return (\n      <Container fluid>\n        <Row className=\"justify-content-center\">\n          {workers}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default WorkerDashboard;","import React from 'react';\nimport '../../App.css';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport Select from 'react-select';\nimport {\n  addAlert\n} from '../../reduxFolder/actions/alert'\nimport store from '../../reduxFolder/store';\nimport GridLoader from 'react-spinners/GridLoader'\nimport { css } from '@emotion/core'\nimport { withRouter } from \"react-router\"\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\nconst override = css`\n  display: block;\n  margin: 0 auto;\n`;\n\n\nclass WorkerEditForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      worker: {\n        id: 0,\n        store_id: 0,\n        services: [],\n        user_id: 0,\n        created_at: \"\",\n        first_name: \"\",\n        last_name: \"\"\n      },\n      options: [\n        { value: 0, label: 'Brazilian Blowout' },\n        { value: 1, label: 'Manicure' },\n      ],\n      serviceMapping: {\n        0: \"Brazilian Blowout\",\n        1: \"Manicure\"\n      },\n      storeHours: [\n        { day_of_the_week: 0, start_time: 0, end_time: 0}, \n        { day_of_the_week: 1, start_time: 0, end_time: 0},\n        { day_of_the_week: 2, start_time: 0, end_time: 0},\n        { day_of_the_week: 3, start_time: 0, end_time: 0},\n        { day_of_the_week: 4, start_time: 0, end_time: 0},\n        { day_of_the_week: 5, start_time: 0, end_time: 0},\n        { day_of_the_week: 6, start_time: 0, end_time: 0}\n      ],\n      workerHours: [\n        { day_of_the_week: 0, start_time: 0, end_time: 0}, \n        { day_of_the_week: 1, start_time: 0, end_time: 0},\n        { day_of_the_week: 2, start_time: 0, end_time: 0},\n        { day_of_the_week: 3, start_time: 0, end_time: 0},\n        { day_of_the_week: 4, start_time: 0, end_time: 0},\n        { day_of_the_week: 5, start_time: 0, end_time: 0},\n        { day_of_the_week: 6, start_time: 0, end_time: 0}\n      ],\n      loading: true,\n      newHours: [],\n      weekIsWorking: [true, true, true, true, true, true, true]\n    };\n\n    // Schema for yup\n    // this.yupValidationSchema = Yup.object().shape({\n    //   services: Yup.string()\n    //     .required(\"Service is required\")\n    //   // .nullable()\n    // });\n\n    this.triggerWorkerDisplay = this.triggerWorkerDisplay.bind(this);\n  }\n\n  // redirect to the store display page and pass the new store data\n  triggerWorkerDisplay(returnedWorker) {\n    this.props.history.push({\n      pathname: '/stores/' + this.props.match.params.store_id + '/workers/' + this.props.match.params.worker_id,\n      state: {\n        worker: returnedWorker\n      }\n    })\n  }\n\n  convertMinsToHrsMins(mins) {\n    let h = Math.floor(mins / 60);\n    let m = mins % 60;\n    let am = false\n    if (h == 24) {\n      am = true\n      h -= 12\n    }\n    else if (h < 12) {\n      am = true\n    } else if (h != 12) {\n      h -= 12\n    }\n    h = h < 10 ? '0' + h : h;\n    if (h == 0) {\n      h = '12'\n    }\n    m = m < 10 ? '0' + m : m;\n    if (am) {\n      return `${h}:${m}am`;\n    } else {\n      return `${h}:${m}pm`;\n    }\n\n  }\n\n  handleSelectChange = (event) => {\n    var days = ['formHoursMonday', 'formHoursTuesday', 'formHoursWednesday', 'formHoursThursday', 'formHoursFriday', 'formHoursSaturday', 'formHoursSunday']\n    var day = days.indexOf(event.target.id)\n    var updateNewHours = this.state.newHours\n    var old_start_time = 0\n    var old_end_time = 0\n    var newWorkerHours = []\n    if (this.state.newHours[day]) {\n      old_start_time = this.state.newHours[day].start_time\n      old_end_time = this.state.newHours[day].end_time\n    } else {\n      old_start_time = this.state.workerHours[day].start_time\n      old_end_time = this.state.workerHours[day].end_time\n    }\n\n    if (parseInt(event.target.querySelector('option').value) <= 840) {\n      updateNewHours[day] = { start_time: parseInt(event.target.value), end_time: old_end_time }\n      newWorkerHours = [\n        ...this.state.workerHours.slice(0, day),\n        { start_time: parseInt(event.target.value), end_time: old_end_time },\n        ...this.state.workerHours.slice(day + 1)\n      ]\n    } else {\n      updateNewHours[day] = { start_time: old_start_time, end_time: parseInt(event.target.value) }\n      newWorkerHours = [\n        ...this.state.workerHours.slice(0, day),\n        { start_time: old_start_time, end_time: parseInt(event.target.value) },\n        ...this.state.workerHours.slice(day + 1)\n      ]\n    }\n\n    this.setState({\n      newHours: updateNewHours,\n      workerHours: newWorkerHours\n    })\n  };\n\n  handleDayStatusChange = (day) => {\n    var updateWeekIsWorking = [\n      ...this.state.weekIsWorking.slice(0, day),\n      !this.state.weekIsWorking[day],\n      ...this.state.weekIsWorking.slice(day + 1)\n    ]\n\n    this.setState({\n      weekIsWorking: updateWeekIsWorking\n    })\n  };\n\n  componentDidMount() {\n    if(this.props.location.state && this.props.location.state.worker){\n      this.setState({\n        worker: this.props.location.state.worker\n      })\n    }\n    else{\n      // first we fetch the service itself\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/workers/' + this.props.match.params.worker_id, {\n        method: \"GET\",\n        headers: {\n            'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      })\n      .then(function(response){\n        if(response.status!==200){\n          // throw an error alert\n          store.dispatch(addAlert(response))\n        }\n        else{\n          return response.json();\n        }\n      })\n      .then(data => {\n        if(data){\n          this.setState({\n            worker: data\n          })\n        }\n      });\n    }\n\n    Promise.all([\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/workers/' + this.props.match.params.worker_id + '/hours', {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      }).then(value => value.json()),\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/storeHours\", {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      }).then(value => value.json())\n    ]).then(allResponses => {\n      this.setState({\n        storeHours: allResponses[1],\n        workerHours: allResponses[0],\n        loading: false\n      })\n    })\n  }\n\n  render() {\n    const CreateStartTimesForDay = (props) => {\n      let items = [];\n      for (let i = this.state.storeHours[props.day].open_time; i <= 840; i += 60) {\n        items.push(<option key={i} value={i}>{this.convertMinsToHrsMins(i)}</option>);\n      }\n      return items;\n    }\n    const CreateEndTimesForDay = (props) => {\n      let items = [];\n      for (let i = 900; i <= this.state.storeHours[props.day].close_time; i += 60) {\n        items.push(<option key={i} value={i}>{this.convertMinsToHrsMins(i)}</option>);\n      }\n      return items;\n    }\n\n    const DisplayWithLoading = (props) => {\n      if (this.state.loading) {\n        return <Row className=\"vertical-center\">\n          <Col>\n            <GridLoader\n              css={override}\n              size={20}\n              color={\"#2196f3\"}\n              loading={this.state.isLoading}\n            />\n          </Col>\n        </Row>\n      } else {\n        return <Row className=\"justify-content-center\">\n          <Col>\n            <Formik\n              enableReinitialize\n              initialValues={{\n                services: this.state.worker.services,\n                id: this.state.worker.id,\n                store_id: this.state.worker.store_id,\n                user_id: this.state.worker.user_id,\n                created_at: this.state.worker.created_at,\n                first_name: this.state.worker.first_name,\n                last_name: this.state.worker.last_name,\n                newHours: this.state.newHours,\n                noChange: false\n              }}\n              validationSchema={this.yupValidationSchema}\n              onSubmit={(values) => {\n\n                let store_id = this.props.match.params.store_id\n                let worker_id = this.props.match.params.worker_id\n                let triggerWorkerDisplay = this.triggerWorkerDisplay;\n                values.newHours.map((day, index) => {\n                  if(this.state.weekIsWorking[index]){\n                    return day\n                  } else {\n                    return {start_time: null, end_time: null}\n                  }\n                })\n                // not sure if we need this, commenting it out for now\n                // if(JSON.stringify(values.services)==JSON.stringify(this.state.receivedServices)) {\n                //   values.noChange = true\n                // }\n\n                fetch(fetchDomain + '/stores/' + store_id + '/workers/' + worker_id, {\n                  method: \"POST\",\n                  headers: {\n                    'Content-type': 'application/json'\n                  },\n                  credentials: 'include',\n                  body: JSON.stringify(values)\n                })\n                  .then(function (response) {\n                    if (response.status !== 200) {\n                      store.dispatch(addAlert(response))\n                    }\n                    else {\n                      // redirect to worker page\n                      return response.json()\n                    }\n                  })\n                  .then(data => {\n                    if (data) {\n                      // this.props.updateWorker(this.state.worker, this.state.newHours, values.services)\n                      triggerWorkerDisplay(data)\n                    }\n                  });\n              }}\n            >\n              {({ values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                setFieldValue }) => (\n                  <Form>\n                    <h3>Worker Edit</h3>\n\n                    {/* Later make this work with store hours*/}\n                    <h4>Worker Hours</h4>\n\n                    <Form.Group controlId=\"formHoursMonday\">\n                      <Form.Row className=\"text-left\">\n                        <Col>\n                          <h5>Monday</h5>\n                          <Form.Check\n                            type=\"checkbox\"\n                            id=\"monday-toggle\"\n                            label=\"Working Today?\"\n                            checked={this.state.weekIsWorking[0]}\n                            onChange={() => this.handleDayStatusChange(0)}\n                          />\n                        </Col>\n                      </Form.Row>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[0]} value={this.state.workerHours[0].start_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateStartTimesForDay day={0} />\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[0]} value={this.state.workerHours[0].end_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateEndTimesForDay day={0} />\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formHoursTuesday\">\n                      <Form.Row className=\"text-left\">\n                        <Col>\n                          <h5>Tuesday</h5>\n                          <Form.Check\n                            type=\"checkbox\"\n                            id=\"tuesday-toggle\"\n                            label=\"Working Today?\"\n                            checked={this.state.weekIsWorking[1]}\n                            onChange={() => this.handleDayStatusChange(1)}\n                          />\n                        </Col>\n                      </Form.Row>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[1]} value={this.state.workerHours[1].start_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateStartTimesForDay day={1} />\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[1]} value={this.state.workerHours[1].end_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateEndTimesForDay day={1} />\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n\n                    <Form.Group controlId=\"formHoursWednesday\">\n                      <Form.Row className=\"text-left\">\n                        <Col>\n                          <h5>Wednesday</h5>\n                          <Form.Check\n                            type=\"checkbox\"\n                            id=\"wednesday-toggle\"\n                            label=\"Working Today?\"\n                            checked={this.state.weekIsWorking[2]}\n                            onChange={() => this.handleDayStatusChange(2)}\n                          />\n                        </Col>\n                      </Form.Row>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[2]} value={this.state.workerHours[2].start_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateStartTimesForDay day={2} />\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[2]} value={this.state.workerHours[2].end_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateEndTimesForDay day={2} />\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formHoursThursday\">\n                      <Form.Row className=\"text-left\">\n                        <Col>\n                          <h5>Thursday</h5>\n                          <Form.Check\n                            type=\"checkbox\"\n                            id=\"thursday-toggle\"\n                            label=\"Working Today?\"\n                            checked={this.state.weekIsWorking[3]}\n                            onChange={() => this.handleDayStatusChange(3)}\n                          />\n                        </Col>\n                      </Form.Row>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[3]} value={this.state.workerHours[3].start_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateStartTimesForDay day={3} />\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[3]} value={this.state.workerHours[3].end_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateEndTimesForDay day={3} />\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n\n                    <Form.Group controlId=\"formHoursFriday\">\n                      <Form.Row className=\"text-left\">\n                        <Col>\n                          <h5>Friday</h5>\n                          <Form.Check\n                            type=\"checkbox\"\n                            id=\"friday-toggle\"\n                            label=\"Working Today?\"\n                            checked={this.state.weekIsWorking[4]}\n                            onChange={() => this.handleDayStatusChange(4)}\n                          />\n                        </Col>\n                      </Form.Row>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[4]} value={this.state.workerHours[4].start_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateStartTimesForDay day={4} />\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[4]} value={this.state.workerHours[4].end_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateEndTimesForDay day={4} />\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formHoursSaturday\">\n                      <Form.Row className=\"text-left\">\n                        <Col>\n                          <h5>Saturday</h5>\n                          <Form.Check\n                            type=\"checkbox\"\n                            id=\"saturday-toggle\"\n                            label=\"Working Today?\"\n                            checked={this.state.weekIsWorking[5]}\n                            onChange={() => this.handleDayStatusChange(5)}\n                          />\n                        </Col>\n                      </Form.Row>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[5]} value={this.state.workerHours[5].start_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateStartTimesForDay day={5} />\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[5]} value={this.state.workerHours[5].end_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateEndTimesForDay day={5} />\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n\n                    <Form.Group controlId=\"formHoursSunday\">\n                      <Form.Row className=\"text-left\">\n                        <Col>\n                          <h5>Sunday</h5>\n                          <Form.Check\n                            type=\"checkbox\"\n                            id=\"sunday-toggle\"\n                            label=\"Working Today?\"\n                            checked={this.state.weekIsWorking[6]}\n                            onChange={() => this.handleDayStatusChange(6)}\n                          />\n                        </Col>\n                      </Form.Row>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[6]} value={this.state.workerHours[6].start_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateStartTimesForDay day={6} />\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[6]} value={this.state.workerHours[6].end_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateEndTimesForDay day={6} />\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n                    <Button onClick={handleSubmit}>Submit</Button>\n                  </Form>\n                )}\n            </Formik>\n          </Col>\n        </Row>\n      }\n    }\n\n    return (\n      <Container fluid>\n        <DisplayWithLoading />\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(WorkerEditForm);\n","import React from 'react';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Image from 'react-bootstrap/Image'\nimport Nav from 'react-bootstrap/Nav'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport './WorkerDisplay.css'\nimport Calendar from '../Calendar/CalendarPage'\nimport WorkerEditForm from './WorkerEditForm';\nimport GridLoader from 'react-spinners/GridLoader'\nimport { css } from '@emotion/core'\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n`;\n\nclass WorkerDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      worker: {\n        id: 0,\n        store_id: 0,\n        services: [],\n        user_id: 0,\n        created_at: \"\",\n        first_name: [],\n        last_name: \"\"\n      },\n      serviceMapping: {\n        0: \"Brazilian Blowout\",\n        1: \"Manicure\"\n      },\n      loading: true,\n      workerHours: [],\n      receivedServices: [],\n      selectedOption: [],\n      storeHours: [],\n      choice: 0,\n      daysOfWeek: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\n    }\n  }\n\n  convertMinsToHrsMins(mins) {\n    let h = Math.floor(mins / 60);\n    let m = mins % 60;\n    let am = false\n    if (h == 24) {\n      am = true\n      h -= 12\n    }\n    else if (h < 12) {\n      am = true\n    } else if (h != 12) {\n      h -= 12\n    }\n    h = h < 10 ? '0' + h : h;\n    if (h == 0) {\n      h = '12'\n    }\n    m = m < 10 ? '0' + m : m;\n    if (am) {\n      return `${h}:${m}am`;\n    } else {\n      return `${h}:${m}pm`;\n    }\n\n  }\n\n  updateWorker = (worker, newHours, services) => {\n    let updateHours = this.state.workerHours.map((dayHours, index) =>{\n      if(newHours[index] != null) {\n        return newHours[index]\n      } else {\n        return dayHours\n      }\n    })\n    this.setState({\n      worker: worker,\n      workerHours: updateHours,\n      receivedServices: services\n    })\n  }\n\n  updateContent = (selectedChoice) => {\n    this.setState({\n      choice: selectedChoice\n    })\n  };\n\n  componentDidMount() {\n    if (this.props.location && this.props.location.state && this.props.location.state.worker) {\n      let convertedServices = this.props.location.state.worker.services.map((service) => ({ value: service, label: this.state.serviceMapping[service] }));\n      Promise.all([\n        fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/workers/' + this.props.match.params.worker_id + '/hours', {\n          method: \"GET\",\n          headers: {\n            'Content-type': 'application/json'\n          },\n          credentials: 'include'\n        }).then(value => value.json()),\n        fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/storeHours\", {\n          method: \"GET\",\n          headers: {\n            'Content-type': 'application/json'\n          },\n          credentials: 'include'\n        }).then(value => value.json())\n      ]).then(allResponses => {\n        let receivedWorkerHours = allResponses[1].map((day) => ({ start_time: day.open_time, end_time: day.close_time }));\n        if (allResponses[0] && allResponses[0].length == 7) {\n          receivedWorkerHours = allResponses[0]\n        } else {\n          this.setState({\n            newHours: receivedWorkerHours\n          })\n        }\n        this.setState({\n          worker: this.props.location.state.worker,\n          receivedServices: this.props.location.state.worker.services,\n          storeHours: allResponses[1],\n          workerHours: receivedWorkerHours,\n          loading: false\n        })\n      })\n    }\n    else {\n      Promise.all([\n        fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/workers/' + this.props.match.params.worker_id, {\n          method: \"GET\",\n          headers: {\n            'Content-type': 'application/json'\n          },\n          credentials: 'include'\n        }).then(value => value.json()),\n        fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/storeHours\", {\n          method: \"GET\",\n          headers: {\n            'Content-type': 'application/json'\n          },\n          credentials: 'include'\n        }).then(value => value.json()),\n        fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/workers/' + this.props.match.params.worker_id + '/hours', {\n          method: \"GET\",\n          headers: {\n            'Content-type': 'application/json'\n          },\n          credentials: 'include'\n        }).then(value => value.json())\n      ]).then(allResponses => {\n        let convertedServices = allResponses[0].services.map((service) => ({ value: service, label: this.state.serviceMapping[service] }));\n        let receivedWorkerHours = allResponses[1].map((day) => ({ start_time: day.open_time, end_time: day.close_time }));\n\n        // If worker hours are not complete, we default them to store hours. Worker hours should be complete though. \n        if (allResponses[2] && allResponses[2].length == 7) {\n          receivedWorkerHours = allResponses[2]\n        } else {\n          this.setState({\n            newHours: receivedWorkerHours\n          })\n        }\n        this.setState({\n          worker: allResponses[0],\n          receivedServices: allResponses[0].services,\n          selectedOption: convertedServices,\n          storeHours: allResponses[1],\n          workerHours: receivedWorkerHours,\n          loading: false\n        })\n      })\n    }\n  }\n\n  render() {\n    const ListWorkingHours = () => {\n      let items = [];\n      for (let i = 0; i < this.state.workerHours.length; i++) {\n        if (this.state.workerHours[i].start_time != null) {\n          items.push(<Col sm=\"11\" md=\"10\" key={i}><ListGroup.Item>{this.state.daysOfWeek[i]}: {this.convertMinsToHrsMins(this.state.workerHours[i].start_time)}-{this.convertMinsToHrsMins(this.state.workerHours[i].end_time)}</ListGroup.Item></Col>);\n        }\n        else {\n          items.push(<Col sm=\"11\" md=\"10\" key={i}><ListGroup.Item>{this.state.daysOfWeek[i]}: Off</ListGroup.Item></Col>);\n        }\n      }\n      return items;\n    }\n\n    const RenderProfileContent = () => {\n      if(this.state.choice == 0) {\n        return <Calendar/>\n      } else if(this.state.choice == 1) {\n        return <WorkerEditForm worker={this.state.worker} receivedServices={this.state.receivedServices} selectedOption={this.state.selectedOption} storeHours={this.state.storeHours} workerHours={this.state.workerHours} updateWorker={this.updateWorker}/>\n      } else {\n        return <p>Past Appointments go here....</p>\n      }\n    }\n\n    const DisplayWithLoading = (props) => {\n      if (this.state.loading) {\n        return <Row className=\"vertical-center\">\n          <Col>\n            <GridLoader\n              css={override}\n              size={20}\n              color={\"#2196f3\"}\n              loading={this.state.isLoading}\n            />\n          </Col>\n        </Row>\n      } else {\n        {/* CITATION: https://bootsnipp.com/snippets/M48pA */}\n        return <Row className=\"profile\">\n        <Col xs=\"11\" md=\"3\">\n        <div className=\"profile-sidebar\">\n            {/* <!-- SIDEBAR USERPIC --> */}\n            <div className=\"profile-userpic\">\n              <Image src=\"https://i.redd.it/v0caqchbtn741.jpg\" className=\"img-responsive\" alt=\"\" rounded />\n            </div>\n            {/* <!-- END SIDEBAR USERPIC --> */}\n\n            {/* <!-- SIDEBAR USER TITLE --> */}\n            <div className=\"profile-usertitle\">\n              <div className=\"profile-usertitle-name\">\n                {this.state.worker.first_name + \" \" + this.state.worker.last_name}\n              </div>\n              <div className=\"profile-usertitle-job\">\n                Stylist\n              </div>\n            </div>\n            {/* <!-- END SIDEBAR USER TITLE --> */}\n\n            {/* <!-- SIDEBAR BUTTONS --> */}\n            <div className=\"profile-userbuttons\">\n              <button type=\"button\" className=\"btn btn-success btn-sm\">Give a Raise</button>\n              <button type=\"button\" className=\"btn btn-danger btn-sm\">Lay Off</button>\n            </div>\n            {/* <!-- END SIDEBAR BUTTONS --> */}\n\n            {/* WORKING HOURS */}\n            <ListGroup variant=\"flush\">\n              <Row className=\"justify-content-center mt-4\">\n                <h5>Working Hours</h5>\n                <ListWorkingHours/>\n              </Row>\n            </ListGroup>\n            {/* END WORKING HOURS */}\n\n            {/* <!-- SIDEBAR MENU --> */}\n            <div className=\"profile-usermenu\">\n              <Nav defaultActiveKey=\"link-0\" className=\"flex-column\" variant=\"pills\">\n                <Nav.Link eventKey=\"link-0\" active={this.state.choice == 0} onClick={() => this.updateContent(0)}>Calendar</Nav.Link>\n                <Nav.Link eventKey=\"link-1\" active={this.state.choice == 1}  onClick={() => this.updateContent(1)}>Edit Profile</Nav.Link>\n                <Nav.Link eventKey=\"link-2\" active={this.state.choice == 2} onClick={() => this.updateContent(2)}>Past Appointments</Nav.Link>\n              </Nav>\n            </div>\n            {/* <!-- END MENU --> */}\n\n          </div>\n        </Col>\n\n        <Col xs=\"11\" md=\"9\">\n        <div className=\"profile-content\">\n            <RenderProfileContent/>\n          </div>\n        </Col>\n          \n      </Row>\n      }\n    }\n    return (\n      <Container fluid>\n        {/* <Row className=\"justify-content-center\">\n          <Col>\n            <h1>{this.state.worker.first_name}</h1>\n            <p>{this.state.worker.last_name}</p>\n            <ul>\n                {this.state.worker.services.map((service, index) => (\n                  <li key={\"cat-\" + index}>{this.state.serviceMapping[service]}</li>\n                ))}\n              </ul>\n          </Col>\n        </Row> */}\n        <DisplayWithLoading/>\n        \n      </Container>\n    );\n  }\n}\n\nexport default WorkerDisplay;","import React from 'react';\nimport '../../App.css';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport { FaDollarSign, FaHandshake, FaHourglassHalf, FaPen } from 'react-icons/fa';\nimport { Formik } from 'formik';\nimport Select from 'react-select';\nimport * as Yup from 'yup';\nimport {\n  addAlert\n} from '../../reduxFolder/actions/alert'\nimport store from '../../reduxFolder/store';\nimport { uploadHandler } from '../s3';\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nclass AddServiceForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '', // assuming this is a unique value for file upload\n      cost: '',\n      duration: '',\n      description: '',\n      workers: [],\n      category: [],\n      store_id: '',\n      categoryOptions: [\n        { value: 'nails', label: 'Nails' },\n        { value: 'hair', label: 'Hair' }\n      ],\n      workerOptions: [],\n      selectedOption: null,\n      selectedFiles: []\n    };\n\n    // Schema for yup\n    this.yupValidationSchema = Yup.object().shape({\n      name: Yup.string()\n      .min(2, \"Name must have at least 2 characters\")\n      .max(100, \"Name can't be longer than 100 characters\")\n      .required(\"Name is required\"),\n      description: Yup.string()\n      .min(20, \"Description must have at least 20 characters\")\n      .required(\"Description is required\"),\n      cost: Yup.number()\n      .positive(\"Cost must be positive\")\n      .required(\"Cost is required\"),\n      duration: Yup.number()\n      .positive(\"Duration must be positive\")\n      .required(\"Duration is required\"),\n      workers: Yup.array()\n      .required(\"Worker is required\")\n      .nullable(),\n      category: Yup.array()\n      .required(\"Category is required\")\n      .nullable(),\n      pictureCount: Yup.number()\n      .required(\"Pictures are required\")\n      .min(1, \"Must have at least one picture\")\n    });\n\n    this.triggerServiceDisplay = this.triggerServiceDisplay.bind(this);\n  }\n\n  componentDidMount() {\n    // need to get store category, fetch?\n    fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/workers\" , {\n      method: \"GET\",\n      headers: {\n          'Content-type': 'application/json'\n      },\n      credentials: 'include'\n    })\n    .then(function(response){\n      if(response.status!==200){\n        // throw an error alert\n        store.dispatch(addAlert(response))\n      }\n      else{\n        return response.json();\n      }\n    })\n    .then(data => {\n      if(data){\n        let convertedWorkers = data.map((worker) => ({ value: worker.id, label: worker.first_name + \" \" + worker.last_name }));\n        this.setState({\n          workerOptions: convertedWorkers\n        })\n      }\n    });\n  }\n\n  // redirect to the worker display page\n  componentDidUpdate(prevProps, prevState)  {\n    if (prevProps.service !== this.props.service) {\n      this.props.history.push({\n        pathname: '/stores/' + this.props.service.store_id + '/services/' + this.props.service.id\n      })\n    }\n  }\n\n  // redirect to the worker display page and pass the new worker data\n  triggerServiceDisplay(service) {\n    this.props.history.push({\n      pathname: '/stores/' + service.store_id + '/services/' + service.id,\n      state: {\n        service: service\n      }\n    })\n  }\n\n\n  fileChangedHandler = (event, setFieldValue) => {\n    setFieldValue('pictureCount', event.target.files.length)\n    this.setState({ selectedFiles: event.target.files })\n  }\n    \n  render() {\n    return (\n      <Container fluid>\n        <Row className=\"justify-content-center\">\n          <Col xs={8} sm={7} md={6} lg={5}>\n            <Formik\n              enableReinitialize\n              initialValues={{\n                name: '',\n                cost: '',\n                duration: '',\n                description: '',\n                pictures: [],\n                workers: [],\n                category: [],\n                store_id: this.props.match.params.store_id,\n                pictureCount: this.state.selectedFiles.length\n              }}\n              validationSchema={this.yupValidationSchema}\n              onSubmit={async (values, {setSubmitting }) => {\n                let store_id = this.props.match.params.store_id\n                let selectedFiles = this.state.selectedFiles\n                let triggerServiceDisplay = this.triggerServiceDisplay\n\n                values.category = values.category.map(function(val){ \n                  return val.label; \n                })\n\n                values.workers = values.workers.map(function(val){ \n                  return val.value; \n                })\n\n                fetch(fetchDomain + '/stores/addService/' + store_id, {\n                  method: \"POST\",\n                  headers: {\n                    'Content-type': 'application/json'\n                  },\n                  credentials: 'include',\n                  body: JSON.stringify(values)\n                })\n                .then(function(response){\n                  if(response.status!==200){\n                    store.dispatch(addAlert(response))\n                  }\n                  else{\n                    return response.json();\n                  }\n                })\n                .then(async function(data){\n                  // redirect to home page signed in\n                  if(data){\n                    // upload to s3 from client to avoid burdening back end\n                  if(this.state.selectedFiles.length > 0){\n                    let prefix = 'stores/' + this.props.match.params.store_id + '/services/' + data.id + '/'\n                    await uploadHandler(prefix, selectedFiles)\n                  }\n                    triggerServiceDisplay(data)\n                  }\n                })\n\n                setSubmitting(false)\n              }}\n            >\n            {( {values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                setFieldValue}) => (\n              <Form className=\"formBody rounded\">\n                <h3>Add Service</h3>\n\n                <Form.Group controlId=\"formService\">\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                            <FaHandshake/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control type=\"text\" \n                      value={values.name} \n                      placeholder=\"Name of Service\" \n                      name=\"name\" \n                      onChange={handleChange} \n                      onBlur={handleBlur}\n                      className={touched.name && errors.name ? \"error\" : null}/>\n                  </InputGroup>\n                  {touched.name && errors.name ? (\n                    <div className=\"error-message\">{errors.name}</div>\n                  ): null}\n                </Form.Group>\n\n                <Form.Group controlId=\"formCost\">\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                            <FaDollarSign/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control type=\"number\" \n                    value={values.cost}\n                    placeholder=\"Cost\" \n                    name=\"cost\" \n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    className={touched.cost && errors.cost ? \"error\" : null}/>\n                  </InputGroup>\n                  {touched.cost && errors.cost ? (\n                    <div className=\"error-message\">{errors.cost}</div>\n                  ): null}\n                </Form.Group>\n\n                <Form.Group controlId=\"formDuration\">\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                            <FaHourglassHalf/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control \n                      type=\"number\"\n                      value={values.duration}\n                      placeholder=\"Duration (in min)\" \n                      name=\"duration\" \n                      onChange={handleChange} \n                      onBlur={handleBlur}\n                      className={touched.duration && errors.duration ? \"error\" : null}/>\n                  </InputGroup>\n                  {touched.duration && errors.duration ? (\n                    <div className=\"error-message\">{errors.duration}</div>\n                  ): null}\n                </Form.Group>\n\n                <Form.Group controlId=\"formDescription\">\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                          <FaPen/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control \n                      type=\"textarea\"\n                      rows={3}\n                      value={values.description}\n                      placeholder=\"Description\" \n                      name=\"description\" \n                      onChange={handleChange} \n                      onBlur={handleBlur}\n                      className={touched.description && errors.description ? \"error\" : null}/>\n                  </InputGroup>\n                  {touched.description && errors.description ? (\n                    <div className=\"error-message\">{errors.description}</div>\n                  ): null}\n                </Form.Group>\n\n                <Form.Group controlId=\"formWorkers\">\n                  <Select\n                    value={values.workers}\n                    onChange={option => setFieldValue(\"workers\", option)}\n                    name=\"workers\"\n                    options={this.state.workerOptions}\n                    isMulti={true}\n                    placeholder={\"Assigned Workers\"}\n                    className={touched.workers && errors.workers ? \"error\" : null}\n                  />\n                  {touched.workers && errors.workers ? (\n                    <div className=\"error-message\">{errors.workers}</div>\n                  ): null}\n                </Form.Group>\n\n                <Form.Group controlId=\"formCategory\">\n                  <Select\n                    value={values.category}\n                    onChange={option => setFieldValue(\"category\", option)}\n                    name=\"category\"\n                    options={this.state.categoryOptions}\n                    isMulti={true}\n                    placeholder={\"Category\"}\n                    className={touched.category && errors.category ? \"error\" : null}\n                  />\n                  {touched.category && errors.category ? (\n                    <div className=\"error-message\">{errors.category}</div>\n                  ): null}\n                </Form.Group>\n\n                <Form.Group controlId=\"formPictureCount\">\n                  <input \n                    onChange={event => this.fileChangedHandler(event, setFieldValue)}\n                    type=\"file\"\n                    multiple\n                    className={touched.pictureCount && errors.pictureCount ? \"error\" : null}\n                  />\n                  {touched.pictureCount && errors.pictureCount ? (\n                    <div className=\"error-message\">{errors.pictureCount}</div>\n                  ): null}\n                </Form.Group>\n\n                <Button onClick={handleSubmit}>Submit</Button>\n              </Form>\n            )}\n            </Formik>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\n// const mapStateToProps = state => ({\n//   service: state.serviceReducer.service,\n//   workerOptions: state.workerReducer.workerOptions\n// })\n\n// const mapDispatchToProps = dispatch => bindActionCreators({\n//   addService: (service, store_id) => addService(service, store_id),\n//   getWorkerOptions: (store_id) => getWorkerOptions(store_id)\n// }, dispatch)\n\n// export default connect(mapStateToProps, mapDispatchToProps)(AddServiceForm);\nexport default AddServiceForm;","// this component is ready to be reusable for WorkerDashboard.js, if we decide that it can have the same\n// view as this one... just need to rename to StoreserviceDashboard.js\n\nimport React from 'react';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { Button } from 'react-bootstrap';\n// import {\n//   addAlert\n// } from '../../reduxFolder/actions'\n// import store from '../../reduxFolder/store';\nimport './Services.css';\n// import eyelash from '../../assets/eyelash4.png';\n// import wedding from '../../assets/wedding.jpg';\n// import gel from '../../assets/gel.jpg';\nimport { FaEdit } from 'react-icons/fa';\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nconst colors = ['#f0d1d9', '#f7e5e4', '#d6ced3'];\n\nclass ServiceDashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      services: [\n        // {\n        //   id: '0',\n        //   name: 'Eyelash Remove',\n        //   category: 'Eyelashes',\n        //   cost: '25',\n        //   duration: '20',\n        //   description: 'Remove your eyelashes or something like that',\n        //   workers: ['Tiffany', 'Yuki'],\n        //   // pictures: [eyelash]\n        // },\n        // {\n        //   id: '1',\n        //   name: 'Gel Manicure',\n        //   category: 'Nails',\n        //   cost: '30',\n        //   duration: '60',\n        //   description: 'Its like a regular manicure, with gel!',\n        //   workers: ['Tiffany', 'Yuki'],\n        //   // pictures: [gel]\n        // },\n        // {\n        //   id: '2',\n        //   name: 'Wedding Makeup',\n        //   category: 'Makeup',\n        //   cost: '200',\n        //   duration: '120',\n        //   description: 'Full face makeup or something for your big day',\n        //   workers: ['Tiffany', 'Yuki'],\n        //   // pictures: [wedding]\n        // },\n      ]\n    }\n  }\n\n  triggerServiceEdit(servicePassed) {\n    this.props.history.push({\n      pathname: '/stores/' + this.props.match.params.store_id + \"/services/\" + servicePassed.id + '/edit',\n      state: {\n        service: servicePassed\n      }\n    })\n  }\n\n  triggerServiceDisplay(servicePassed) {\n    this.props.history.push({\n      pathname: '/stores/' + this.props.match.params.store_id + \"/services/\" + servicePassed.id,\n      state: {\n        service: servicePassed\n      }\n    })\n  }\n\n  triggerAddService() {\n    this.props.history.push({\n      pathname: '/stores/addService/' + this.props.match.params.store_id\n    })\n  }\n\n  componentDidMount() {\n    if(this.props.location.state && this.props.location.state.services){\n      this.setState({\n        services: this.props.location.state.services\n      })\n    }\n    else{\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/services/\", {\n        method: \"GET\",\n        headers: {\n            'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      })\n      .then(function(response){\n        if(response.status!==200){\n          // throw an error alert\n          // store.dispatch(addAlert(response))\n        }\n        else{\n          return response.json();\n        }\n      })\n      .then(data => {\n        if(data){\n          this.setState({\n            services: data\n          })\n        }\n      });\n    }\n  }\n\n  // need to add getPictures****\n\n\n  render() {\n    let services = null;\n\n    if(this.state.services.length > 0){\n      services = <Col>\n                    <p className=\"services_title\">My Services </p>\n                    <Button className=\"buttons\" onClick={() => this.triggerAddService()}>Add Service</Button>\n                    {/* <Button className=\"buttons\" onClick={() => this.triggerServiceEditForm()}>Edit Services</Button> */}\n                    <div className=\"service_container\">\n                      {this.state.services.map((service, indx) => (\n                        <Col key={\"service-\" + service.id}>\n\n                          <div className=\"service_card\">\n\n                          {/* {((service.id % 2) == 0) ? (\n                            <div className=\"service_img\">\n                              <img src={service.pictures[0]} style={{height: '500px', width:'100%'}}/>\n                            </div>\n                          ) : null} */}\n\n                            <div className=\"service_text\" style={{backgroundColor: `${colors[indx % 3]}`}}>\n                              <div className=\"fun_style\"> </div>\n                              <Col>\n                              <div className=\"title_container\" style={{backgroundColor: `${colors[indx % 3]}`}}>\n                                <span className=\"service_title\" onClick={() => this.triggerServiceDisplay(service)}> {service.name} </span>\n                                <FaEdit className=\"edit\" size={15} onClick={() => this.triggerServiceEdit(service)}/>\n                              </div>\n                              <Row>\n                                <div className=\"service_subtitle\">\n                                  <p> Category </p>\n                                  <p> Cost </p>\n                                  <p> Duration </p>\n                                  <p> Associated Workers </p>\n                                  <p> Description </p>\n                                </div>\n                                <div className=\"subtitle_values\" >\n                                  <p>  {service.category}  </p>\n                                  <p> $ {service.cost}  </p>\n                                  <p>  {service.duration} Minutes  </p>\n                                  <p> {service.workers} </p>\n                                  <p> {service.description} </p>\n                                </div>\n                              </Row>\n                            </Col>\n                            </div>\n\n                            {/* {((service.id % 2) != 0) ? (\n                              <div className=\"service_img\">\n                                <img src={service.pictures[0]} style={{height: '500px', width:'100%'}}/>\n                              </div>\n                            ) : null} */}\n\n                          </div>\n\n                        </Col>\n                      ))}\n                    </div>\n                  </Col>\n    }\n    else{\n      services = <div>\n                  <p className=\"noResults\">No Services!</p>\n                  <Button onClick={() => this.triggerAddService()}>Add Service</Button>\n                </div>\n    }\n    return (\n      <Container>\n        {services}\n      </Container>\n    );\n  }\n}\n\nexport default ServiceDashboard;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n// import {\n//   addAlert\n// } from '../../reduxFolder/actions'\n// import store from '../../reduxFolder/store';\nimport LargeCarousel from '../LargeCarousel';\nimport { getPictures } from '../s3'\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nclass ServiceDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      service: {\n        id: \"\",\n        name: \"\",\n        cost: \"\",\n        workers: [],\n        store_id: \"\",\n        category: \"\",\n        description: \"\"\n      },\n      pictures: []\n    }\n  }\n\n  async componentDidMount(): Promise<void> {\n    let picturesFetched = await getPictures('stores/' + this.props.match.params.store_id + '/services/' + this.props.match.params.service_id + '/')\n\n    // should remove when data is stable\n    if(picturesFetched.length == 0){\n      picturesFetched = [{ \n        url: \"/hair.jpg\",\n        key: \"/hair.jpg\"\n      },\n      {\n        url: \"/nails.jpg\",\n        key: \"/nails.jpg\"\n      },\n      {\n        url: \"/salon.jpg\",\n        key: \"/salon.jpg\"\n      }\n    ]\n    }\n\n    // can put this for now so we don't have to upload to s3\n    // let picturesFetched = [{ \n    //     url: \"/hair.jpg\",\n    //     key: \"/hair.jpg\"\n    //   },\n    //   {\n    //     url: \"/nails.jpg\",\n    //     key: \"/nails.jpg\"\n    //   },\n    //   {\n    //     url: \"/salon.jpg\",\n    //     key: \"/salon.jpg\"\n    //   }\n    // ]\n\n    if(this.props.location.state && this.props.location.state.service){\n      \n      this.setState({\n        service: this.props.location.state.service,\n        pictures: picturesFetched\n      })\n    }\n    else{\n      const response = await fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/services/' + this.props.match.params.service_id, {\n        method: \"GET\",\n        headers: {\n            'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      })\n\n      const data = await response.json()\n      this.setState({\n        service: data,\n        pictures: picturesFetched\n      })\n    }\n\n    return Promise.resolve()\n  }\n\n  render() {\n    return (\n      <Container fluid>\n        <Row className=\"justify-content-center\">\n          <Col>\n            <h1>{this.state.service.name}</h1>\n            <p>{this.state.service.description}</p>\n          </Col>\n\n          <Col xs={10} sm={9} md={8} lg={7}>\n            <LargeCarousel className=\"carousel\" pictures={this.state.pictures}/>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default ServiceDisplay;","import React from 'react';\nimport '../../App.css';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport { FaDollarSign, FaHandshake, FaHourglassHalf, FaPen } from 'react-icons/fa';\nimport { Formik } from 'formik';\nimport Select from 'react-select';\nimport * as Yup from 'yup';\nimport {\n  addAlert\n} from '../../reduxFolder/actions/alert'\nimport store from '../../reduxFolder/store';\nimport { getPictures, deleteHandler, uploadHandler } from '../s3'\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nclass ServiceEditForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      service: {\n        id: \"\",\n        name: \"\",\n        cost: \"\",\n        workers: [],\n        store_id: \"\",\n        category: \"\",\n        description: \"\"\n      },\n      categoryOptions: [\n        { value: 'nails', label: 'Nails' },\n        { value: 'hair', label: 'Hair' }\n      ],\n      convertedCategory: [],\n      workerOptions: [],\n      selectedOption: null,\n      pictures: [],\n      keys: [],\n      selectedFiles: []\n    };\n\n    // Schema for yup\n    this.yupValidationSchema = Yup.object().shape({\n      name: Yup.string()\n      .min(2, \"Name must have at least 2 characters\")\n      .max(100, \"Name can't be longer than 100 characters\")\n      .required(\"Name is required\"),\n      description: Yup.string()\n      .min(20, \"Description must have at least 20 characters\")\n      .required(\"Description is required\"), // will make it required soon,\n      cost: Yup.number()\n      .positive(\"Cost must be positive\")\n      .required(\"Cost is required\"),\n      duration: Yup.number()\n      .positive(\"Duration must be positive\")\n      .required(\"Duration is required\"),\n      workers: Yup.array()\n      .required(\"Worker is required\")\n      .nullable(),\n      category: Yup.array()\n      .required(\"Category is required\")\n      .nullable(),\n      pictureCount: Yup.number()\n      .required(\"Pictures are required\")\n      .min(1, \"Must have at least one picture\")\n    });\n\n    this.triggerServiceDisplay = this.triggerServiceDisplay.bind(this);\n  }\n\n  // redirect to the service display page and pass the new store data\n  triggerServiceDisplay(returnedService) {\n    this.props.history.push({\n      pathname: '/stores/' + this.props.match.params.store_id + '/services/' + this.props.match.params.service_id,\n      state: {\n        service: returnedService\n      }\n    })\n  }\n\n  deleteFileChangeHandler = async (event, setFieldValue, newPictureLength) => {\n    if(event.target.checked){\n      await this.state.keys.push(event.target.id)\n      console.log(this.state.pictures.length, newPictureLength, this.state.keys.length)\n      setFieldValue('pictureCount', this.state.pictures.length + newPictureLength - this.state.keys.length)\n    }\n    else{\n      await this.state.keys.pop(event.target.id)\n      console.log(this.state.pictures.length, newPictureLength, this.state.keys.length)\n      setFieldValue('pictureCount', this.state.pictures.length + newPictureLength - this.state.keys.length)\n    }\n  }\n\n  fileChangedHandler = (event, setFieldValue, pictures) => {\n    this.setState({ selectedFiles: event.target.files })\n    setFieldValue('pictureCount', this.state.pictures.length + event.target.files.length - this.state.keys.length)\n    setFieldValue('pictures', event.target.files)\n  }\n\n  async componentDidMount() {\n    let picturesFetched = await getPictures('stores/' + this.props.match.params.store_id + '/services/' + this.props.match.params.service_id)\n    console.log(picturesFetched)\n\n    if(this.props.location.state && this.props.location.state.service){\n      console.log(this.props.location.state.service)\n      let convertedCategoryData = this.props.location.state.service.category.map((str) => ({ value: str.toLowerCase(), label: str }));\n      // console.log(convertedCategoryData)\n      this.setState({\n        service: this.props.location.state.service,\n        pictures: picturesFetched,\n        convertedCategory: convertedCategoryData\n      })\n    }\n    else{\n      // first we fetch the service itself\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/services/' + this.props.match.params.service_id, {\n        method: \"GET\",\n        headers: {\n            'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      })\n      .then(function(response){\n        if(response.status!==200){\n          // throw an error alert\n          store.dispatch(addAlert(response))\n        }\n        else{\n          return response.json();\n        }\n      })\n      .then(data => {\n        if(data){\n          let convertedCategoryData = data.category.map((str) => ({ value: str.toLowerCase(), label: str }));\n          this.setState({\n            service: data,\n            pictures: picturesFetched,\n            convertedCategory: convertedCategoryData\n          })\n        }\n      });\n\n\n\n      // // then we get the worker data to display for user\n      // // need to get store category, fetch?\n      // // refactor later to make it a get request\n      // // maybe have to refactor the whole table to keep track of names...?\n      // fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/workers\" , {\n      //   method: \"POST\",\n      //   headers: {\n      //       'Content-type': 'application/json'\n      //   },\n      //   credentials: 'include',\n      //   body: JSON.stringify(values)\n      // })\n      // .then(function(response){\n      //   console.log(response)\n      //   if(response.status!==200){\n      //     // should throw an error here\n      //     console.log(\"Error!\", response.status)\n      //     // throw new Error(response.status)\n      //     // window.location.href='/'\n      //   }\n      //   else{\n      //     return response.json();\n      //   }\n      // })\n      // .then(data => {\n      //   console.log(\"Limited store data from server:\", data)\n      //   let convertedWorkers = data.map((worker) => ({ value: worker.id, label: worker.first_name + \" \" + worker.last_name }));\n      //   this.setState({\n      //     workerOptions: convertedWorkers\n      //   })\n      // });\n    }\n  }\n\n  render() {\n    return (\n      <Container fluid>\n        <Row className=\"justify-content-center\">\n          <Col xs={8} sm={7} md={6} lg={5}>\n          <Formik\n              enableReinitialize\n              initialValues={{\n                name: this.state.service.name,\n                cost: this.state.service.cost,\n                duration: this.state.service.duration,\n                description: this.state.service.description,\n                pictures: [],\n                pictureCount: this.state.pictures.length - this.state.keys.length,\n                workers: this.state.service.workers,\n                category: this.state.convertedCategory,\n                store_id: this.props.match.params.store_id\n              }}\n              validationSchema={this.yupValidationSchema}\n              onSubmit={async (values) => {\n                let store_id = this.props.match.params.store_id\n                let service_id = this.props.match.params.service_id\n                let triggerServiceDisplay = this.triggerServiceDisplay\n\n                values.category = values.category.map(function(val){ \n                  return val.label; \n                })\n\n                // remove files from s3\n                if(this.state.keys.length > 0){\n                  await deleteHandler(this.state.keys)\n                }\n\n                // upload new images to s3 from client to avoid burdening back end\n                if(this.state.selectedFiles.length > 0){\n                  let prefix = 'stores/' + this.props.match.params.store_id + '/services/' + this.props.match.params.service_id + '/'\n                  await uploadHandler(prefix, this.state.selectedFiles)\n                }\n\n                // need to figure out this...\n                // values.workers = values.workers.map(function(val){ \n                //   return val.value; \n                // })\n\n                fetch(fetchDomain + '/stores/' + store_id + \"/services/\" + service_id, {\n                  method: \"POST\",\n                  headers: {\n                    'Content-type': 'application/json'\n                  },\n                  credentials: 'include',\n                  body: JSON.stringify(values)\n                })\n                .then(function(response){\n                  if(response.status!==200){\n                    store.dispatch(addAlert(response))\n                  }\n                  else{\n                    return response.json();\n                  }\n                })\n                .then(function(data){\n                  // redirect to home page signed in\n                  if(data){\n                    triggerServiceDisplay(data)\n                  }\n                })\n              }}\n            >\n            {( {values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                setFieldValue}) => (\n              <Form className=\"formBody rounded\">\n                <h3>Edit Service</h3>\n\n                <Form.Group controlId=\"formService\">\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                            <FaHandshake/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control type=\"text\" \n                      value={values.name} \n                      placeholder=\"Name of Service\" \n                      name=\"name\" \n                      onChange={handleChange} \n                      onBlur={handleBlur}\n                      className={touched.name && errors.name ? \"error\" : null}/>\n                  </InputGroup>\n                  {touched.name && errors.name ? (\n                    <div className=\"error-message\">{errors.name}</div>\n                  ): null}\n                </Form.Group>\n\n                <Form.Group controlId=\"formCost\">\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                            <FaDollarSign/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control type=\"number\" \n                    value={values.cost}\n                    placeholder=\"Cost\" \n                    name=\"cost\" \n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    className={touched.cost && errors.cost ? \"error\" : null}/>\n                  </InputGroup>\n                  {touched.cost && errors.cost ? (\n                    <div className=\"error-message\">{errors.cost}</div>\n                  ): null}\n                </Form.Group>\n\n                <Form.Group controlId=\"formDuration\">\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                            <FaHourglassHalf/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control \n                      type=\"number\"\n                      value={values.duration}\n                      placeholder=\"Duration (in min)\" \n                      name=\"duration\" \n                      onChange={handleChange} \n                      onBlur={handleBlur}\n                      className={touched.duration && errors.duration ? \"error\" : null}/>\n                  </InputGroup>\n                  {touched.duration && errors.duration ? (\n                    <div className=\"error-message\">{errors.duration}</div>\n                  ): null}\n                </Form.Group>\n\n                <Form.Group controlId=\"formDescription\">\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                          <FaPen/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control \n                      type=\"textarea\"\n                      rows={3}\n                      value={values.description}\n                      placeholder=\"Description\" \n                      name=\"description\" \n                      onChange={handleChange} \n                      onBlur={handleBlur}\n                      className={touched.description && errors.description ? \"error\" : null}/>\n                  </InputGroup>\n                  {touched.description && errors.description ? (\n                    <div className=\"error-message\">{errors.description}</div>\n                  ): null}\n                </Form.Group>\n\n                {/* <Form.Group controlId=\"formWorkers\">\n                  <Select\n                    value={values.workers}\n                    onChange={option => setFieldValue(\"workers\", option)}\n                    name=\"workers\"\n                    options={this.state.workerOptions}\n                    isMulti={true}\n                    placeholder={\"Assigned Workers\"}\n                    className={touched.workers && errors.workers ? \"error\" : null}\n                  />\n                  {touched.workers && errors.workers ? (\n                    <div className=\"error-message\">{errors.workers}</div>\n                  ): null}\n                </Form.Group> */}\n\n                <Form.Group controlId=\"formCategory\">\n                  <Select\n                    value={values.category}\n                    onChange={option => setFieldValue(\"category\", option)}\n                    name=\"category\"\n                    options={this.state.categoryOptions}\n                    isMulti={true}\n                    placeholder={\"Category\"}\n                    className={touched.category && errors.category ? \"error\" : null}\n                  />\n                  {touched.category && errors.category ? (\n                    <div className=\"error-message\">{errors.category}</div>\n                  ): null}\n                </Form.Group>\n\n                <Form.Group controlId=\"pictureCount\">\n                  <Form.Label>Delete Images</Form.Label>\n                  {this.state.pictures.map((picture, index) => (\n                    <div key={\"pic-\" + index}>\n                      <img className=\"img-fluid\" src={picture.url} alt={\"Slide \" + index} />\n                      <Form.Check\n                        // style={{marginLeft: 30}}\n                        id={picture.key}\n                        label={picture.key.split('/').slice(-1)[0]}\n                        onChange={event => this.deleteFileChangeHandler(event, setFieldValue, values.pictures.length)}\n                      />\n                    </div>\n                  ))}\n                </Form.Group>\n\n                <Form.Group controlId=\"pictures\">\n                  <Form.Label>Add Images</Form.Label>\n                  <br/>\n                  <input \n                    onChange={event => this.fileChangedHandler(event, setFieldValue, values.pictures)}\n                    type=\"file\"\n                    multiple\n                    className={touched.pictures && errors.pictures ? \"error\" : null}\n                  />\n                  {touched.pictureCount && errors.pictureCount ? (\n                    <div className=\"error-message\">{errors.pictureCount}</div>\n                  ): null}\n                </Form.Group>\n\n                <Button onClick={handleSubmit}>Submit</Button>\n              </Form>\n            )}\n            </Formik>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default ServiceEditForm;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { Button, Card, ListGroup } from 'react-bootstrap';\nimport Cookies from 'js-cookie';\nimport { withRouter } from \"react-router-dom\";\nimport {\n  addAlert\n} from '../../reduxFolder/actions/alert'\nimport store from '../../reduxFolder/store';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport { css } from '@emotion/core'\nimport GridLoader from 'react-spinners/GridLoader'\nconst override = css`\n  display: block;\n  margin: 0 auto;\n`;\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nclass AppointmentDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      appointment: [],\n      start_time: 0,\n      user_id: 0,\n      end_time: 0,\n      store_name: '',\n      cost: 0,\n      service_names: [],\n      workers: [],\n      loading: true\n    }\n  }\n\n  deleteAppointment = () => {\n    fetch(fetchDomain + '/appointments/delete/' + this.props.match.params.group_id, {\n      method: \"GET\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      credentials: 'include'\n    })\n      .then(function (response) {\n        if (response.status !== 200) {\n          store.dispatch(addAlert(response))\n        }\n        else {\n          return response.json()\n        }\n      })\n      .then(data => {\n        store.dispatch(addAlert('Deleted Appointment'))\n        this.props.history.push({\n          pathname: '/'\n        })\n      });\n  }\n\n  triggerAppointmentCancel = () => {\n    confirmAlert({\n      title: 'Are you sure?',\n      message: 'You will be charged a cancellation fee by this store.',\n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.deleteAppointment()\n        },\n        {\n          label: 'No'\n        }\n      ]\n    });\n  }\n\n  convertMinsToHrsMins(mins) {\n    let h = Math.floor(mins / 60);\n    let m = mins % 60;\n    let am = false\n    if (h == 24) {\n      am = true\n      h -= 12\n    }\n    else if (h < 12) {\n      am = true\n    } else if (h != 12) {\n      h -= 12\n    }\n    h = h < 10 ? '0' + h : h;\n    if (h == 0) {\n      h = '12'\n    }\n    m = m < 10 ? '0' + m : m;\n    if (am) {\n      return `${h}:${m}am`;\n    } else {\n      return `${h}:${m}pm`;\n    }\n\n  }\n\n  componentDidMount() {\n    // Refactor to optimize if we were passed the appointment data from calling component\n    // if (this.props.location && this.props.location.state && this.props.location.state.appointment) {\n    //   this.setState({\n    //     appointment: this.props.location.state.appointment,\n    //     user_id: this.props.location.state.user_id,\n    //     start_time: this.props.location.state.start_time,\n    //     end_time: this.props.location.state.end_time,\n    //     store_name: this.props.location.state.store_name,\n    //     cost: this.props.location.state.cost,\n    //     workers: this.props.location.state.workers,\n    //     loading: false\n    //   })\n    // }\n    // else {\n      // retrieve the appointment data from the database\n      fetch(fetchDomain + '/appointments/display/' + this.props.match.params.group_id, {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      })\n        .then(function (response) {\n          if (response.status !== 200) {\n            // throw an error alert\n            store.dispatch(addAlert(response))\n          }\n          else {\n            return response.json();\n          }\n        })\n        .then(data => {\n          if (data) {\n            this.setState({\n              appointment: data.appointment,\n              user_id: data.user_id,\n              start_time: data.start_time,\n              end_time: data.end_time,\n              store_name: data.store_name,\n              cost: data.cost,\n              service_names: data.service_names,\n              workers: data.workers,\n              loading: false\n            })\n          }\n        });\n    // }\n  }\n\n  render() {\n    const DisplayWithLoading = (props) => {\n      if (this.state.loading) {\n        return <Row className=\"vertical-center\">\n          <Col>\n            <GridLoader\n              css={override}\n              size={20}\n              color={\"#2196f3\"}\n              loading={this.state.isLoading}\n            />\n          </Col>\n        </Row>\n      } else {\n        let cancelButton;\n        if (Cookies.get('user') && this.state.user_id == JSON.parse(Cookies.get('user').substring(2)).id) {\n          cancelButton = <Button variant=\"danger\" className=\"float-left\" onClick={() => this.triggerAppointmentCancel()}>Cancel Appointment</Button>\n        }\n        return <Row className=\"justify-content-md-center\">\n          <Col lg={5}>\n            <Card className=\"mt-5\">\n              <Card.Header as=\"h5\">Your Appointment at: {this.state.store_name}</Card.Header>\n              <Card.Body>\n                <Card.Text as=\"div\">\n                  <ListGroup as=\"div\" variant=\"flush\">\n                    <ListGroup.Item>Appointment Start Time: {this.convertMinsToHrsMins(this.state.start_time)}</ListGroup.Item>\n                    <ListGroup.Item>Appointment End Time: {this.convertMinsToHrsMins(this.state.end_time)}</ListGroup.Item>\n                    <ListGroup.Item>Services: {this.state.service_names.toString()}</ListGroup.Item>\n                    <ListGroup.Item>Total Cost: {this.state.cost}</ListGroup.Item>\n                    <ListGroup.Item>Scheduled Technicians: {this.state.workers.toString()}</ListGroup.Item>\n                  </ListGroup>\n                </Card.Text>\n                {cancelButton}\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      }\n    }\n\n    return (\n      <Container fluid>\n        <DisplayWithLoading />\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(AppointmentDisplay);","import React from 'react';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { Button, Card, ListGroup, Image } from 'react-bootstrap';\nimport Cookies from 'js-cookie';\nimport { withRouter } from \"react-router-dom\";\nimport {\n  addAlert\n} from '../../reduxFolder/actions/alert'\nimport store from '../../reduxFolder/store';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport { css } from '@emotion/core'\nimport GridLoader from 'react-spinners/GridLoader'\nconst override = css`\n  display: block;\n  margin: 0 auto;\n`;\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nclass AppointmentDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      appointment: [],\n      start_time: 0,\n      user_id: 0,\n      end_time: 0,\n      store_name_mappings: [],\n      store_ids: [],\n      cost: 0,\n      service_name_mappings: [],\n      grouped_service_ids: [],\n      workers: [],\n      loading: true\n    }\n  }\n\n  deleteAppointment = () => {\n    fetch(fetchDomain + '/appointments/delete/' + this.props.match.params.group_id, {\n      method: \"GET\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      credentials: 'include'\n    })\n      .then(function (response) {\n        if (response.status !== 200) {\n          store.dispatch(addAlert(response))\n        }\n        else {\n          return response.json()\n        }\n      })\n      .then(data => {\n        store.dispatch(addAlert('Deleted Appointment'))\n        this.props.history.push({\n          pathname: '/'\n        })\n      });\n  }\n\n  triggerAppointmentCancel = () => {\n    confirmAlert({\n      title: 'Are you sure?',\n      message: 'You will be charged a cancellation fee by this store.',\n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.deleteAppointment()\n        },\n        {\n          label: 'No'\n        }\n      ]\n    });\n  }\n\n  triggerAppointmentDisplay = (group_id) => {\n    this.props.history.push({\n      pathname: '/appointments/' + group_id\n    })\n  }\n\n  convertMinsToHrsMins(mins) {\n    let h = Math.floor(mins / 60);\n    let m = mins % 60;\n    let am = false\n    if (h == 24) {\n      am = true\n      h -= 12\n    }\n    else if (h < 12) {\n      am = true\n    } else if (h != 12) {\n      h -= 12\n    }\n    h = h < 10 ? '0' + h : h;\n    if (h == 0) {\n      h = '12'\n    }\n    m = m < 10 ? '0' + m : m;\n    if (am) {\n      return `${h}:${m}am`;\n    } else {\n      return `${h}:${m}pm`;\n    }\n\n  }\n\n  formatDate(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n\n    return [month, day, year].join('-');\n}\n\n  componentDidMount() {\n    // Refactor to optimize if we were passed the appointment data from calling component\n    // if (this.props.location && this.props.location.state && this.props.location.state.appointment) {\n    //   this.setState({\n    //     appointment: this.props.location.state.appointment,\n    //     user_id: this.props.location.state.user_id,\n    //     start_time: this.props.location.state.start_time,\n    //     end_time: this.props.location.state.end_time,\n    //     store_name: this.props.location.state.store_name,\n    //     cost: this.props.location.state.cost,\n    //     workers: this.props.location.state.workers,\n    //     loading: false\n    //   })\n    // }\n    // else {\n      // retrieve the appointment data from the database\n      fetch(fetchDomain + '/appointments/' + JSON.parse(Cookies.get('user').substring(2)).id, {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      })\n        .then(function (response) {\n          if (response.status !== 200) {\n            // throw an error alert\n            store.dispatch(addAlert(response))\n          }\n          else {\n            return response.json();\n          }\n        })\n        .then(data => {\n          if (data) {\n            if(Object.keys(data).length === 0 && data.constructor === Object) {\n              this.setState({\n                loading: false,\n                hasAppointments: false\n              })\n            } else {\n              this.setState({\n                store_ids: data.store_ids,\n                store_name_mappings: data.store_name_mappings,\n                dates: data.dates,\n                start_times: data.start_times, \n                end_times: data.end_times,\n                costs: data.costs,\n                group_ids: data.group_ids,\n                service_name_mappings: data.service_name_mappings,\n                grouped_service_ids: data.grouped_service_ids,\n                loading: false,\n                hasAppointments: true\n              })\n            }\n            \n          }\n        });\n    // }\n  }\n\n  render() {\n    //remove these props args if not needed\n    const ShowServices = (props) => {\n      let listGroupItems = [];\n      for (let i = 0; i < this.state.grouped_service_ids[props.index].length; i ++) {\n        listGroupItems.push(<ListGroup.Item key={this.state.grouped_service_ids[props.index][i]}>{this.state.service_name_mappings.find((element) => element.id == this.state.grouped_service_ids[props.index][i]).name}</ListGroup.Item>);\n      }\n      return listGroupItems;\n    }\n\n    const AppointmentList = (props) => {\n      let cards = [];\n      for (let i = 0; i < this.state.group_ids.length; i ++) {\n        cards.push(<Card style={{cursor: 'pointer'}} key={this.state.group_ids[i]}className=\"my-5\" onClick={() => this.triggerAppointmentDisplay(this.state.group_ids[i])}>\n          <Card.Header as=\"h4\">{this.state.store_name_mappings.find((element) => element.id == this.state.store_ids[i]).name} on {this.formatDate(this.state.dates[i])}</Card.Header>\n          <Card.Body>\n            <Card.Text as=\"div\">\n              <Row>\n                <Col>\n                  {this.convertMinsToHrsMins(this.state.start_times[i])} - {this.convertMinsToHrsMins(this.state.end_times[i])} ${this.state.costs[i]}\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <h5>Services Booked for Today</h5>\n                  <ListGroup as=\"div\" variant=\"flush\">\n                    <ShowServices index={i}/>\n                  </ListGroup>\n                </Col>\n              </Row>\n            </Card.Text>\n          </Card.Body>\n        </Card>);\n      }\n      return cards;\n    }\n\n    const DisplayWithLoading = (props) => {\n      if (this.state.loading) {\n        return <Row className=\"vertical-center\">\n          <Col>\n            <GridLoader\n              css={override}\n              size={20}\n              color={\"#2196f3\"}\n              loading={this.state.isLoading}\n            />\n          </Col>\n        </Row>\n      } else if (this.state.hasAppointments) {\n        let cancelButton;\n        if (Cookies.get('user') && this.state.user_id == JSON.parse(Cookies.get('user').substring(2)).id) {\n          cancelButton = <Button variant=\"danger\" className=\"float-left\" onClick={() => this.triggerAppointmentCancel()}>Cancel Appointment</Button>\n        }\n        return <Row className=\"justify-content-md-center\">\n          <Col lg={5}>\n            <AppointmentList/>\n          </Col>\n        </Row>\n      } else {\n        return <Row className=\"justify-content-center mt-5\">\n        <Col xs={11} lg={8}>\n          <Card className=\"w-70 h-60\">\n          <Card.Header as=\"h4\">My Appointments</Card.Header>\n            <Card.Body>\n              <Card.Text as=\"div\">\n                <h5>Whoops, looks like you need to book an appointment with us first. </h5>\n                <Image className=\"h-100 w-100\" src=\"https://s3.amazonaws.com/thumbnails.thecrimson.com/photos/2018/11/15/001152_1334195.jpg.1500x998_q95_crop-smart_upscale.jpg\"/>\n              </Card.Text>\n            </Card.Body>\n        </Card>\n        </Col>\n        </Row>\n      }\n    }\n\n    return (\n      <Container fluid>\n        <DisplayWithLoading />\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(AppointmentDisplay);","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Registration from './components/User/Registration';\nimport SignupForm from './components/User/SignupForm';\nimport MainNavbar from './components/Navbar/MainNavbar';\nimport Homepage from './components/Home/Homepage';\nimport StaticPage from './components/StaticPages/StaticPage';\nimport SearchDisplay from './components/Search/SearchDisplay';\nimport ReservationPage from './components/Reservation/ReservationPage'\nimport './App.css';\nimport StoreSignupForm from './components/Store/StoreSignupForm';\nimport Calendar from './components/Calendar/CalendarPage';\nimport StoreDisplay from './components/Store/StoreDisplay';\nimport StoreEditForm from './components/Store/StoreEditForm';\nimport redirectWithoutAuth from './components/redirectWithoutAuth';\nimport redirectWithAuth from './components/redirectWithAuth';\nimport EditProfileForm from './components/User/EditProfileForm';\nimport Cookies from 'js-cookie';\nimport Profile from './components/User/Profile';\nimport UserStoresDashboard from './components/Store/UserStoresDashboard';\nimport AddWorkerForm from './components/Worker/AddWorkerForm';\nimport WorkerDashboard from './components/Worker/WorkerDashboard';\nimport WorkerDisplay from './components/Worker/WorkerDisplay';\nimport WorkerEditForm from './components/Worker/WorkerEditForm';\nimport AddServiceForm from './components/Service/AddServiceForm';\nimport ServiceDashboard from './components/Service/ServiceDashboard';\nimport ServiceDisplay from './components/Service/ServiceDisplay';\nimport ServiceEditForm from './components/Service/ServiceEditForm';\nimport AppointmentDisplay from './components/Appointments/AppointmentDisplay';\nimport {\n  userLogout\n} from './reduxFolder/actions/user'\nimport store from './reduxFolder/store';\nimport UserAppointments from './components/Appointments/UserAppointments';\n\nfunction App() {\n  function handleLogout() {\n    Cookies.remove(\"token\");\n    Cookies.remove(\"user\"); // don't think we need any cookies anymore now that redux persists to local storage for us...\n    store.dispatch(userLogout())\n    window.location.href='/'\n  }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <MainNavbar/>\n        <div className=\"App-body\">\n          <Switch>\n            <Route exact path=\"/\" component={Homepage} />\n            <Route exact path=\"/about\" component={StaticPage} />\n            <Route path=\"/search\" component={SearchDisplay} />\n\n            <Route exact path=\"/login\" component={redirectWithAuth(Registration)} />\n            <Route exact path=\"/logout\" component={handleLogout}/>\n            <Route exact path=\"/signup\" component={Registration} />\n            <Route path=\"/users/edit/:user_id\" component={redirectWithoutAuth(EditProfileForm)}/>\n            <Route path=\"/users/:user_id/stores\" component={redirectWithoutAuth(UserStoresDashboard)}/>\n            <Route path=\"/users/:user_id/appointments\" component={redirectWithoutAuth(UserAppointments)}/>\n            <Route path=\"/users/:user_id\" component={redirectWithoutAuth(Profile)}/>\n\n            <Route exact path=\"/storeCalendar/:store_id\" component={redirectWithoutAuth(Calendar)} />\n            <Route path=\"/book/:store_id\" component={ReservationPage} />\n            <Route exact path=\"/store/signup\" component={redirectWithoutAuth(StoreSignupForm)} />\n            <Route path=\"/stores/edit/:store_id\" component={redirectWithoutAuth(StoreEditForm)}/>\n\n            <Route path=\"/stores/addService/:store_id\" component={redirectWithoutAuth(AddServiceForm)}/>\n            <Route path=\"/stores/:store_id/services/:service_id/edit\" component={redirectWithoutAuth(ServiceEditForm)}/>\n            <Route path=\"/stores/:store_id/services/:service_id\" component={ServiceDisplay}/>\n            <Route path=\"/stores/:store_id/services\" component={redirectWithoutAuth(ServiceDashboard)}/>\n\n            <Route path=\"/stores/addWorker/:store_id\" component={redirectWithoutAuth(AddWorkerForm)}/>\n            <Route path=\"/stores/:store_id/workers/:worker_id/edit\" component={redirectWithoutAuth(WorkerEditForm)}/>\n            <Route path=\"/stores/:store_id/workers/:worker_id\" component={WorkerDisplay}/>\n            <Route path=\"/stores/:store_id/workers\" component={redirectWithoutAuth(WorkerDashboard)}/>\n            <Route path=\"/stores/:store_id\" component={StoreDisplay}/>\n\n            <Route path=\"/appointments/:group_id\" component={redirectWithoutAuth(AppointmentDisplay)}/>\n\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nexport default function redirectWithAuth(ComponentToProtect, addAlert) {\n  return class extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        loading: true,\n        redirect: false,\n      };\n    }\n    componentDidMount() {\n      fetch(fetchDomain + '/checkToken' , {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      }).then(res => {\n          if (res.status === 200) {\n            this.setState({ loading: false, redirect: true });\n          } else {\n            this.setState({ loading: false, redirect: false });\n          }\n        })\n    }\n    render() {\n      const { loading, redirect } = this.state;\n      if (loading) {\n        return null;\n      }\n      if (redirect) {\n        return <Redirect to=\"/\"/>;\n      }\n      else {\n        return <ComponentToProtect addAlertPassed={addAlert} {...this.props}/>;\n      }\n    }\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from './reduxFolder/store';\n\nReactDOM.render(\n<Provider store={store}>\n    <App/>\n</Provider>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}