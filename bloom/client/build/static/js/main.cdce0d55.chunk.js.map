{"version":3,"sources":["assets/abstract-painting.jpg","components/Search/helper.js","assets/barber.jpg","assets/facials.jpg","assets/hair.jpg","assets/lipstics2.jpg","assets/massage3.jpg","assets/nails3.jpg","assets/salon.jpg","assets/paint_line.png","assets/salon2.jpeg","assets/hair_salon.jpg","reduxFolder/actions/alert.js","reduxFolder/redux.js","components/User/LoginForm.js","reduxFolder/actions/user.js","components/User/SignupForm.js","components/Search/SearchBar.js","components/Navbar/MainNavbar.js","reduxFolder/reducers/user.js","reduxFolder/reducers/alert.js","reduxFolder/actions/stores.js","reduxFolder/reducers/stores.js","reduxFolder/reducers/index.js","reduxFolder/store.js","components/Search/AdvancedSearch.js","components/Home/Category.js","components/Home/Homepage.js","components/StaticPages/StaticPage.js","components/LargeCarousel.js","components/Search/SearchCard.js","components/Map/MapContainer.js","components/Search/SearchDisplayLoader.js","components/Search/SearchDisplayLoaderMobile.js","components/Search/SearchDisplay.js","components/Reservation/ServiceSelection.js","components/Reservation/DateSelection.js","components/Reservation/BookingPage.js","components/Reservation/ReservationPage.js","components/s3.js","components/Store/StoreSignupForm.js","components/Calendar/CalendarPage.js","components/Store/StoreDisplay.js","components/Store/StoreEditForm.js","components/redirectWithoutAuth.jsx","components/User/EditProfileForm.js","components/User/Profile.js","components/Store/UserStoresDashboardLoader.js","components/Store/UserStoresDashboard.js","components/Worker/AddWorkerForm.js","components/Worker/WorkerDashboard.js","components/Worker/WorkerEditForm.js","components/Worker/WorkerDisplay.js","components/Service/AddServiceForm.js","components/Service/ServiceDashboard.js","components/Service/ServiceDisplay.js","components/Service/ServiceEditForm.js","components/Appointments/AppointmentDisplay.js","components/Appointments/UserAppointments.js","App.js","components/redirectWithAuth.jsx","serviceWorker.js","index.js"],"names":["module","exports","queryString","query","qs","Object","entries","filter","pair","undefined","map","i","encodeURIComponent","join","addAlert","messagePassed","type","message","fetchDomain","process","successGoogle","response","console","log","accessToken","failureGoogle","error","successFacebook","failureFacebook","status","LoginForm","props","state","email","password","handleChange","bind","handleSubmit","event","this","setState","target","id","value","prevProps","prevState","user","history","push","pathname","preventDefault","loginUser","Container","fluid","src","paint","alt","style","top","left","position","height","width","Row","className","Col","xs","sm","md","lg","Form","marginTop","Group","marginLeft","InputGroup","Prepend","Text","Control","placeholder","onChange","Button","variant","onClick","clientId","buttonText","onSuccess","onFailure","cookiePolicy","render","renderProps","backgroundColor","color","paddingRight","marginBottom","fontSize","size","appId","fields","xfbml","cssClass","icon","callback","to","React","Component","connect","userReducer","dispatch","bindActionCreators","auth_token","fetch","headers","credentials","method","body","JSON","stringify","then","json","data","login","SignupForm","phoneRegExp","emailRegExp","yupValidationSchema","Yup","shape","first_name","min","max","required","last_name","phone","matches","password_confirmation","oneOf","initialValues","role","validationSchema","onSubmit","values","signUpUser","errors","touched","handleBlur","controlId","name","onBlur","failure","window","location","href","signup","SearchBar","handleSelectChange","selectedCategory","categories","label","address","distance","autocomplete","handlePlaceSelect","require","nails","hair","search","getPlace","address_components","elem","long_name","google","maps","places","Autocomplete","document","getElementById","addListener","inline","autoComplete","Append","disabled","selected","options","withRouter","MainNavbar","storeDisplay","Navbar","collapseOnSelect","expand","bg","fixed","fontFamily","Toggle","aria-controls","Collapse","Nav","marginRight","useLocation","keys","length","constructor","NavDropdown","title","Item","Divider","right","initialState","action","assign","new_user","alert","alertReducer","addStore","store","stores","storeReducer","new_stores","rootReducer","combineReducers","persistedState","serializedState","localStorage","getItem","parse","e","loadFromLocalStorage","createStore","reducers","applyMiddleware","thunk","subscribe","setItem","saveToLocalStorage","getState","AdvancedSearch","redirect","parseInt","stateRep","center","lat","lng","Label","as","Check","border","Category","img","text","ScreenWidth","listen","children","useState","xys","setPosition","useEffect","setFromEvent","mounted","x","clientX","y","clientY","innerHeight","innerWidth","addEventListener","removeEventListener","setWidth","handleResize","useScreenWidth","Homepage","Visible","transform","alignItem","isVisible","active","fontWeight","avgTypingDelay","startDelay","cursor","show","blink","element","Backspace","count","delay","lipstics","barber","facials","massage","paint_line","salon","StaticPage","LargeCarousel","Carousel","interval","pictures","picture","index","key","url","SearchCard","Card","Image","Body","Title","onClickFunctionStore","description","onClickFunctionBook","MapContainer","onMarkerClick","marker","selectedPlace","activeMarker","showingInfoWindow","activeMarkerIndex","onClose","zoom","mapStyles","initialCenter","displayMarkers","visible","styleVal","onClickFunction","SearchDisplayLoader","speed","viewBox","foregroundColor","rx","ry","SearchDisplayMobileLoader","SearchDisplay","link","split","getResults","loading","RenderStoreCards","xl","SearchDisplayLoaderMobile","ServiceSelection","currService","services","find","selectedServices","updateReservation","category","service","custom","checked","cost","toFixed","block","override","css","DateSelection","handleDateChange","date","getMonth","startDate","store_id","parsedData","appointment","Date","appointments","currDate","selectedTime","handleSlotClick","schedule","updateAppointments","mins","h","Math","floor","m","am","SlotsAtSelectedTime","slots","schedules","currTime","foundSchedule","currSchedule","currDaySchedules","workersSchedules","day_of_the_week","getDay","scheduleStillWorks","currScheduleCurrTime","currScheduleCurrWorkerIndex","currScheduleServiceIndex","available","currScheduleCurrService","currScheduleCurrWorker","worker_id","start_time","end_time","duration","currWorkerAppointments","setHours","service_id","price","convertMinsToHrsMins","time","storeHours","close_time","minDate","items","open_time","isLoading","firstName","lastName","user_id","triggerAppointmentDisplay","returnedAppointment","appointmentGroupId","Cookies","get","substring","a","setFieldValue","ReservationPage","removal","total","selectedService","backStep","newStep","currentStep","receivedAppointments","pluralize","val","word","plural","_pluralize","num","includes","Number","timeConvert","n","hours","rhours","minutes","rminutes","round","prefetchSchedules","Promise","all","match","params","allResponses","storeName","workers","response1","response2","that","noGutters","Header","servicesList","ListGroup","getPictures","prefixPassed","prefix","uploadHandler","selectedFiles","tempDate","getFullYear","getDate","getHours","getMinutes","getSeconds","fileName","fileType","deleteHandler","keysPassed","StoreSignupForm","day","indexOf","newStoreHours","querySelector","slice","fileChangedHandler","files","street","city","zipcode","nullable","triggerStoreDisplay","returnedStore","owner_id","updateRole","rows","option","isMulti","multiple","today","isWeekEnd","DayScaleCell","restProps","classes","TimeTableCell","BasicLayout","appointmentData","onFieldChange","TextEditor","onValueChange","nextValue","messages","allDayLabel","repeatLabel","BooleanEditor","RecurrenceLayout","Appointment","borderRadius","Calendar","getAppointments","indx","endDate","worker_map","service_map","selectedAppointments","selectedWorkers","mainResourceName","resources","fieldName","allowMultiple","instances","currentDate","commitChanges","changeMainResource","onSelectWorker","onRemoveWorker","onSelectService","onRemoveService","onSearch","new_workers","new_services","service_instances","worker_instances","worker","selectedList","selectedItem","removedItem","includeWorker","includeService","newSelected","added","changed","deleted","startingAddedId","onSelect","onRemove","closeIcon","displayValue","multiselectContainer","groupHeading","maxWidth","chips","background","inputField","searchBox","minWidth","optionContainer","zIndex","Paper","defaultCurrentDate","onCommitChanges","startDayHour","endDayHour","cellDuration","dayScaleCellComponent","timeTableCellComponent","appointmentComponent","showCloseButton","showOpenButton","isRecurrence","basicLayoutComponent","recurrenceLayoutComponent","booleanEditorComponent","StoreDisplay","created_at","owners","clients","convertedCategory","str","toLowerCase","selectedOption","editButton","triggerStoreEdit","cat","triggerBook","StoreEditForm","updateNewHours","newHours","old_open_time","old_close_time","deleteFileChangeHandler","newPictureLength","pop","pictureCount","picturesFetched","enableReinitialize","redirectWithoutAuth","ComponentToProtect","res","Error","catch","err","EditProfileForm","editProfile","Profile","UserStoresDashboardLoader","UserStoresDashboard","redirectToWorkerForm","passedStore","salon2","triggerStoreShow","triggerShowCalendar","triggerShowWorkers","triggerShowServices","AddWorkerForm","old_start_time","old_end_time","newWorkerHours","workerHours","handleDayStatusChange","updateWeekIsWorking","weekIsWorking","triggerWorkerDisplay","returnedWorker","receivedWorkerHours","CreateStartTimesForDay","CreateEndTimesForDay","WorkerDashboard","redirectToWorkerEditForm","redirectToWorkerDisplay","workerPassed","triggerWorkerEditForm","triggerAddWorker","WorkerEditForm","serviceMapping","0","1","noChange","WorkerDisplay","updateWorker","updateHours","dayHours","receivedServices","updateContent","selectedChoice","choice","daysOfWeek","convertedServices","ListWorkingHours","RenderProfileContent","rounded","defaultActiveKey","Link","eventKey","AddServiceForm","categoryOptions","workerOptions","positive","integer","triggerServiceDisplay","convertedWorkers","setSubmitting","colors","ServiceDashboard","servicePassed","triggerAddService","triggerServiceEdit","ServiceDisplay","resolve","ServiceEditForm","returnedService","convertedCategoryData","AppointmentDisplay","deleteAppointment","group_id","triggerAppointmentCancel","confirmAlert","buttons","store_name","service_names","cancelButton","toString","store_name_mappings","store_ids","service_name_mappings","grouped_service_ids","d","month","year","hasAppointments","dates","start_times","end_times","costs","group_ids","ShowServices","listGroupItems","AppointmentList","cards","formatDate","App","exact","path","component","addAlertPassed","remove","UserAppointments","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cdce0d55.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/abstract-painting.4f80cf3e.jpg\";","// CITATION: https://stackoverflow.com/questions/37230555/get-with-query-string-with-fetch-in-react-native\nfunction queryString(query) {\n  // get array of key value pairs ([[k1, v1], [k2, v2]])\n  const qs = Object.entries(query)\n    // filter pairs with undefined value\n    .filter(pair => pair[1] !== undefined)\n    // encode keys and values, remove the value if it is null, but leave the key\n    .map(pair => pair.filter(i => i !== null).map(encodeURIComponent).join('='))\n    .join('&');\n\n  return qs && '?' + qs;\n}\n\n exports.queryString = queryString;","module.exports = __webpack_public_path__ + \"static/media/barber.d2f9dfa8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/facials.ed0b2cb9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hair.d4215e0f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lipstics2.6d47408d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/massage3.55e106f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nails3.81962b22.jpg\";","module.exports = __webpack_public_path__ + \"static/media/salon.140a41f2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/paint_line.bb971069.png\";","module.exports = __webpack_public_path__ + \"static/media/salon2.5edf0e42.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/hair_salon.5e677ff9.jpg\";","export const ADD_ALERT = 'ADD_ALERT'\nexport const REMOVE_ALERT = 'REMOVE_ALERT'\n\nexport function addAlert(messagePassed) {\n  return {\n    type: ADD_ALERT,\n    message: messagePassed\n  }\n}\n\nexport function removeAlert() {\n  return { \n    type: REMOVE_ALERT\n  }\n}\n","import {userLoginSuccess, userLoginFailure, editUserSuccess} from './actions/user';\n// import {addServiceSuccess} from './actions/service';\n// import {getWorkerOptionsSuccess, addWorker} from './actions/worker';\nimport {failure} from './actions/index'\nimport {addAlert} from './actions/alert';\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\n// USER FUNCTIONS \n\nexport function signup(values){\n  return dispatch => {\n    fetch(fetchDomain + '/signUp' , {\n      method: \"POST\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(values)\n    })\n    .then(function(response){\n      dispatch(addAlert(response))  // seems this alert is not persisting...\n\n      if(response.status!==200){\n        dispatch(failure(response))\n      }\n      else{\n        // redirect to home page signed in\n        // NOTE: do we want them to be signed in after login? if so we can change this...\n        window.location.href='/'\n      }\n    })\n  }\n}\n\nexport function login(email, password, auth_token) {\n  return dispatch => {\n    fetch(fetchDomain + '/login' , {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      credentials: 'include',\n      method: \"POST\",\n      body: JSON.stringify({\n        \"email\": email,\n        \"password\": password\n      })\n    })\n    .then(function(response){\n      dispatch(addAlert(response))\n\n      if(response.status!==200){\n        dispatch(userLoginFailure(response));\n      }\n      else{\n        console.log(response)\n        return response.json()\n      }\n    })\n    .then(data => {\n      if(data){\n        dispatch(userLoginSuccess(data.user));\n        return data;\n      }\n    });\n  }\n}\n\nexport function editUser(values){\n  return dispatch => {\n    fetch(fetchDomain + '/users/' + values.id , {\n      method: \"POST\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify(values)\n    })\n    .then(function(response){\n      dispatch(addAlert(response))\n      \n      if(response.status!==200){\n        dispatch(failure(response))\n      }\n      else{\n        // redirect to home page signed in\n        return response.json()\n      }\n    })\n    .then(data => {\n      if(data){\n        dispatch(editUserSuccess(data))\n        return data\n      }\n    });\n  }\n}\n\n// not going to refactor other code unless extra time left, too time consuming\n\n// SERVICE FUNCTIONS\n\n// export function addService(values, store_id){\n//   return dispatch => {\n//     fetch(fetchDomain + '/stores/addService/' + store_id, {\n//       method: \"POST\",\n//       headers: {\n//         'Content-type': 'application/json'\n//       },\n//       credentials: 'include',\n//       body: JSON.stringify(values)\n//     })\n//     .then(function(response){\n//       dispatch(addAlert(response))\n\n//       if(response.status!==200){\n//         dispatch(failure(response))\n//       }\n//       else{\n//         return response.json();\n//       }\n//     })\n//     .then(function(data){\n//       if(data){\n//         dispatch(addServiceSuccess(data))\n//         return data\n//       }\n//     })\n//   }\n// }\n\n// WORKER FUNCTIONS\n\n// export function getWorkerOptions(store_id){\n//   return dispatch => {\n//     fetch(fetchDomain + '/stores/' + store_id + \"/workers\" , {\n//       method: \"GET\",\n//       headers: {\n//           'Content-type': 'application/json'\n//       },\n//       credentials: 'include'\n//     })\n//     .then(function(response){\n//       if(response.status!==200){\n//         // throw an error alert\n//         dispatch(addAlert(response))\n//       }\n//       else{\n//         return response.json();\n//       }\n//     })\n//     .then(data => {\n//       if(data){\n//         let convertedWorkers = data.map((worker) => ({ value: worker.id, label: worker.first_name + \" \" + worker.last_name }));\n//         dispatch(getWorkerOptionsSuccess(convertedWorkers))\n//         return data\n//       }\n//     });\n//   }\n// }\n\n// export function addWorker(values, store_id){\n//   fetch(fetchDomain + '/stores/addWorker/' + store_id, {\n//     method: \"POST\",\n//     headers: {\n//       'Content-type': 'application/json'\n//     },\n//     credentials: 'include',\n//     body: JSON.stringify(values)\n//   })\n//   .then(function(response){\n//     dispatch(addAlert(response))\n\n//     if(response.status!==200){\n//       dispatch(failure(response))\n//     }\n//     else{\n//       return response.json();\n//     }\n//   })\n//   .then(function(data){\n//     // redirect to home page signed in\n//     if(data){\n//       dispatch(addWorkerSuccess(data))\n//       return data\n//     }\n//   })\n// }","import React from 'react';\nimport './LoginForm.css'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport { FaEnvelope, FaLock } from 'react-icons/fa';\nimport GoogleLogin from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login';\nimport {TiSocialFacebookCircular, TiSocialGooglePlus} from 'react-icons/ti';\nimport paint from '../../assets/abstract-painting.jpg';\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {login} from '../../reduxFolder/redux.js'\n// import ReactDOM from 'react-dom';\n// import { useGoogleLogin } from 'react-google-login';\n// import FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\n\n\nconst successGoogle = (response) => {\n  console.log(\"Google Success: \", response.accessToken);\n}\n\nconst failureGoogle = (response) => {\n  console.log(\"Google Failure:\", response.error);\n}\n\nconst successFacebook = (response) => {\n  console.log(\"Facebook Success:\", response.accessToken);\n}\n\nconst failureFacebook = (response) => {\n  if(response.status){\n    console.log(\"Facebook Failure\");\n  }\n}\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      message: {}\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({[event.target.id]: event.target.value});\n  }\n\n  componentDidUpdate(prevProps, prevState)  {\n    // means we updated redux store with the user and have successfully logged in\n    if (prevProps.user !== this.props.user) {\n      this.props.history.push({\n        pathname: '/'\n      })\n    }\n  }\n\n  handleSubmit(event) {\n    //there might be a CORS issue with the backend, this doesn't work without preventDefault..\n    event.preventDefault();\n    this.props.loginUser(this.state.email, this.state.password, \"\")\n  }\n\n  render() {\n    return (\n      <Container fluid>\n      <img src={paint} alt=\"paint\" style={{top: 0, left: 0, position: 'absolute', height: '100%', width:'100%', filter: 'grayscale(0.4)'}}/>\n\n        <Row className=\"justify-content-center\">\n          <Col xs={8} sm={7} md={6} lg={5}>\n            <Form className=\"formBody rounded container\" style={{marginTop: 80}}>\n              <h3>Login</h3>\n              <Form.Group style={{marginTop: 40, width: '65%', marginLeft: '17%'}}>\n                <InputGroup>\n                  <InputGroup.Prepend >\n                      <InputGroup.Text>\n                          <FaEnvelope/>\n                      </InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <Form.Control id=\"email\" type=\"email\" placeholder=\"Email\" onChange={this.handleChange}/>\n                </InputGroup>\n              </Form.Group>\n\n              <Form.Group style={{width: '65%', marginLeft: '17%'}}>\n                <InputGroup>\n                  <InputGroup.Prepend>\n                      <InputGroup.Text>\n                          <FaLock/>\n                      </InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <Form.Control id=\"password\" type=\"password\" placeholder=\"Password\" onChange={this.handleChange}/>\n                </InputGroup>\n              </Form.Group>\n              <Col xs={8} sm={8} md={8} lg={8} style={{marginLeft: '17%'}}>\n                <Button  className=\"login\" type=\"submit\" variant=\"primary\" onClick={this.handleSubmit}>Login</Button>\n                  <p><b> OR </b></p>\n                  <GoogleLogin\n                    clientId={process.env.REACT_APP_GOOGLE_ID}\n                    buttonText=\"Login with Google\"\n                    onSuccess={successGoogle}\n                    onFailure={failureGoogle}\n                    cookiePolicy={'single_host_origin'}\n                    render={renderProps => (\n                      <button onClick={renderProps.onClick} style={{ width: '100%', backgroundColor:\"#db4a39\", color: 'white', paddingRight: '30px',\n                    marginBottom: '10px', height: '48px', fontSize: '14px'}}> <TiSocialGooglePlus  size={45} style={{paddingRight:\"15px\"}}/>Login with Google</button>\n                    )}\n                  />\n\n                  <FacebookLogin\n                    appId={process.env.REACT_APP_FACEBOOK_ID} //APP ID NOT CREATED YET\n                    fields=\"name,email,picture\"\n                    onFailure={failureFacebook}\n                    xfbml={true}\n                    cssClass=\"facebookButton\"\n                    icon={<TiSocialFacebookCircular size={45} style={{paddingRight:\"15px\"}}/>}\n                    callback={successFacebook}\n                    />\n                  <p> Don't have a Bloom account yet? <Link to=\"/signup\" style={{color: 'black'}}><b> Sign Up. </b></Link></p>\n              </Col>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.userReducer.user\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  loginUser: (email, password, auth_token) => login(email, password, auth_token)\n}, dispatch)\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\n","export const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAILURE = 'USER_LOGIN_FAILURE'\nexport const USER_LOGOUT = 'USER_LOGOUT'\nexport const EDIT_USER_SUCCESS = 'EDIT_USER_SUCCESS'\nexport const UPDATE_ROLE = 'UPDATE_ROLE'\n\n\nexport function userLoginSuccess(userPassed) {\n  return {\n    type: USER_LOGIN_SUCCESS,\n    user: userPassed\n  }\n}\n\nexport function userLoginFailure(error) {\n  return {\n    type: USER_LOGIN_FAILURE,\n    error: error\n  }\n}\n\nexport function editUserSuccess(userPassed) {\n  return {\n    type: EDIT_USER_SUCCESS,\n    user: userPassed\n  }\n}\n\nexport function userLogout() {\n  return {\n    type: USER_LOGOUT\n  }\n}\n\nexport function updateRole(role) {\n  return {\n    type: UPDATE_ROLE,\n    role: role\n  }\n}\n","import React from 'react';\nimport '../../App.css';\nimport './LoginForm.css'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport { FaEnvelope, FaLockOpen, FaLock, FaUser, FaPhone } from 'react-icons/fa';\nimport { Formik } from 'formik';\nimport paint from '../../assets/abstract-painting.jpg';\nimport { Link } from \"react-router-dom\";\nimport * as Yup from 'yup';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {signup} from '../../reduxFolder/redux.js'\n\nclass SignupForm extends React.Component {\n  constructor(props) {\n    super(props);\n    // RegEx for phone number validation\n    this.phoneRegExp = /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/\n    this.emailRegExp = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/\n    // Schema for yup\n    this.yupValidationSchema = Yup.object().shape({\n      first_name: Yup.string()\n      .min(2, \"First name must have at least 2 characters\")\n      .max(100, \"First name can't be longer than 100 characters\")\n      .required(\"First name is required\"),\n      last_name: Yup.string()\n      .min(2, \"Last name must have at least 2 characters\")\n      .max(100, \"Last name can't be longer than 100 characters\")\n      .required(\"Last name is required\"),\n      email: Yup.string()\n      .email(\"Must be a valid email address\")\n      .max(100, \"Email must be less than 100 characters\")\n      .required(\"Email is required\"),\n      phone: Yup.string()\n      .matches(this.phoneRegExp, \"Phone number is not valid\"),\n      password: Yup.string()\n      .min(6, \"Password must have at least 6 characters\")\n      .max(100, \"Password can't be longer than 100 characters\")\n      .required(\"Password required\"),\n      password_confirmation: Yup.string()\n      .oneOf([Yup.ref('password')], 'Passwords do not match')\n      .required(\"Password Confirmation required\")\n    });\n  }\n\n  render() {\n    return (\n      <Container fluid>\n      <img src={paint} alt=\"paint\" style={{top: 0, left: 0, position: 'absolute', height: '100%', width:'100%', filter: 'grayscale(0.4)'}}/>\n        <Row className=\"justify-content-center\">\n          <Col xs={8} sm={7} md={6} lg={5}>\n            <Formik\n              initialValues={{\n                first_name: '',\n                last_name: '',\n                email: '',\n                role: '0',\n                phone: '',\n                password: '',\n                password_confirmation: ''\n              }}\n              validationSchema={this.yupValidationSchema}\n              onSubmit={(values) => {\n                this.props.signUpUser(values)\n              }}\n            >\n            {( {values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit}) => (\n              <Form className=\"formBody rounded\" style={{marginTop: 80}}>\n                <h3 style={{marginBottom: 40}}>Sign Up</h3>\n\n                <Form.Group controlId=\"formFirstName\" className=\"form\">\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                            <FaUser/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"first_name\"\n                      value={values.first_name}\n                      placeholder=\"First Name\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      className={touched.first_name && errors.first_name ? \"error\" : null}/>\n                  </InputGroup>\n                  {touched.first_name && errors.first_name ? (\n                    <div className=\"error-message\">{errors.first_name}</div>\n                  ): null}\n                </Form.Group>\n\n\n                <Form.Group controlId=\"formLastName\" className=\"form\">\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                            <FaUser/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control type=\"text\"\n                    value={values.last_name}\n                    placeholder=\"Last Name\"\n                    name=\"last_name\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    className={touched.last_name && errors.last_name ? \"error\" : null}/>\n                  </InputGroup>\n                  {touched.last_name && errors.last_name ? (\n                    <div className=\"error-message\">{errors.last_name}</div>\n                  ): null}\n                </Form.Group>\n\n                <Form.Group controlId=\"formPhone\" className=\"form\">\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                            <FaPhone/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control type=\"text\"\n                      value={values.phone}\n                      placeholder=\"Phone Number\"\n                      name=\"phone\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      className={touched.phone && errors.phone ? \"error\" : null}/>\n                  </InputGroup>\n                  {touched.phone && errors.phone ? (\n                    <div className=\"error-message\">{errors.phone}</div>\n                  ): null}\n                </Form.Group>\n\n                <Form.Group controlId=\"formEmail\" className=\"form\">\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                            <FaEnvelope/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control\n                      type=\"email\"\n                      value={values.email}\n                      placeholder=\"Email\"\n                      name=\"email\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      className={touched.email && errors.email ? \"error\" : null}/>\n                  </InputGroup>\n                  {touched.email && errors.email ? (\n                    <div className=\"error-message\">{errors.email}</div>\n                  ): null}\n                </Form.Group>\n\n                <Form.Group controlId=\"formPassword\" className=\"form\">\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                            <FaLockOpen/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control\n                      type=\"password\"\n                      value={values.password}\n                      placeholder=\"Password\"\n                      name=\"password\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      className={touched.password && errors.password ? \"error\" : null}/>\n                  </InputGroup>\n                  {touched.password && errors.password ? (\n                    <div className=\"error-message\">{errors.password}</div>\n                  ): null}\n                </Form.Group>\n\n                <Form.Group controlId=\"formPasswordConfirmation\" className=\"form\">\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                            <FaLock/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control\n                      type=\"password\"\n                      value={values.password_confirmation}\n                      placeholder=\"Confirm Password\"\n                      name=\"password_confirmation\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      className={touched.password_confirmation && errors.password_confirmation ? \"error\" : null}/>\n                  </InputGroup>\n                  {touched.password_confirmation && errors.password_confirmation ? (\n                    <div className=\"error-message\">{errors.password_confirmation}</div>\n                  ): null}\n                </Form.Group>\n                <Button className=\"signup\" onClick={handleSubmit}>Sign Up</Button>\n                <p> Already have a Bloom account? <Link to=\"/login\" style={{color: 'black'}}><b> Login. </b></Link></p>\n              </Form>\n            )}\n            </Formik>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  signUpUser: (values) => signup(values)\n}, dispatch)\n\n\nexport default connect(null, mapDispatchToProps)(SignupForm);\n","import React from 'react';\nimport Container from 'react-bootstrap/Container'\nimport { Form, Row, InputGroup, Button, Navbar } from 'react-bootstrap';\nimport Col from 'react-bootstrap/Col'\nimport './SearchBar.css'\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport {withRouter} from 'react-router'\n// import Chip from '@material-ui/core/Chip';\n// import Select from '@material-ui/core/Select';\n// import MenuItem from '@material-ui/core/MenuItem';\n// import Input from '@material-ui/core/Input';\nimport { FiSearch } from 'react-icons/fi';\nimport Select from 'react-select'\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categories: [{value: \"Nail Salon\", label: \"Nail Salon\"},\n      {value: \"Hair Salon\", label: \"Hair Salon\"}, \n      {value: \"Facials\", label: \"Facials\"}, \n      {value: \"Barbershops\", label: \"Barbershops\"}],\n      selectedCategory: '',\n      address: '',\n      distance: 1,\n    }\n\n    this.autocomplete = null\n    this.handlePlaceSelect = this.handlePlaceSelect.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSelectChange = (selectedCategory) => {\n    this.setState({ selectedCategory });\n  }\n\n  handleSubmit() {\n    let queryString = require('./helper.js').queryString;\n    const formState = (({ address, distance, nails, hair }) => ({ address, distance, nails, hair }))(this.state);\n    let query = queryString(formState)\n    console.log(\"query is: \", query)\n    this.props.history.push({\n      pathname: \"/search\",\n      search: query\n    });\n  }\n\n  handlePlaceSelect() {\n    let addressObject = this.autocomplete.getPlace()\n    let address = addressObject.address_components.map(function (elem) {\n      return elem.long_name;\n    }).join(\", \");\n\n    this.setState({\n      address: address\n    })\n  }\n\n  componentDidMount () {\n    const google = window.google;\n    this.autocomplete = new google.maps.places.Autocomplete(document.getElementById('autocomplete'), { })\n\n    this.autocomplete.addListener(\"place_changed\", this.handlePlaceSelect)\n  }\n\n  render() {\n    return (\n        <Form inline className=\"full-width\">\n          <Form.Row className=\"px-1 full-width\">\n            <Col xs={12} md={6} className=\"form-horizontal\">\n              <Form.Group className=\"full-width\" controlId=\"autocomplete\">\n                <InputGroup className=\"not-auto\">\n                  <Form.Control\n                    className=\"full-width\"\n                    type=\"text\"\n                    placeholder=\"Try 'New Haven, CT'\"\n                    autoComplete=\"new-password\"\n                  />\n                  <InputGroup.Append>\n                    <Button variant=\"secondary\" onClick={this.handleSubmit} disabled={!this.state.address || this.state.selected == ''}>\n                      <FiSearch />\n                    </Button>\n                  </InputGroup.Append>\n                </InputGroup>\n              </Form.Group>\n            </Col>\n            <Col xs={12} md={3}>\n              <Form.Group className=\"full-width\">\n              <Select\n                className=\"full-width\"\n                value={this.state.selectedCategory}\n                onChange={this.handleSelectChange}\n                options={this.state.categories}\n              />\n              </Form.Group>\n            </Col>\n          </Form.Row>\n        </Form>\n    );\n  }\n}\n\nexport default withRouter(SearchBar);\n","import React from 'react';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport { Link } from \"react-router-dom\";\nimport './MainNavbar.css'\nimport { connect } from 'react-redux';\nimport { useLocation } from 'react-router-dom'\nimport SearchBar from '../Search/SearchBar'\n// import BasicSearch from '../Search/BasicSearch';\n\nclass MainNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let storeDisplay = null\n    console.log(this.props.user);\n\n    const RenderNavBarBasedOnPageAndUser = (props) => {\n      let location = useLocation();\n      if(location.pathname == '/search') {\n        return <Nav className=\"full-width\">\n            <SearchBar className=\"nav-link\"/>\n          </Nav>\n      }\n      if(this.props.user == null || (Object.keys(this.props.user).length === 0 && this.props.user.constructor === Object)) {\n        console.log(this.props.user)\n        return <Nav className=\"left\">\n          <Link to=\"/login\" className=\"nav-link\">Login</Link>\n          <Link to=\"/signup\" className=\"nav-link\">Signup</Link>\n        </Nav>                 \n      } else {\n        console.log(this.props.user)\n        if(this.props.user.role != '0'){\n          storeDisplay = <NavDropdown title=\"Manage Stores\" id=\"basic-nav-dropdown\">\n            <NavDropdown.Item href={\"/users/\" + this.props.user.id + \"/stores\"}>Dashboard</NavDropdown.Item>\n            {/* <NavDropdown.Item href=\"/stores/:store_id/services\">Services</NavDropdown.Item> */}\n            <NavDropdown.Divider />\n            <NavDropdown.Item href=\"/store/signup\">Create Store</NavDropdown.Item>\n          </NavDropdown>\n        }\n        else{\n          storeDisplay = <Link to=\"/store/signup\" className=\"nav-link\">Create Store</Link>\n        }\n        return <Nav>\n          {storeDisplay}\n          <NavDropdown title=\"Profile\" id=\"basic-nav-dropdown\">\n          <NavDropdown.Item href={\"/users/\" + this.props.user.id}>View</NavDropdown.Item>\n            <NavDropdown.Item href={\"/users/edit/\" + this.props.user.id}>Edit</NavDropdown.Item>\n          </NavDropdown>\n          <Link to={\"/users/\" + 'this.props.user.id' + '/appointments'} className=\"nav-link\">My Appointments</Link>\n          <Link style={{position: 'absolute', right: 60}} to=\"/logout\" className=\"nav-link\">Logout</Link>\n        </Nav>\n      }\n    }\n\n    return (\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\" fixed=\"top\">\n        <Link to=\"/\" className=\"navbar-brand\" style={{fontFamily: 'Megrim, cursive', fontSize: '35px'}}>Bloom</Link>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"left\" style={{marginRight: '120px'}}>\n            <Link to=\"/help\" className=\"nav-link\">Help</Link>\n            <Link to=\"/about\" className=\"nav-link\">About</Link>\n          </Nav>\n          <RenderNavBarBasedOnPageAndUser/>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.userReducer.user\n})\n\nexport default connect(mapStateToProps)(MainNavbar);\n","import { USER_LOGIN_SUCCESS, USER_LOGIN_FAILURE, USER_LOGOUT, EDIT_USER_SUCCESS, UPDATE_ROLE } from \"../actions/user\"\n\nconst initialState = {\n  user: {},\n  error: {},\n}\n\nfunction userReducer(state = initialState, action) {\n  switch (action.type) {\n    case USER_LOGIN_FAILURE:\n      return Object.assign({}, state, {\n        error: action.error\n      })\n\n    case USER_LOGIN_SUCCESS:\n      return Object.assign({}, state, {\n        user: action.user\n      })\n\n    case EDIT_USER_SUCCESS:\n      return Object.assign({}, state, {\n        user: action.user\n      })\n\n    case USER_LOGOUT:\n      return Object.assign({}, state, {\n        user: {}\n      })\n\n    case UPDATE_ROLE:\n      let new_user = state.user\n      new_user.role = action.role\n      return Object.assign({}, state, {\n        user: new_user\n      })\n\n    default:\n      return state\n  }\n}\n\nexport default userReducer;\n","import { ADD_ALERT, REMOVE_ALERT } from \"../actions/alert\"\n\nconst initialState = {\n  alert: {}\n}\n\nfunction alertReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_ALERT:\n      return Object.assign({}, state, {\n        alert: action.message\n      })\n    case REMOVE_ALERT:\n      return Object.assign({}, state, {\n        alert: {}\n      })\n\n    default:\n      return state\n  }\n}\n\nexport default alertReducer","export const ADD_STORE = 'ADD_STORE'\n\nexport function addStore(store) {\n  return {\n    type: ADD_STORE,\n    store: store,\n  }\n}\n","import { ADD_STORE } from \"../actions/stores\"\n\nconst initialState = {\n  stores: [],\n}\n\nfunction storeReducer(state = initialState, action) {\n  switch (action.type) {\n\n    case ADD_STORE:\n\n      let new_stores = state.stores\n      if(new_stores) {\n        new_stores.push(action.store)\n      }\n      else {\n        new_stores = [action.store]\n      }\n      return Object.assign({}, state, {\n        stores: new_stores\n      })\n\n    default:\n      return state\n  }\n}\n\nexport default storeReducer;\n","import { combineReducers } from 'redux'\nimport userReducer from './user'\nimport alertReducer from './alert'\n// import serviceReducer from './service'\n// import workerReducer from './worker'\nimport storeReducer from './stores'\n\nlet rootReducer = combineReducers({\n  userReducer,\n  alertReducer,\n  storeReducer\n  // serviceReducer,\n  // workerReducer\n})\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport reducers from './reducers/index';\nimport thunk from 'redux-thunk';\n\nfunction saveToLocalStorage(state) {\n  try {\n    const serializedState = JSON.stringify(state)\n    localStorage.setItem('state', serializedState)\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nfunction loadFromLocalStorage() {\n  try {\n    const serializedState = localStorage.getItem('state')\n    if(serializedState === null) return undefined\n    return JSON.parse(serializedState)\n  } catch (e) {\n    console.log(e)\n    return undefined\n  }\n}\n\nconst persistedState = loadFromLocalStorage()\n\nconst store = createStore(\n  reducers,\n  persistedState,\n  applyMiddleware(thunk)\n)\n\nstore.subscribe(() => saveToLocalStorage(store.getState()))\n\nexport default store;","import React from 'react';\nimport './AdvancedSearch.css'\nimport { Form, Row} from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport { withRouter } from \"react-router-dom\";\nimport {\n  addAlert\n} from '../../reduxFolder/actions/alert'\nimport store from '../../reduxFolder/store';\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nclass AdvancedSearch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: '',\n      distance: 1,\n      nails: false,\n      hair: false,\n      redirect: false};\n    this.autocomplete = null\n    this.redirect = false\n\n    this.handlePlaceSelect = this.handlePlaceSelect.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const google = window.google;\n    this.autocomplete = new google.maps.places.Autocomplete(document.getElementById('autocomplete'), { })\n\n    this.autocomplete.addListener(\"place_changed\", this.handlePlaceSelect)\n  }\n\n  handlePlaceSelect() {\n    let addressObject = this.autocomplete.getPlace()\n    let address = addressObject.address_components.map(function(elem){\n                      return elem.long_name;\n                  }).join(\", \");\n\n    this.setState({\n      address: address\n    })\n  }\n\n  handleChange(event) {\n    if (event.target.type === \"checkbox\") {\n      this.setState({[event.target.id]: !this.state[event.target.id]})\n    }\n    else{\n      this.setState({[event.target.id]: parseInt(event.target.value) || event.target.value});\n    }\n  }\n\n  handleSubmit(event) {\n    // for some reason doesn't work without this..\n    event.preventDefault();\n\n    let queryString = require('./helper.js').queryString;\n    let query = queryString(this.state)\n    const fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n    console.log(\"environment is: \", process.env.NODE_ENV)\n    console.log(\"fetch prod is: \", process.env.REACT_APP_FETCH_DOMAIN_PROD)\n    console.log(\"fetch dev is: \", process.env.REACT_APP_FETCH_DOMAIN_DEV)\n    console.log(\"fetch domain is: \", fetchDomain)\n    fetch(fetchDomain + '/stores' + query, {\n      method: \"GET\",\n      headers: {\n          'Content-type': 'application/json'\n      }\n    })\n    .then(function(response){\n      if(response.status!==200){\n        // throw an error alert\n        store.dispatch(addAlert(response))\n      }\n      else{\n        return response.json();\n      }\n    })\n    .then(data => {\n      if(data){\n        let stateRep = this.state\n        stateRep.stores = data\n        stateRep.redirect = true\n        stateRep.center = {\n          lat: \"34.277639\",\n          lng: \"-118.3741806\"\n        }\n\n        this.props.history.push({\n          pathname: '/search',\n          search: query,\n          state: stateRep\n        })\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"book_window\">\n      <Form className=\"formBody rounded\" onSubmit={this.handleSubmit}>\n        <h3>Book Now</h3>\n        <Form.Group controlId=\"autocomplete\">\n        <Row>\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Try 'New Haven, CT'\"\n            autoComplete=\"new-password\"\n          />\n        </Row>\n        </Form.Group>\n\n        <Form.Group>\n          <Row>\n          <Form.Label>Distance</Form.Label>\n          <Form.Control as=\"select\" id=\"distance\" onChange={this.handleChange}>\n            <option>1 mile</option>\n            <option>5 miles</option>\n            <option>10 miles</option>\n            <option>25 miles</option>\n            <option>50 miles</option>\n          </Form.Control>\n          </Row>\n        </Form.Group>\n\n        <Form.Group controlId=\"category\">\n          <Row>\n          <Form.Label>Category</Form.Label>\n          <Form.Check\n            style={{marginLeft: 30}}\n            id=\"nails\"\n            label=\"Nails\"\n            onChange={this.handleChange}\n          />\n          <Form.Check\n            style={{marginLeft: 10}}\n            id=\"hair\"\n            label=\"Hair\"\n            onChange={this.handleChange}\n          />\n          </Row>\n        </Form.Group>\n          <Button style={{backgroundColor: '#8CAFCB', border: '0px'}} type=\"submit\">Submit</Button>\n      </Form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(AdvancedSearch);\n","import React from 'react';\nimport './Homepage.css';\n\n\nclass Category extends React.Component {\n  render() {\n    return (\n      <div className=\"image_container\" style={this.props.style}>\n      <img src={this.props.img} alt=\"paint\" className=\"images\"\n\n      />\n      <p className=\"text\"> {this.props.text} </p>\n      </div>\n    );\n  }\n}\n\nexport default Category;\n","import React from 'react';\n// import Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport AdvancedSearch from '../Search/AdvancedSearch';\nimport './Homepage.css';\nimport paint from '../../assets/abstract-painting.jpg';\nimport barber from '../../assets/barber.jpg';\n// import bride_hair from '../../assets/bride_hair.jpg';\nimport facials from '../../assets/facials.jpg';\nimport hair from '../../assets/hair.jpg';\nimport lipstics from '../../assets/lipstics2.jpg';\nimport massage from '../../assets/massage3.jpg';\nimport nails from '../../assets/nails3.jpg';\nimport salon from '../../assets/salon.jpg';\nimport paint_line from '../../assets/paint_line.png';\nimport Typist from 'react-typist';\nimport { useState, useEffect } from 'react'\n// import { useSpring, animated as a } from 'react-spring'\n// import TrackVisibility from 'react-on-screen';\nimport VizSensor from 'react-visibility-sensor';\n// import Typing from 'react-typing-animation';\nimport Category from './Category.js';\n\nconst calc = (x, y) => [-(y - window.innerHeight / 2) / 20, (x - window.innerWidth / 2) / 80, 1.04]\nconst trans = (x, y, s) => `perspective(600px) scale(${s})`\n\n// const animation = () => {\n//\n//     const [props, set] = useSpring(() => (\n//       { xys: [0, 0, 1], config: { mass: 5, tension: 350, friction: 40 }\n//      }))\n//\n//     const [flipped, setFlipped] = useState(false)\n//     const [key, setKey] = useState(0)\n//\n//\n//     const [width, setWidth] = useState(window.innerWidth)\n//       useEffect(() => {\n//         const handleResize = () => {\n//           setWidth(window.innerWidth)\n//         }\n//         window.addEventListener('resize', handleResize)\n//         return () => { window.removeEventListener('resize', handleResize) }\n//       })\n//\n//\n//     const { transform, opacity, display } = useSpring({\n//       opacity: flipped ? 1 : 0,\n//       display: flipped ? '' : 'none',\n//       transform: `perspective(500px) rotateX(${flipped ? 180 : 0}deg)`,\n//       config: { mass: 5, tension: 400, friction: 80 }})\n//\n// }\n\n\n\n\nfunction useScreenWidth(): number {\n\n  const [position, setPosition] = useState({ xys: [0, 0, 1]});\n\n\n  // const [props, set] = useSpring(() => (\n  //       { xys: [0, 0, 1], config: { mass: 5, tension: 350, friction: 40 }\n  // }))\n\n  useEffect(() => {\n    let mounted = true\n    let setFromEvent;\n    let setLeaveEvent;\n\n    if(mounted){\n      setFromEvent = e => setPosition({  xys: calc(e.clientX, e.clientY) });\n      setLeaveEvent = e => setPosition({ xys : [0, 0, 1]})\n      window.addEventListener(\"mousemove\", setFromEvent);\n    }\n\n    return () => {\n      mounted = false;\n      window.removeEventListener(\"mousemove\", setFromEvent);\n    };\n  });\n  // return position;\n\n\n  const [width, setWidth] = useState(window.innerWidth)\n\n  useEffect(() => {\n    let mounted = true\n    let handleResize;\n\n    if(mounted){\n      handleResize = () => {\n        setWidth(window.innerWidth)\n      }\n      window.addEventListener('resize', handleResize)\n    }\n    return () => {\n      mounted = false;\n      window.removeEventListener('resize', handleResize)\n    }\n\n  })\n\n\n  return position;\n}\n\n// function useMousePosition(listen=true) {\n//   let [ pos, setPos ] = useState({ x: 0, y: 0 })\n//   useEffect(() => {\n//     if (listen) {\n//       let handler = event => {\n//         setPos({ x: event.clientX, y: event.clientY })\n//       }\n//       window.addEventListener('mousemove', handler)\n//       return () => {\n//         window.removeEventListener('mousemove', handler)\n//       }\n//     }\n//   }, [listen])\n//   return pos\n// }\n\n// function MousePosition({ listen, children }) {\n//   let pos = useMousePosition(listen)\n//   return children(pos)\n// }\n\nfunction ScreenWidth ({ listen, children }) {\n  const screenWidth: number = useScreenWidth();\n  // console.log(screenWidth);\n  return children(screenWidth);\n\n};\n\nfunction useScroll() : number {\n  const [scrollPosition, setSrollPosition] = useState(0);\n  const handleScroll = () => {\n      const position = window.pageYOffset;\n      setSrollPosition(position);\n  };\n\n  useEffect(() => {\n      window.addEventListener('scroll', handleScroll);\n      return () => {\n          window.removeEventListener('scroll', handleScroll);\n      };\n  }, []);\n\nreturn scrollPosition;\n}\n\nfunction ScreenScroll ({ listen, children }) {\n  const scroll: number = useScroll();\n  console.log(scroll);\n  return children(scroll);\n\n};\n\nclass Homepage extends React.Component {\n  constructor(props) {\n      super(props)\n      this.state = {\n        Visible: false\n      }\n      // this.handleMouseEnter = this.handleMouseEnter.bind(this, this.props.handleMouseEnter)\n      // this.handleMouseMove = this.handleMouseMove.bind(this, this.props.handleMouseMove)\n      // this.handleMouseLeave = this.handleMouseLeave.bind(this, this.props.handleMouseLeave)\n\n  }\n\n  render() {\n\n    // console.log(this.state.Visible)\n    return (\n      <div className=\"container\">\n        <div>\n          <ScreenWidth>\n            {(position) =>\n            <img src={paint} alt=\"paint\" style={{top: 80, left: 0, position: 'absolute', height: '700px', width:'100%', transform: `perspective(600px) rotateX(${position.xys[0]/10}deg) rotateY(${position.xys[1]/10}deg) scale(${position.xys[2]})` }}\n              // onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n              // onMouseLeave={() => set({ xys: [0, 0, 1] })}\n            />\n            }\n          </ScreenWidth>\n        </div>\n        <div className=\"search\">\n            <Row>\n            <AdvancedSearch/>\n\n            <Col>\n\n            <Row>\n            <p className=\"welcome\"> Welcome to </p>\n\n            <p className=\"bloom\"> Bloom </p>\n\n            </Row>\n            <p className=\"subtitle\"> A platform that helps you find\n            salons, beauty experts and stylists that are located near your house\n            and will soon become your favorite salons. ETC ETC We can change that later. </p>\n\n          </Col>\n          </Row>\n\n        </div>\n        <div style={{position: 'absolute', height: '1000px', marginTop: '80px', alignItem: 'center'}}>\n\n          <div className=\"type_container\">\n            <VizSensor\n             onChange={(isVisible) => {\n               this.setState({Visible: isVisible})\n             }}\n             active={!this.state.Visible}>\n\n           <p style={{fontSize: 25, fontFamily: 'Bellota, cursive', fontWeight: 'bold'}}> At Bloom </p>\n           </VizSensor>\n\n           <div>\n            {(this.state.Visible) ?\n              <Typist\n                className=\"typist\"\n                avgTypingDelay={100}\n                startDelay={10}\n                cursor={{\n                  show: true,\n                  blink: true,\n                  element: '|',\n                }}\n              >\n                You can find hair salons.\n\n                <Typist.Backspace count={12} delay={200} />\n                  <span> nail salons.</span>\n                <Typist.Backspace count={12} delay={200} />\n                  <span> beauty salons and more.</span>\n\n\n            </Typist>\n           : null}\n          </div>\n        </div>\n\n            <div className=\"cards\">\n              <Col>\n                <Row>\n                <Category style={{ marginLeft: -105}} img={hair} text={\"Hair Salons\"}/>\n                <Category img={lipstics} text={\"Makeup Artists\"}/>\n                <Category img={barber} text={\"Barber Shops\"}/>\n                </Row>\n                <Row>\n                <Category style={{ marginLeft: -105}} img={nails} text={\"Nail Salons\"}/>\n                <Category img={facials} text={\"Facials\"}/>\n                <Category img={massage} text={\"Spa\"}/>\n                </Row>\n              </Col>\n            </div>\n          </div>\n\n          <div className=\"salon_container\" style={{width:'1500px', height: '800px', marginLeft: -200, marginTop: '1400px', backgroundColor: '#bdcddb'}}>\n          <Row>\n          <img src={paint_line} className=\"paint_line\" alt=\"paint\"/>\n          <Col className=\"salon_text\">\n          <p className=\"header\"> Are you a salon owner? </p>\n          <p style={{fontSize: 20}}> Join our community by signing up your salon today! Join our community by signing up your salon today. Join our community by signing up your salon today.\n          Join our community by signing up your salon today. Join our community by signing up your salon today. </p>\n          </Col>\n          <img src={salon} className=\"salon\" alt=\"paint\"/>\n          </Row>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default Homepage;\n//\n","import React from 'react';\nimport './StaticPage.css';\n// import Container from 'react-bootstrap/Container'\n\nclass StaticPage extends React.Component {\n  render() {\n    return (\n      <div className=\"backStuff\">\n        <br/>\n        <div className=\"body justify-content-center\">\n          <h1>Help/About</h1>\n          <div>\n            <p>\n            Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n            Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,\n            when an unknown printer took a galley of type and scrambled it to make a type\n            specimen book. It has survived not only five centuries, but also the leap into\n            electronic typesetting, remaining essentially unchanged. It was popularised in\n            the 1960s with the release of Letraset sheets containing Lorem Ipsum passages,\n            and more recently with desktop publishing software like Aldus PageMaker including\n            versions of Lorem Ipsum\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StaticPage;\n","import React from 'react';\nimport Carousel from 'react-bootstrap/Carousel'\nimport './LargeCarousel.css'\n\n\nclass LargeCarousel extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  render() {\n    return (\n\n      <Carousel style={this.props.style} interval=\"\">\n        {this.props.pictures.map((picture, index) => (\n          <Carousel.Item key={\"pic-\" + index}>\n            <img style={this.props.img} src={picture.url} alt={\"Slide \" + index} />\n          </Carousel.Item>\n        ))}\n      </Carousel>\n    );\n  }\n}\n\nexport default LargeCarousel;\n","import React from 'react';\nimport LargeCarousel from '../LargeCarousel';\nimport Card from 'react-bootstrap/Card'\nimport { Button, Carousel, Image, Col } from 'react-bootstrap';\nimport Row from 'react-bootstrap/Row'\n// import { getPictures } from '../s3'\n\nclass SearchCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pictures: []\n    }\n  }\n\n  async componentDidMount() {\n    // let picturesFetched = await getPictures('stores/' + this.props.store.id + '/images/')\n    // this.setState({\n    //   pictures: picturesFetched\n    // })\n\n    // can put this for now so we don't have to upload to s3\n    this.setState({\n      pictures: [\n        {\n          url: \"/hair.jpg\",\n          key: \"/hair.jpg\"\n        },\n        {\n          url: \"/nails.jpg\",\n          key: \"/nails.jpg\"\n        },\n        {\n          url: \"/salon.jpg\",\n          key: \"/salon.jpg\"\n        }\n      ]\n    })\n  }\n\n  render() {\n    return (\n      <Col xs={12} className=\"my-3 px-0 h-100\">\n        <Card style={{height: '100%'}}>\n          <Row style={{height: '100%'}}>\n            <Col md={6} className=\"vertical-align-contents px-0 h-100 w-100\">\n              <Carousel interval=\"\">\n                {this.state.pictures.map((picture, index) => (\n                  <Carousel.Item key={\"pic-\" + index}>\n                    <Image fluid src={picture.url} alt={\"Slide \" + index} />\n                  </Carousel.Item>\n                ))}\n              </Carousel>\n            </Col>\n            <Col md={6} className=\"vertical-align-contents px-0 h-100\">\n              <Card.Body >\n                <div>\n                  <Card.Title onClick={() => this.props.onClickFunctionStore(this.props.store.id)} style={{cursor: 'pointer'}} >{this.props.store.name}</Card.Title>\n                  <Card.Text className=\"mb-3\">{this.props.store.description}</Card.Text>\n                </div>\n                <Button style={{backgroundColor: '#8CAFCA', border: 0}} onClick={() => this.props.onClickFunctionBook(this.props.store.id)}>Book Now</Button>\n              </Card.Body>\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default SearchCard;\n","import React, { Component } from 'react';\nimport { Map, InfoWindow, Marker } from 'google-maps-react';\nimport SearchCard from '../Search/SearchCard';\n\nclass MapContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showingInfoWindow: false,  //Hides or the shows the infoWindow\n      activeMarker: {},          //Shows the active marker upon click\n      selectedPlace: {},          //Shows the infoWindow to the selected place upon a marker\n      activeMarkerIndex: -1\n    };\n\n    this.onMarkerClick = this.onMarkerClick.bind(this);\n    this.onClose = this.onClose.bind(this);\n  }\n\n  displayMarkers() { \n    return this.props.stores.map((store, index) => { \n      return <Marker key={\"store-\" + index} id={index} position={{ \n                     lat: store.lat, \n                     lng: store.lng }} \n                     onClick={this.onMarkerClick}\n                     name={store.name} /> \n    }) \n  } \n\n  onMarkerClick = (props, marker, e) =>\n  this.setState({\n    selectedPlace: props,\n    activeMarker: marker,\n    showingInfoWindow: true,\n    activeMarkerIndex: marker.id\n  });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  onClickFunction (id) {\n    console.log(\"Here1\")\n    // Currently not working...\n    // window.location.href='/book/' + id\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(prevProps != this.props){\n      // console.log(\"BEFORE\", prevProps, \"AFTER\", this.props)\n      // for some reason, center is not updating, the value changes but visually it does not\n    }\n  }\n\n  render() {\n    return (\n      <Map\n        google={this.props.google}\n        zoom={this.props.zoom}\n        style={this.props.mapStyles}\n        initialCenter={this.props.center}\n      >\n        {this.displayMarkers()}\n        <InfoWindow\n        marker={this.state.activeMarker}\n        visible={this.state.showingInfoWindow}\n        onClose={this.onClose}\n        >\n          <SearchCard store={this.props.stores[this.state.activeMarkerIndex]} styleVal={{ width: '10rem', height: '10rem' }} onClickFunction={this.onClickFunction}/>\n        </InfoWindow>\n      </Map>\n    );\n  }\n}\n\nexport default MapContainer;\n\n\n// for fixing clicking within infowindow, some resources: https://stackoverflow.com/questions/60426907/reactjs-onclick-not-triggered-on-click-of-button-inside-google-maps-marker-inf\n// https://github.com/fullstackreact/google-maps-react/issues/70\n// https://www.google.com/search?q=onclick+within+infowindow+not+working+react&rlz=1C5CHFA_enUS821US821&oq=onclick+within+infowindow+not+working+react&aqs=chrome..69i57.7600j0j7&sourceid=chrome&ie=UTF-8","import React from 'react'\nimport ContentLoader from 'react-content-loader'\n\nconst SearchDisplayLoader = props => (\n  <ContentLoader\n    speed={2}\n    width={600}\n    height={700}\n    viewBox=\"0 0 700 750\"\n    backgroundColor=\"#f5f5f5\"\n    foregroundColor=\"#dbdbdb\"\n    {...props}\n  >\n\n    <rect x=\"4\" y=\"0\" rx=\"3\" ry=\"3\" width=\"122\" height=\"26\" />\n    <rect x=\"4\" y=\"68\" rx=\"3\" ry=\"3\" width=\"7\" height=\"330\" />\n    <rect x=\"6\" y=\"390\" rx=\"3\" ry=\"3\" width=\"639\" height=\"8\" />\n    <rect x=\"640\" y=\"68\" rx=\"3\" ry=\"3\" width=\"6\" height=\"330\" />\n    <rect x=\"4\" y=\"70\" rx=\"3\" ry=\"3\" width=\"295\" height=\"325\" />\n    <rect x=\"346\" y=\"101\" rx=\"3\" ry=\"3\" width=\"231\" height=\"29\" />\n    <rect x=\"382\" y=\"183\" rx=\"3\" ry=\"3\" width=\"102\" height=\"7\" />\n    <rect x=\"372\" y=\"151\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\n    <rect x=\"375\" y=\"199\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\n    <rect x=\"386\" y=\"222\" rx=\"3\" ry=\"3\" width=\"102\" height=\"7\" />\n    <rect x=\"375\" y=\"249\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\n    <rect x=\"386\" y=\"273\" rx=\"3\" ry=\"3\" width=\"102\" height=\"7\" />\n    <rect x=\"375\" y=\"300\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\n    <rect x=\"5\" y=\"68\" rx=\"3\" ry=\"3\" width=\"639\" height=\"7\" />\n\n    <rect x=\"4\" y=\"350\" rx=\"3\" ry=\"3\" width=\"122\" height=\"26\" />\n    <rect x=\"4\" y=\"418\" rx=\"3\" ry=\"3\" width=\"7\" height=\"330\" />\n    <rect x=\"6\" y=\"740\" rx=\"3\" ry=\"3\" width=\"639\" height=\"8\" />\n    <rect x=\"640\" y=\"418\" rx=\"3\" ry=\"3\" width=\"6\" height=\"330\" />\n    <rect x=\"4\" y=\"420\" rx=\"3\" ry=\"3\" width=\"295\" height=\"325\" />\n    <rect x=\"346\" y=\"451\" rx=\"3\" ry=\"3\" width=\"231\" height=\"29\" />\n    <rect x=\"382\" y=\"533\" rx=\"3\" ry=\"3\" width=\"102\" height=\"7\" />\n    <rect x=\"372\" y=\"501\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\n    <rect x=\"375\" y=\"549\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\n    <rect x=\"386\" y=\"572\" rx=\"3\" ry=\"3\" width=\"102\" height=\"7\" />\n    <rect x=\"375\" y=\"599\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\n    <rect x=\"386\" y=\"623\" rx=\"3\" ry=\"3\" width=\"102\" height=\"7\" />\n    <rect x=\"375\" y=\"650\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\n    <rect x=\"5\" y=\"418\" rx=\"3\" ry=\"3\" width=\"639\" height=\"7\" />\n    \n  </ContentLoader>\n)\n\nexport default SearchDisplayLoader","import React from \"react\"\nimport ContentLoader from \"react-content-loader\" \n\nconst SearchDisplayMobileLoader = () => (\n  <ContentLoader \n    speed={2}\n    width={'100%'}\n    height={'100%'}\n    viewBox=\"0 0 600 1300\"\n    backgroundColor=\"#f3f3f3\"\n    foregroundColor=\"#ecebeb\"\n  >\n    <rect x=\"5\" y=\"20\" rx=\"0\" ry=\"0\" width=\"222\" height=\"50\" /> \n    <rect x=\"5\" y=\"103\" rx=\"0\" ry=\"0\" width=\"5\" height=\"800\" /> \n    <rect x=\"5\" y=\"103\" rx=\"0\" ry=\"0\" width=\"580\" height=\"5\" /> \n    <rect x=\"585\" y=\"103\" rx=\"0\" ry=\"0\" width=\"5\" height=\"800\" /> \n    <rect x=\"5\" y=\"900\" rx=\"0\" ry=\"0\" width=\"580\" height=\"5\" /> \n    <rect x=\"5\" y=\"103\" rx=\"0\" ry=\"0\" width=\"580\" height=\"450\" /> \n    <rect x=\"55\" y=\"603\" rx=\"0\" ry=\"0\" width=\"480\" height=\"40\" /> \n    <rect x=\"55\" y=\"663\" rx=\"0\" ry=\"0\" width=\"480\" height=\"20\" /> \n    <rect x=\"70\" y=\"703\" rx=\"0\" ry=\"0\" width=\"450\" height=\"20\" /> \n    <rect x=\"55\" y=\"743\" rx=\"0\" ry=\"0\" width=\"480\" height=\"20\" /> \n    <rect x=\"250\" y=\"803\" rx=\"0\" ry=\"0\" width=\"100\" height=\"50\" /> \n\n  </ContentLoader>\n)\n\nexport default SearchDisplayMobileLoader","import React from 'react';\nimport Container from 'react-bootstrap/Container'\nimport { Form, Row, InputGroup, Button, Navbar } from 'react-bootstrap';\nimport Col from 'react-bootstrap/Col'\nimport SearchCard from './SearchCard'\nimport './SearchDisplay.css'\nimport MapContainer from '../Map/MapContainer'\nimport SearchDisplayLoader from './SearchDisplayLoader'\nimport SearchDisplayLoaderMobile from './SearchDisplayLoaderMobile'\n// import Chip from '@material-ui/core/Chip';\n// import Select from '@material-ui/core/Select';\n// import MenuItem from '@material-ui/core/MenuItem';\n// import Input from '@material-ui/core/Input';\nimport { FiSearch } from 'react-icons/fi';\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\n\nclass SearchDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stores: [],\n      center: {\n        lat: 0.0,\n        lng: 0.0\n      },\n      zoom: 11,\n      mapStyles: {\n        width: '100%',\n        height: '100%'\n      },\n      center: {\n        lat: '',\n        lng: ''\n      },\n      category: [\"Nail Salon\", \"Hair Salon\", \"Facials\", \"Barbershops\"],\n      selected: [],\n      address: '',\n      distance: 1,\n      loading: true\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"this things props are: \", this.props)\n    if (this.props.location.state && this.props.location.state.stores && this.props.location.state.center) {\n      this.setState({\n        stores: this.props.location.state.stores,\n        center: this.props.location.state.center\n      })\n    }\n    else {\n      console.log(\"about to get results\")\n      let link = window.location.href.split(\"search\")\n      let query = \"\"\n\n      if (link.length > 1) {\n        query = link[1]\n      }\n\n      this.getResults(query);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location) {\n      if (this.props.location.search !== prevProps.location.search) {\n        this.getResults(this.props.location.search);\n      }\n    }\n  }\n\n  getResults(query) {\n    fetch(fetchDomain + '/stores' + query, {\n      method: \"GET\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      credentials: 'include'\n    })\n      .then(function (response) {\n        if (response.status !== 200) {\n          // should throw an error here\n          console.log(\"ERROR!\")\n        }\n        else {\n          return response.json();\n        }\n      })\n      .then(data => {\n        if (data) {\n          this.setState({\n            stores: data,\n            center: {\n              lat: data[0].lat,\n              lng: data[0].lng,\n            },\n            loading: false\n          })\n        }\n      });\n  }\n\n  render() {\n    const RenderStoreCards = (props) => {\n      return this.state.stores.map(store => (\n          <SearchCard key={\"store-\" + store.id} store={store}\n            onClickFunctionBook={() => window.location.href = '/book/' + store.id}\n            onClickFunctionStore={() => window.location.href = '/stores/' + store.id}\n          />\n      ))\n    }\n    const DisplayWithLoading = (props) => {\n      if (this.state.loading) {\n        return <Row>\n            <Col xs=\"12\">\n              <SearchDisplayLoader className={'d-none d-md-block'}/>\n              <SearchDisplayLoaderMobile className={'d-block d-md-none'}/>\n            </Col>\n          </Row>\n      } else {\n        return(<div>\n          <h3 className=\"text-left\"> {this.state.stores.length} results </h3>\n          <Row className=\"mx-0 justify-content-center search-cards-row\">\n            <RenderStoreCards/>\n          </Row>\n        </div>\n        )\n      }\n    }\n    let map = null\n    if (this.state.stores.length > 0) {\n      map = <MapContainer google={window.google}\n        stores={this.state.stores}\n        center={this.state.center}\n        zoom={this.state.zoom}\n        mapStyles={this.state.mapStyles} />\n    }\n\n    return (\n      <div>\n        <Row className=\"restrict-viewport mx-0\">\n          <Col xs={12} xl={6} className=\"px-5 my-3 h-100\">\n            <DisplayWithLoading/>\n          </Col>\n          <Col id=\"map\" xs={12} xl={6}>\n            <div className=\"position-fixed h-100 w-50 d-none d-xl-block\">\n              {map}\n            </div>\n          </Col>\n        </Row>\n      </div>\n\n    );\n  }\n}\n\nexport default SearchDisplay;\n","import React from 'react';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport './ServiceSelection.css'\nimport { Form, Button } from 'react-bootstrap';\n\nclass ServiceSelection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categories: ['Nails', 'Hair', 'Makeup', 'Eyelashes', 'Eyebrows', 'Facials', 'Skin Care']\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    let currService = this.props.services.find(x => x.name === event.target.id)\n    if (this.props.selectedServices.find(x => x.name === currService.name)) {\n      this.props.updateReservation(true, currService)\n    }\n    else {\n      this.props.updateReservation(false, currService);\n    }\n    this.setState({ [event.target.id]: !this.state[event.target.id] })\n  }\n\n  render() {\n    let that = this;\n    const ServiceCheckBoxes = (props) => {\n      if (props.services) {\n        const categories = props.categories.map((category) => {\n          return <div id={category} key={category} className=\"pl-4\">\n              <h4>{category}</h4>\n              {\n                props.services.map((service) => {\n                  if(service.category == category) {\n                    return <div key={service.name}>\n                      <Row>\n                        <Col xs='8' sm='10'>\n                          <Form.Check\n                            custom\n                            type=\"checkbox\" \n                            id={service.name}\n                            label={service.name} \n                            checked={this.props.selectedServices.find(x => x.name === service.name)}\n                            onChange={this.handleChange}\n                            className='formCustom'\n                          />\n                        </Col>\n                        <Col xs='4' sm='2'>\n                          <h5 className=\"pt-2 text-center\">${service.cost.toFixed(2)}</h5>\n                        </Col>\n                      </Row>\n                    </div>\n                  }\n                })\n              }\n            </div>\n        })\n        return categories\n      }\n      return null\n    }\n    return (\n      <Card className='py-3'>\n        <h3>Select Services</h3>\n          <Row className=\"text-left\">\n            <Col>\n              <ServiceCheckBoxes categories={this.state.categories} services={this.props.services} />\n            </Col>\n          </Row>\n          <Row className=\"justify-content-center\">\n            <Col md=\"3\">\n            <Button block onClick={this.props.handleSubmit}>Next</Button>\n            </Col>\n          </Row>\n        \n      </Card>\n      \n    );\n  }\n}\n\nexport default ServiceSelection;\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './DateSelection.css';\nimport { Form, Button } from 'react-bootstrap';\nimport store from '../../reduxFolder/store';\nimport { addAlert } from '../../reduxFolder/actions/alert'\nimport GridLoader from 'react-spinners/GridLoader'\nimport { css } from '@emotion/core'\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n`;\n\nclass DateSelection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startDate: new Date(),\n      currDate: new Date(),\n      selectedTime: 540,\n      loading: true,\n      appointments: []\n    };\n  }\n\n  handleDateChange = date => {\n    if (date.getMonth() != this.state.startDate.getMonth()) {\n      this.setState({\n        loading: true\n      })\n      fetch(fetchDomain + '/stores/' + this.props.store_id + '/appointments/month/' + (parseInt(date.getMonth()) + 1), {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      })\n        .then(function (response) {\n          if (response.status !== 200) {\n            store.dispatch(addAlert(response))\n          }\n          else {\n            return response.json()\n          }\n        })\n        .then(data => {\n          let parsedData = data.map(appointment => {\n            appointment.date = new Date(appointment.date)\n            return appointment\n          })\n          this.setState({\n            appointments: parsedData,\n            currDate: date,\n            startDate: date,\n            loading: false\n          })\n        });\n    }\n    this.setState({\n      currDate: date\n    });\n  };\n\n  handleSelectChange = (event) => {\n    this.setState({\n      selectedTime: parseInt(event.target.value)\n    });\n  };\n\n  handleSlotClick = (schedule) => {\n    this.props.updateAppointments(schedule)\n    this.props.handleSubmit()\n  }\n\n  convertMinsToHrsMins(mins) {\n    let h = Math.floor(mins / 60);\n    let m = mins % 60;\n    let am = false\n    if (h == 24) {\n      am = true\n      h -= 12\n    }\n    else if (h < 12) {\n      am = true\n    } else if (h != 12) {\n      h -= 12\n    }\n    h = h < 10 ? '0' + h : h;\n    if (h == 0) {\n      h = '12'\n    }\n    m = m < 10 ? '0' + m : m;\n    if (am) {\n      return `${h}:${m}am`;\n    } else {\n      return `${h}:${m}pm`;\n    }\n\n  }\n\n  componentDidMount() {\n    fetch(fetchDomain + '/stores/' + this.props.store_id + '/appointments/month/' + (parseInt(this.state.startDate.getMonth()) + 1), {\n      method: \"GET\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      credentials: 'include'\n    })\n      .then(function (response) {\n        if (response.status !== 200) {\n          store.dispatch(addAlert(response))\n        }\n        else {\n          return response.json()\n        }\n      })\n      .then(data => {\n        let parsedData = data.map(appointment => {\n          appointment.date = new Date(appointment.date)\n          return appointment\n        })\n        this.setState({\n          appointments: parsedData,\n          loading: false\n        })\n      });\n  }\n\n  render() {\n    const CreateTimeSelects = (props) => {\n      let items = [];\n      for (let i = this.props.storeHours[this.state.startDate.getDay()].open_time; i + this.props.time <= this.props.storeHours[this.state.startDate.getDay()].close_time; i += 60) {\n        items.push(<option key={i} value={i}>{this.convertMinsToHrsMins(i)}</option>);\n      }\n      return items;\n    }\n\n    const SlotsAtSelectedTime = () => {\n      let slots = []\n      let schedules = []\n      // Loop through different appointment start times for the day\n      for (let i = this.state.selectedTime; (i < this.state.selectedTime + 120 && i + this.props.time <= this.props.storeHours[this.state.currDate.getDay()].close_time); i += 15) {\n        let currTime = i\n        let foundSchedule = false\n        let currSchedule = []\n        let currDaySchedules = this.props.workersSchedules.filter(element => element.day_of_the_week == this.state.currDate.getDay());\n        let scheduleStillWorks = true\n        // We're going to increment through the workers that are scheduled for today and build a schedule bit by bit until we finish or realize there are no more appointments for the day\n        // Don't want to lose the original values of currTime, currService, and k when we continue ahead in our schedule\n        let currScheduleCurrTime = currTime\n        let currScheduleCurrWorkerIndex = 0\n        let currScheduleServiceIndex = 0\n        // Start building our schedule\n        while (scheduleStillWorks && !foundSchedule) {\n          let available = true\n          let currScheduleCurrService = this.props.selectedServices[currScheduleServiceIndex]\n          let currScheduleCurrWorker = currDaySchedules[currScheduleCurrWorkerIndex].worker_id\n          // Check if appointment is within worker's hours\n          if (currDaySchedules[currScheduleCurrWorkerIndex].start_time > currScheduleCurrTime || currDaySchedules[currScheduleCurrWorkerIndex].end_time < (currScheduleCurrTime + currScheduleCurrService.duration)) {\n            available = false\n          } else {\n            let currWorkerAppointments = this.state.appointments.filter(appointment => appointment.worker_id == currScheduleCurrWorker && appointment.date.setHours(0, 0, 0, 0) == this.state.currDate.setHours(0, 0, 0, 0))\n            // Check for conflicts via worker's existing appointments for the day\n            for (let m = 0; m < currWorkerAppointments.length; m++) {\n              if ((currScheduleCurrTime >= currWorkerAppointments[m].start_time && currScheduleCurrTime <= currWorkerAppointments[m].end_time) || (currScheduleCurrTime + currScheduleCurrService.duration >= currWorkerAppointments[m].start_time && currScheduleCurrTime + currScheduleCurrService.duration <= currWorkerAppointments[m].end_time)) {\n                // Worker is unavailable\n                available = false\n                break\n              }\n            }\n          }\n\n          if (available) {\n            // Add slot to the schedule we are building\n            currSchedule.push({ worker_id: currScheduleCurrWorker, service_id: currScheduleCurrService.id, start_time: currScheduleCurrTime, end_time: currScheduleCurrTime + currScheduleCurrService.duration, price: currScheduleCurrService.cost, date: this.state.startDate })\n            currScheduleCurrTime += currScheduleCurrService.duration\n            currScheduleServiceIndex += 1\n            //NOTE, will always cycle to first worker. What if we want to maintain worker for entire appointment duration? May be worth refactoring for continuity. \n            currScheduleCurrWorkerIndex = 0\n            if (currScheduleServiceIndex == this.props.selectedServices.length) {\n              //We've found a worker for each service in the appointment. We're done. \n              foundSchedule = true\n            }\n          } else if (currScheduleCurrWorkerIndex + 1 < currDaySchedules.length) {\n            // continue checking if there's another worker available for this service\n            currScheduleCurrWorkerIndex += 1\n          } else {\n            // no workers were available for this appointment. \n            // NOTE: it may be possible, in the case where there are multiple services selected for the appointment, that there is still some combination of worker slots to make this appointment work. I'm only checking linearly. This may be worth refactoring for better scheduling, but the tradeoff is increased complexity in scheduling. \n            scheduleStillWorks = false\n          }\n        }\n\n        if (foundSchedule) {\n          schedules.push(currSchedule)\n          slots.push(<Button className=\"mt-3 mx-2\" key={i} onClick={() => this.handleSlotClick(currSchedule)}>{this.convertMinsToHrsMins(i)}</Button>)\n        }\n      }\n      if (slots.length == 0) {\n        return <h1>No available appointments</h1>\n      }\n      return slots\n    }\n\n    const DisplayWithLoading = (props) => {\n      if (this.state.loading) {\n        return <Row className=\"vertical-center\">\n          <Col>\n            <GridLoader\n              css={override}\n              size={20}\n              color={\"#2196f3\"}\n              loading={this.state.isLoading}\n            />\n          </Col>\n        </Row>\n      } else {\n        return <Row className=\"justify-content-center text-xs-center text-sm-left pl-2\">\n          <Col xs=\"12\" md=\"11\" className=\"px-1\">\n            {/* Maybe want to have this with multiple rows, each row belongs to technician. One last row is technician mix to make the appointment work out */}\n            <SlotsAtSelectedTime />\n          </Col>\n        </Row>\n\n      }\n    }\n\n    return (\n      <Card\n        text='dark'\n        className='mt-0 py-3'\n      >\n        <div id=\"date-selection-form\">\n          <h3>Select Appointment Time</h3>\n          <Card.Body className='pt-0'>\n            <Row className='justify-content-center'>\n              <Col xs=\"11\" md=\"6\" className=\"mt-3\">\n                <div className=\"customDatePickerWidth\">\n                  <DatePicker\n                    className=\"form-control\"\n                    selected={this.state.currDate}\n                    onChange={this.handleDateChange}\n                    minDate={new Date()}\n                  />\n                </div>\n              </Col>\n              <Col xs=\"11\" md=\"6\" className=\"mt-3\">\n                <Form>\n                  <Form.Control as=\"select\" value={this.state.selectedTime} onChange={this.handleSelectChange.bind(this)}>\n                    <CreateTimeSelects date={this.state.startDate} />\n                  </Form.Control>\n                </Form>\n              </Col>\n            </Row>\n            <DisplayWithLoading />\n          </Card.Body>\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default DateSelection;","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport './BookingPage.css';\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport { FaEnvelope, FaUser, FaPhone } from 'react-icons/fa';\nimport { Formik } from 'formik';\nimport { Form, Button } from 'react-bootstrap';\nimport store from '../../reduxFolder/store';\nimport { addAlert } from '../../reduxFolder/actions/alert'\nimport GridLoader from 'react-spinners/GridLoader'\nimport { css } from '@emotion/core'\nimport Cookies from 'js-cookie';\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n`;\n\nclass DateSelection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: '',\n      lastName: '',\n      phone: '',\n      email: '',\n      user_id: -1,\n    };\n    this.triggerAppointmentDisplay = this.triggerAppointmentDisplay.bind(this);\n  }\n\n  // redirect to the appointment display page and pass the new store data\n  triggerAppointmentDisplay(returnedAppointment) {\n    this.props.history.push({\n      pathname: '/appointments/' + returnedAppointment,\n      state: {\n        appointmentGroupId: returnedAppointment\n      }\n    })\n  }\n\n  convertMinsToHrsMins(mins) {\n    let h = Math.floor(mins / 60);\n    let m = mins % 60;\n    let am = false\n    if (h == 24) {\n      am = true\n      h -= 12\n    }\n    else if (h < 12) {\n      am = true\n    } else if (h != 12) {\n      h -= 12\n    }\n    h = h < 10 ? '0' + h : h;\n    if (h == 0) {\n      h = '12'\n    }\n    m = m < 10 ? '0' + m : m;\n    if (am) {\n      return `${h}:${m}am`;\n    } else {\n      return `${h}:${m}pm`;\n    }\n\n  }\n\n  componentDidMount () {\n    if(Cookies.get('user')){\n      let user = JSON.parse(Cookies.get('user').substring(2))\n      this.setState({\n        firstName: user.first_name,\n        lastName: user.last_name,\n        email: user.email,\n        phone: user.phone,\n        user_id: user.id\n      })\n    }\n  }\n\n  render() {\n    const DisplayWithLoading = (props) => {\n      if (this.state.loading) {\n        return <Card\n        text='dark'\n        className='mt-0 py-3'\n      >\n        <Card.Body className='pt-0'>\n          <Row className=\"vertical-center\">\n            <Col>\n              <GridLoader\n                css={override}\n                size={20}\n                color={\"#2196f3\"}\n                loading={this.state.isLoading}\n              />\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n      } else {\n        return <Card text='dark'\n        className='mt-0 py-3' id=\"date-selection-form\">\n          <Card.Title>Book Appointment</Card.Title>\n          <Card.Body className='pt-0'>\n            <Row className='justify-content-center'>\n              <Formik\n                initialValues={{\n                  firstName: this.state.firstName,\n                  lastName: this.state.lastName,\n                  phone: this.state.phone,\n                  email: this.state.email,\n                  user_id: this.state.user_id\n                }}\n                onSubmit={(values) => {\n                  values.appointments = this.props.appointments\n                  let triggerAppointmentDisplay = this.triggerAppointmentDisplay\n\n                  fetch(fetchDomain + '/stores/' + this.props.store_id + '/appointments/new', {\n                    method: \"POST\",\n                    headers: {\n                      'Content-type': 'application/json',\n                      'Accept': 'application/json'\n                    },\n                    credentials: 'include',\n                    body: JSON.stringify(values)\n                  })\n                    .then(function (response) {\n                      if (response.status !== 200) {\n                        // throw an error alert\n                        store.dispatch(addAlert(response))\n                      }\n                      else {\n                        return response.json();\n                      }\n                    })\n                    .then(async data => {\n                      if (data) {\n                        triggerAppointmentDisplay(data)\n                      }\n                    });\n                }}\n              >\n                {({ values,\n                  errors,\n                  touched,\n                  handleChange,\n                  handleBlur,\n                  handleSubmit,\n                  setFieldValue\n                }) => (\n                    <Form className=\"form-style\">\n\n                      <Form.Group controlId=\"formFirstName\">\n                        <InputGroup>\n                          <InputGroup.Prepend>\n                            <InputGroup.Text>\n                              <FaUser />\n                            </InputGroup.Text>\n                          </InputGroup.Prepend>\n                          <Form.Control\n                            type=\"text\"\n                            name=\"firstName\"\n                            value={values.firstName}\n                            placeholder=\"First Name\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            className={touched.firstName && errors.firstName ? \"error\" : null} />\n                        </InputGroup>\n                        {touched.firstName && errors.firstName ? (\n                          <div className=\"error-message\">{errors.firstName}</div>\n                        ) : null}\n                      </Form.Group>\n\n                      <Form.Group controlId=\"formLastName\">\n                        <InputGroup>\n                          <InputGroup.Prepend>\n                            <InputGroup.Text>\n                              <FaUser />\n                            </InputGroup.Text>\n                          </InputGroup.Prepend>\n                          <Form.Control\n                            type=\"text\"\n                            name=\"lastName\"\n                            value={values.lastName}\n                            placeholder=\"Last Name\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            className={touched.lastName && errors.lastName ? \"error\" : null} />\n                        </InputGroup>\n                        {touched.lastName && errors.lastName ? (\n                          <div className=\"error-message\">{errors.lastName}</div>\n                        ) : null}\n                      </Form.Group>\n\n                      <Form.Group controlId=\"formPhone\">\n                        <InputGroup>\n                          <InputGroup.Prepend>\n                            <InputGroup.Text>\n                              <FaPhone />\n                            </InputGroup.Text>\n                          </InputGroup.Prepend>\n                          <Form.Control type=\"text\"\n                            value={values.phone}\n                            placeholder=\"Phone Number\"\n                            name=\"phone\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            className={touched.phone && errors.phone ? \"error\" : null} />\n                        </InputGroup>\n                        {touched.phone && errors.phone ? (\n                          <div className=\"error-message\">{errors.phone}</div>\n                        ) : null}\n                      </Form.Group>\n\n                      <Form.Group controlId=\"formEmail\">\n                        <InputGroup>\n                          <InputGroup.Prepend>\n                            <InputGroup.Text>\n                              <FaEnvelope />\n                            </InputGroup.Text>\n                          </InputGroup.Prepend>\n                          <Form.Control\n                            type=\"email\"\n                            value={values.email}\n                            placeholder=\"Email\"\n                            name=\"email\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            className={touched.email && errors.email ? \"error\" : null} />\n                        </InputGroup>\n                        {touched.email && errors.email ? (\n                          <div className=\"error-message\">{errors.email}</div>\n                        ) : null}\n                      </Form.Group>\n\n                      <Button onClick={handleSubmit}>Submit</Button>\n                    </Form>\n                  )}\n              </Formik>\n            </Row>\n          </Card.Body>\n        </Card>\n      }\n    }\n\n    return (\n      <DisplayWithLoading />\n    );\n  }\n}\n\nexport default DateSelection;","import React from 'react';\nimport Container from 'react-bootstrap/Container'\nimport ServiceSelection from './ServiceSelection'\nimport './ReservationPage.css'\nimport { Row, Col, Card, ListGroup } from 'react-bootstrap'\nimport { FaArrowLeft } from 'react-icons/fa'\nimport DateSelection from './DateSelection'\nimport { css } from '@emotion/core'\nimport GridLoader from 'react-spinners/GridLoader'\nimport BookingPage from './BookingPage';\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n`;\n\nclass ReservationPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      storeName: null,\n      total: 0,\n      time: 0,\n      currentStep: 1,\n      selectedServices: [],\n      services: [],\n      loading: true,\n      workers: [],\n      workersSchedules: [],\n      storeHours: []\n    };\n  }\n\n  updateReservation = (removal, currService) => {\n    if (removal) {\n      this.setState({ time: this.state.time - currService.duration })\n      this.setState({ total: this.state.total - currService.cost })\n      this.setState({\n        selectedServices: this.state.selectedServices.filter(function (selectedService) {\n          return currService.id !== selectedService.id;\n        }\n        )\n      })\n    } else {\n      this.setState({ time: this.state.time + currService.duration })\n      this.setState({ total: this.state.total + currService.cost })\n      this.setState({ selectedServices: [...this.state.selectedServices, currService] })\n    }\n  }\n\n  backStep = (event) => {\n    var newStep = this.state.currentStep - 1\n    this.setState({\n      currentStep: newStep\n    })\n  }\n\n  handleSubmit = () => {\n    if (this.state.currentStep < 4) {\n      var newStep = this.state.currentStep + 1\n      this.setState({\n        currentStep: newStep\n      })\n    } else {\n      alert(JSON.stringify(this.state));\n    }\n  }\n\n  updateAppointments = (receivedAppointments) => {\n    this.setState({\n      appointments: receivedAppointments\n    })\n  }\n\n  pluralize = (val, word, plural = word + 's') => {\n    const _pluralize = (num, word, plural = word + 's') =>\n      [1, -1].includes(Number(num)) ? word : plural;\n    if (typeof val === 'object') return (num, word) => _pluralize(num, word, val[word]);\n    return _pluralize(val, word, plural);\n  };\n\n  timeConvert = (n) => {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" \" + this.pluralize(rhours, 'hour') + \" and \" + rminutes + \" \" + this.pluralize(rminutes, 'minute');\n  }\n\n  prefetchSchedules = () => {\n    Promise.all([\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/workers/schedules', {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      }).then(value => value.json()),\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/storeHours\", {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      }).then(value => value.json())\n    ]).then(allResponses => {\n      this.setState({\n        storeHours: allResponses[1],\n        workersSchedules: allResponses[0]\n      })\n    })\n  }\n\n  componentDidMount() {\n    // need to get store category, fetch?\n    Promise.all([\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/services\", {\n      method: \"GET\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      credentials: 'include'\n    }).then(value => value.json()),\n    fetch(fetchDomain + '/stores/' + this.props.match.params.store_id, {\n      method: \"GET\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      credentials: 'include'\n    }).then(value => value.json())\n    ]).then(allResponses => {\n      const response1 = allResponses[0]\n      const response2 = allResponses[1]\n      this.setState({\n        services: response1,\n        storeName: response2.name,\n        workers: response2.workers,\n        loading: false\n      })\n    })\n\n    this.prefetchSchedules()\n  }\n\n\n\n  render() {\n    let that = this;\n    const DisplayByStep = (props) => {\n      if (this.state.loading) {\n        return <Card className=\"fullHeight\">\n          <Row className=\"vertical-center\">\n            <Col>\n              <GridLoader\n                css={override}\n                size={20}\n                color={\"#2196f3\"}\n                loading={this.state.loading}\n              />\n            </Col>\n          </Row>\n        </Card>\n      } else {\n        if (this.state.currentStep == 1) {\n          return <ServiceSelection services={this.state.services} updateReservation={this.updateReservation} selectedServices={this.state.selectedServices} time={this.state.time} total={this.state.total} handleSubmit={this.handleSubmit} timeConvert={this.timeConvert} pluralize={this.pluralize} />\n        } else if(this.state.currentStep == 2) {\n          return <DateSelection time={this.state.time}  store_id={this.props.match.params.store_id} selectedServices={this.state.selectedServices} storeHours={this.state.storeHours} workersSchedules={this.state.workersSchedules} handleSubmit={this.handleSubmit} updateAppointments={this.updateAppointments}/>\n        } else {\n          return <BookingPage appointments={this.state.appointments} store_id={this.props.match.params.store_id} history={this.props.history}/>\n        }\n      }\n    }\n\n    const DisplayBackButton = (props) => {\n      if (this.state.currentStep == 1) {\n        return null\n      } else {\n        return <FaArrowLeft size={'2em'} className=\"pt-2 pr-2\" onClick={this.backStep} />\n      }\n    }\n\n    function ServiceList(props) {\n      if (props.services) {\n        const servicesList = props.services.map((service) => {\n          return <ListGroup.Item variant=\"light\" key={service.name}>\n            <Row>\n              <Col lg={7}>\n                <Row>\n                  {service.name}\n                </Row>\n                <Row className=\"smallText\">\n                  {service.duration} {that.pluralize(service.duration, 'minute')}\n                </Row>\n              </Col>\n              <Col lg={5}>\n                <div className=\"float-right\">\n                  ${service.cost.toFixed(2)}\n                </div>\n              </Col>\n            </Row>\n          </ListGroup.Item>;\n        });\n\n        return (\n          <ListGroup variant='flush'>{servicesList}</ListGroup>\n        );\n      }\n      return null\n    }\n\n    return (\n      <Container fluid>\n        <Row noGutters className=\"pt-3 pb-0\">\n          <Col xs=\"1\">\n            <DisplayBackButton />\n          </Col>\n          <Col xs=\"11\" className=\"text-left\">\n            <h2>Step {this.state.currentStep}</h2>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={12} lg={8} className=\"largeMarginBottom\">\n            <DisplayByStep />\n          </Col>\n          <Col xs={12} lg={4} className=\"d-none d-lg-block\">\n            <Card\n              text='dark'\n              className='shoppingCart mt-0'\n            >\n              <Card.Header>Shopping Cart</Card.Header>\n              <Card.Body className='pt-0'>\n                <Row className='text-left'>\n                  <Col>\n                    <ServiceList services={this.state.selectedServices} />\n                  </Col>\n                </Row>\n\n                <h2>Total: ${this.state.total.toFixed(2)}</h2>\n                <h2>Time: {this.state.time} minutes</h2>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col xs={12} className=\"d-lg-none shoppingCartSmall px-0\">\n            <Card\n              bg='light'\n              text='dark'\n            >\n              <Card.Header className='py-1'>Shopping Cart</Card.Header>\n              <Card.Body className=\"smallPadding\">\n                <h6>{this.state.selectedServices.length} Selected {this.pluralize(this.state.selectedServices.length, 'Service')}</h6>\n                <h6>Total: ${this.state.total.toFixed(2)}</h6>\n                <h6>Time: {this.timeConvert(this.state.time)}</h6>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n\n\n      </Container>\n    );\n  }\n}\n\nexport default ReservationPage;","const fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\n// export let getPictures = async(prefixPassed) => {\n// module.exports.getPictures = async function(prefixPassed) {\n//   await getPictures(prefixPassed);\n// }\n// var getPictures = async function(prefixPassed) {\n\n// getting an export error, going to leave it for now\n\nasync function getPictures(prefixPassed) {\n  const response = await fetch(fetchDomain + '/getImages', {\n      method: \"POST\",\n      headers: {\n          'Content-type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({prefix: prefixPassed})\n    })\n  const pictures = await response.json()\n\n  return pictures\n}\n\n// function for uploading all selected files to s3\nasync function uploadHandler(prefix, selectedFiles) {\n  // upload each image to s3\n  // have to get presigned url from server before uploading directly\n  for(let i = 0; i < selectedFiles.length; i++){\n    var tempDate = new Date();\n    var date = '_' + tempDate.getFullYear() + '-' + (tempDate.getMonth()+1) + '-' + tempDate.getDate() +' '+ tempDate.getHours()+':'+ tempDate.getMinutes()+':'+ tempDate.getSeconds();\n\n    let values = {\n      fileName: prefix + selectedFiles[i].name + date, // add the current time so its unique..\n      fileType: selectedFiles[i].type\n    }\n\n    const response = await fetch(fetchDomain + '/getPresignedUrl/', {\n      method: \"POST\",\n      headers: {\n          'Content-type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify(values)\n    })\n    const url = await response.json()\n\n    const responseS3 = await fetch(url, {\n        method: \"PUT\",\n        headers: {\n            'Content-type': selectedFiles[i].type\n        },\n        body: selectedFiles[i]\n      })\n    \n    // if(responseS3.status!==200){\n    //   // throw an error alert\n    //   store.dispatch(addAlert(response))\n    // }\n  }\n}\n\n// function for uploading all selected files to s3\nasync function deleteHandler(keysPassed) {\n  // remove each image from s3\n  const response = await fetch(fetchDomain + '/deleteImages/', {\n    method: \"POST\",\n    headers: {\n        'Content-type': 'application/json'\n    },\n    credentials: 'include',\n    body: JSON.stringify({keys: keysPassed})\n  })\n}\n\nexport { getPictures, uploadHandler, deleteHandler}","import React from 'react';\nimport '../../App.css';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport { FaShoppingCart, FaRoad, FaBuilding, FaUniversity, FaGlobe, FaPen, FaPhone } from 'react-icons/fa';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport Select from 'react-select';\nimport Cookies from 'js-cookie';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {updateRole} from '../../reduxFolder/actions/user.js'\nimport {addStore} from '../../reduxFolder/actions/stores.js'\nimport {\n  addAlert\n} from '../../reduxFolder/actions/alert'\nimport store from '../../reduxFolder/store';\nimport { uploadHandler } from '../s3';\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nclass StoreSignupForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedFiles: null,\n      storeHours: [{ open_time: 540, close_time: 1020 },\n      { open_time: 540, close_time: 1020 },\n      { open_time: 540, close_time: 1020 },\n      { open_time: 540, close_time: 1020 },\n      { open_time: 540, close_time: 1020 },\n      { open_time: 540, close_time: 1020 },\n      { open_time: 540, close_time: 1020 }],\n    }\n\n    // options for store categories\n    this.options = [\n      { value: 'nails', label: 'Nails' },\n      { value: 'hair', label: 'Hair' },\n      { value: 'makeup', label: 'Makeup' },\n      { value: 'eyelashes', label: 'Eyelashes' },\n      { value: 'eyelash extensions', label: 'Eyelash Extensions' },\n      { value: 'eyebrows', label: 'Eyebrows' },\n      { value: 'facials', label: 'Facials' },\n      { value: 'skincare', label: 'Skin Care' },\n      { value: 'waxing', label: 'Waxing' },\n      { value: 'mens', label: 'Mens Services' }\n    ];\n\n    // RegEx for phone number validation\n    this.phoneRegExp = /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/\n\n    // Schema for yup\n    this.yupValidationSchema = Yup.object().shape({\n      name: Yup.string()\n        .min(2, \"Store name must have at least 2 characters\")\n        .max(100, \"Store name can't be longer than 100 characters\")\n        .required(\"Name is required\"),\n      description: Yup.string()\n        .min(20, \"Description must have at least 20 characters\")\n        .required(\"Description is required\"),\n      phone: Yup.string()\n        .matches(this.phoneRegExp, \"Phone number is not valid\")\n        .required(\"Phone number is required\"),\n      street: Yup.string()\n        .min(6, \"Street must have at least 6 characters\")\n        .max(100, \"Street can't be longer than 100 characters\")\n        .required(\"Street is required\"),\n      city: Yup.string()\n        .min(2, \"City must have at least 2 characters\")\n        .max(40, \"City can't be longer than 40 characters\")\n        .required(\"City is required\"),\n      state: Yup.string()\n        .min(2, \"State must have at least 2 characters\")\n        .max(12, \"State can't be longer than 12 characters\")\n        .required(\"State is required\"),\n      zipcode: Yup.string()\n        .max(20, \"Zipcode can't be longer than 100 characters\")\n        .required(\"Zipcode is required\"),\n      category: Yup.array()\n        .required(\"Category is required\")\n        .nullable()\n    });\n\n    this.triggerStoreDisplay = this.triggerStoreDisplay.bind(this);\n  }\n\n  // redirect to the store display page and pass the new store data\n  triggerStoreDisplay(returnedStore) {\n\n    this.props.history.push({\n      pathname: '/stores/' + returnedStore.id,\n      state: {\n        store: returnedStore\n      }\n    })\n  }\n\n  convertMinsToHrsMins(mins) {\n    let h = Math.floor(mins / 60);\n    let m = mins % 60;\n    let am = false\n    if (h == 24) {\n      am = true\n      h -= 12\n    }\n    else if (h < 12) {\n      am = true\n    } else if (h != 12) {\n      h -= 12\n    }\n    h = h < 10 ? '0' + h : h;\n    if (h == 0) {\n      h = '12'\n    }\n    m = m < 10 ? '0' + m : m;\n    if (am) {\n      return `${h}:${m}am`;\n    } else {\n      return `${h}:${m}pm`;\n    }\n\n  }\n\n\n  handleSelectChange = (event) => {\n    var days = ['formHoursMonday', 'formHoursTuesday', 'formHoursWednesday', 'formHoursThursday', 'formHoursFriday', 'formHoursSaturday', 'formHoursSunday']\n    var day = days.indexOf(event.target.id)\n    var newStoreHours = []\n\n    if (event.target.querySelector('option').value == \"0\") {\n      newStoreHours = [\n        ...this.state.storeHours.slice(0, day),\n        { open_time: parseInt(event.target.value), close_time: this.state.storeHours[day].close_time },\n        ...this.state.storeHours.slice(day + 1)\n      ]\n    } else {\n      newStoreHours = [\n        ...this.state.storeHours.slice(0, day),\n        { open_time: this.state.storeHours[day].open_time, close_time: parseInt(event.target.value) },\n        ...this.state.storeHours.slice(day + 1)\n      ]\n    }\n\n    this.setState({\n      storeHours: newStoreHours\n    })\n  };\n\n  fileChangedHandler = event => {\n    this.setState({ selectedFiles: event.target.files })\n  }\n\n  render() {\n    return (\n      <Container fluid>\n        <Row className=\"justify-content-center\">\n          <Col xs={8} sm={7} md={6} lg={5}>\n            <Formik\n              initialValues={{\n                name: '',\n                description: '',\n                phone: '',\n                street: '',\n                city: '',\n                state: '',\n                zipcode: '',\n                category: [],\n                owner_id: \"\"\n              }}\n              validationSchema={this.yupValidationSchema}\n              onSubmit={(values) => {\n                values.category = values.category.map(function (val) {\n                  return val.label;\n                })\n\n                values.owner_id = [JSON.parse(Cookies.get('user').substring(2)).id]\n                values.storeHours = this.state.storeHours\n\n\n                let triggerStoreDisplay = this.triggerStoreDisplay\n\n                fetch(fetchDomain + '/addStore', {\n                  method: \"POST\",\n                  headers: {\n                    'Content-type': 'application/json',\n                    'Accept': 'application/json'\n                  },\n                  credentials: 'include',\n                  body: JSON.stringify(values)\n                })\n                  .then(function (response) {\n                    if (response.status !== 200) {\n                      // throw an error alert\n                      store.dispatch(addAlert(response))\n                    }\n                    else {\n                      return response.json();\n                    }\n                  })\n                  .then(async data => {\n                    if (data) {\n                      let prefix = 'stores/' + data.id + '/images/'\n                      if (this.state.selectedFiles) {\n                        await uploadHandler(prefix, this.state.selectedFiles)\n                      }\n                      this.props.updateRole(1)\n                      this.props.addStore(data)\n                      triggerStoreDisplay(data)\n                    }\n                  });\n              }}\n            >\n              {({ values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                setFieldValue\n              }) => (\n                  <Form className=\"formBody rounded\">\n                    <h3>Store Sign Up</h3>\n\n                    <Form.Group controlId=\"formName\">\n                      <InputGroup>\n                        <InputGroup.Prepend>\n                          <InputGroup.Text>\n                            <FaShoppingCart />\n                          </InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"name\"\n                          value={values.name}\n                          placeholder=\"Business Name\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          className={touched.name && errors.name ? \"error\" : null} />\n                      </InputGroup>\n                      {touched.name && errors.name ? (\n                        <div className=\"error-message\">{errors.name}</div>\n                      ) : null}\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formDescription\">\n                      <InputGroup>\n                        <InputGroup.Prepend>\n                          <InputGroup.Text>\n                            <FaPen />\n                          </InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control\n                          as=\"textarea\"\n                          rows={3}\n                          name=\"description\"\n                          value={values.description}\n                          placeholder=\"Description\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          className={touched.description && errors.description ? \"error\" : null} />\n                      </InputGroup>\n                      {touched.description && errors.description ? (\n                        <div className=\"error-message\">{errors.description}</div>\n                      ) : null}\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formPhone\">\n                      <InputGroup>\n                        <InputGroup.Prepend>\n                          <InputGroup.Text>\n                            <FaPhone />\n                          </InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control type=\"text\"\n                          value={values.phone}\n                          placeholder=\"Phone Number\"\n                          name=\"phone\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          className={touched.phone && errors.phone ? \"error\" : null} />\n                      </InputGroup>\n                      {touched.phone && errors.phone ? (\n                        <div className=\"error-message\">{errors.phone}</div>\n                      ) : null}\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formStreet\">\n                      <InputGroup>\n                        <InputGroup.Prepend>\n                          <InputGroup.Text>\n                            <FaRoad />\n                          </InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control type=\"text\"\n                          value={values.street}\n                          placeholder=\"Street\"\n                          name=\"street\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          className={touched.street && errors.street ? \"error\" : null} />\n                      </InputGroup>\n                      {touched.street && errors.street ? (\n                        <div className=\"error-message\">{errors.street}</div>\n                      ) : null}\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formCity\">\n                      <InputGroup>\n                        <InputGroup.Prepend>\n                          <InputGroup.Text>\n                            <FaBuilding />\n                          </InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control type=\"text\"\n                          value={values.city}\n                          placeholder=\"City\"\n                          name=\"city\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          className={touched.city && errors.city ? \"error\" : null} />\n                      </InputGroup>\n                      {touched.city && errors.city ? (\n                        <div className=\"error-message\">{errors.city}</div>\n                      ) : null}\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formState\">\n                      <InputGroup>\n                        <InputGroup.Prepend>\n                          <InputGroup.Text>\n                            <FaUniversity />\n                          </InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control\n                          value={values.state}\n                          placeholder=\"State\"\n                          name=\"state\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          className={touched.state && errors.state ? \"error\" : null} />\n                      </InputGroup>\n                      {touched.state && errors.state ? (\n                        <div className=\"error-message\">{errors.state}</div>\n                      ) : null}\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formZipcode\">\n                      <InputGroup>\n                        <InputGroup.Prepend>\n                          <InputGroup.Text>\n                            <FaGlobe />\n                          </InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control\n                          value={values.zipcode}\n                          placeholder=\"Zipcode\"\n                          name=\"zipcode\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          className={touched.zipcode && errors.zipcode ? \"error\" : null} />\n                      </InputGroup>\n                      {touched.zipcode && errors.zipcode ? (\n                        <div className=\"error-message\">{errors.zipcode}</div>\n                      ) : null}\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formCategory\">\n                      <Select\n                        value={values.category}\n                        onChange={option => setFieldValue(\"category\", option)}\n                        name=\"category\"\n                        options={this.options}\n                        isMulti={true}\n                        placeholder={\"Category\"}\n                        className={touched.category && errors.category ? \"error\" : null}\n                      />\n                      {touched.category && errors.category ? (\n                        <div className=\"error-message\">{errors.category}</div>\n                      ) : null}\n                    </Form.Group>\n\n                    <h4>Store Hours</h4>\n\n                    <Form.Group controlId=\"formHoursMonday\">\n                      <h5 className=\"text-left\">Monday</h5>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" value={this.state.storeHours[0].open_time} onChange={this.handleSelectChange.bind(this)}>\n                            <option value={0}>{this.convertMinsToHrsMins(0)}</option>\n                            <option value={60}>{this.convertMinsToHrsMins(60)}</option>\n                            <option value={120}>{this.convertMinsToHrsMins(120)}</option>\n                            <option value={180}>{this.convertMinsToHrsMins(180)}</option>\n                            <option value={240}>{this.convertMinsToHrsMins(240)}</option>\n                            <option value={300}>{this.convertMinsToHrsMins(300)}</option>\n                            <option value={360}>{this.convertMinsToHrsMins(360)}</option>\n                            <option value={420}>{this.convertMinsToHrsMins(420)}</option>\n                            <option value={480}>{this.convertMinsToHrsMins(480)}</option>\n                            <option value={540}>{this.convertMinsToHrsMins(540)}</option>\n                            <option value={600}>{this.convertMinsToHrsMins(600)}</option>\n                            <option value={660}>{this.convertMinsToHrsMins(660)}</option>\n                            <option value={720}>{this.convertMinsToHrsMins(720)}</option>\n                            <option value={780}>{this.convertMinsToHrsMins(780)}</option>\n                            <option value={840}>{this.convertMinsToHrsMins(840)}</option>\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" value={this.state.storeHours[0].close_time} onChange={this.handleSelectChange.bind(this)}>\n                            <option value={900}>{this.convertMinsToHrsMins(900)}</option>\n                            <option value={960}>{this.convertMinsToHrsMins(960)}</option>\n                            <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\n                            <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\n                            <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\n                            <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\n                            <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\n                            <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\n                            <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\n                            <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formHoursTuesday\">\n                      <h5 className=\"text-left\">Tuesday</h5>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" value={this.state.storeHours[1].open_time} onChange={this.handleSelectChange.bind(this)}>\n                            <option value={0}>{this.convertMinsToHrsMins(0)}</option>\n                            <option value={60}>{this.convertMinsToHrsMins(60)}</option>\n                            <option value={120}>{this.convertMinsToHrsMins(120)}</option>\n                            <option value={180}>{this.convertMinsToHrsMins(180)}</option>\n                            <option value={240}>{this.convertMinsToHrsMins(240)}</option>\n                            <option value={300}>{this.convertMinsToHrsMins(300)}</option>\n                            <option value={360}>{this.convertMinsToHrsMins(360)}</option>\n                            <option value={420}>{this.convertMinsToHrsMins(420)}</option>\n                            <option value={480}>{this.convertMinsToHrsMins(480)}</option>\n                            <option value={540}>{this.convertMinsToHrsMins(540)}</option>\n                            <option value={600}>{this.convertMinsToHrsMins(600)}</option>\n                            <option value={660}>{this.convertMinsToHrsMins(660)}</option>\n                            <option value={720}>{this.convertMinsToHrsMins(720)}</option>\n                            <option value={780}>{this.convertMinsToHrsMins(780)}</option>\n                            <option value={840}>{this.convertMinsToHrsMins(840)}</option>\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" value={this.state.storeHours[1].close_time} onChange={this.handleSelectChange.bind(this)}>\n                            <option value={900}>{this.convertMinsToHrsMins(900)}</option>\n                            <option value={960}>{this.convertMinsToHrsMins(960)}</option>\n                            <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\n                            <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\n                            <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\n                            <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\n                            <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\n                            <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\n                            <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\n                            <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n\n                    <Form.Group controlId=\"formHoursWednesday\">\n                      <h5 className=\"text-left\">Wednesday</h5>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" value={this.state.storeHours[2].open_time} onChange={this.handleSelectChange.bind(this)}>\n                            <option value={0}>{this.convertMinsToHrsMins(0)}</option>\n                            <option value={60}>{this.convertMinsToHrsMins(60)}</option>\n                            <option value={120}>{this.convertMinsToHrsMins(120)}</option>\n                            <option value={180}>{this.convertMinsToHrsMins(180)}</option>\n                            <option value={240}>{this.convertMinsToHrsMins(240)}</option>\n                            <option value={300}>{this.convertMinsToHrsMins(300)}</option>\n                            <option value={360}>{this.convertMinsToHrsMins(360)}</option>\n                            <option value={420}>{this.convertMinsToHrsMins(420)}</option>\n                            <option value={480}>{this.convertMinsToHrsMins(480)}</option>\n                            <option value={540}>{this.convertMinsToHrsMins(540)}</option>\n                            <option value={600}>{this.convertMinsToHrsMins(600)}</option>\n                            <option value={660}>{this.convertMinsToHrsMins(660)}</option>\n                            <option value={720}>{this.convertMinsToHrsMins(720)}</option>\n                            <option value={780}>{this.convertMinsToHrsMins(780)}</option>\n                            <option value={840}>{this.convertMinsToHrsMins(840)}</option>\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" value={this.state.storeHours[2].close_time} onChange={this.handleSelectChange.bind(this)}>\n                            <option value={900}>{this.convertMinsToHrsMins(900)}</option>\n                            <option value={960}>{this.convertMinsToHrsMins(960)}</option>\n                            <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\n                            <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\n                            <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\n                            <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\n                            <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\n                            <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\n                            <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\n                            <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formHoursThursday\">\n                      <h5 className=\"text-left\">Thursday</h5>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" value={this.state.storeHours[3].open_time} onChange={this.handleSelectChange.bind(this)}>\n                            <option value={0}>{this.convertMinsToHrsMins(0)}</option>\n                            <option value={60}>{this.convertMinsToHrsMins(60)}</option>\n                            <option value={120}>{this.convertMinsToHrsMins(120)}</option>\n                            <option value={180}>{this.convertMinsToHrsMins(180)}</option>\n                            <option value={240}>{this.convertMinsToHrsMins(240)}</option>\n                            <option value={300}>{this.convertMinsToHrsMins(300)}</option>\n                            <option value={360}>{this.convertMinsToHrsMins(360)}</option>\n                            <option value={420}>{this.convertMinsToHrsMins(420)}</option>\n                            <option value={480}>{this.convertMinsToHrsMins(480)}</option>\n                            <option value={540}>{this.convertMinsToHrsMins(540)}</option>\n                            <option value={600}>{this.convertMinsToHrsMins(600)}</option>\n                            <option value={660}>{this.convertMinsToHrsMins(660)}</option>\n                            <option value={720}>{this.convertMinsToHrsMins(720)}</option>\n                            <option value={780}>{this.convertMinsToHrsMins(780)}</option>\n                            <option value={840}>{this.convertMinsToHrsMins(840)}</option>\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" value={this.state.storeHours[3].close_time} onChange={this.handleSelectChange.bind(this)}>\n                            <option value={900}>{this.convertMinsToHrsMins(900)}</option>\n                            <option value={960}>{this.convertMinsToHrsMins(960)}</option>\n                            <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\n                            <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\n                            <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\n                            <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\n                            <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\n                            <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\n                            <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\n                            <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n\n                    <Form.Group controlId=\"formHoursFriday\">\n                      <h5 className=\"text-left\">Friday</h5>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" value={this.state.storeHours[4].open_time} onChange={this.handleSelectChange.bind(this)}>\n                            <option value={0}>{this.convertMinsToHrsMins(0)}</option>\n                            <option value={60}>{this.convertMinsToHrsMins(60)}</option>\n                            <option value={120}>{this.convertMinsToHrsMins(120)}</option>\n                            <option value={180}>{this.convertMinsToHrsMins(180)}</option>\n                            <option value={240}>{this.convertMinsToHrsMins(240)}</option>\n                            <option value={300}>{this.convertMinsToHrsMins(300)}</option>\n                            <option value={360}>{this.convertMinsToHrsMins(360)}</option>\n                            <option value={420}>{this.convertMinsToHrsMins(420)}</option>\n                            <option value={480}>{this.convertMinsToHrsMins(480)}</option>\n                            <option value={540}>{this.convertMinsToHrsMins(540)}</option>\n                            <option value={600}>{this.convertMinsToHrsMins(600)}</option>\n                            <option value={660}>{this.convertMinsToHrsMins(660)}</option>\n                            <option value={720}>{this.convertMinsToHrsMins(720)}</option>\n                            <option value={780}>{this.convertMinsToHrsMins(780)}</option>\n                            <option value={840}>{this.convertMinsToHrsMins(840)}</option>\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" value={this.state.storeHours[4].close_time} onChange={this.handleSelectChange.bind(this)}>\n                            <option value={900}>{this.convertMinsToHrsMins(900)}</option>\n                            <option value={960}>{this.convertMinsToHrsMins(960)}</option>\n                            <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\n                            <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\n                            <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\n                            <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\n                            <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\n                            <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\n                            <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\n                            <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formHoursSaturday\">\n                      <h5 className=\"text-left\">Saturday</h5>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" value={this.state.storeHours[5].open_time} onChange={this.handleSelectChange.bind(this)}>\n                            <option value={0}>{this.convertMinsToHrsMins(0)}</option>\n                            <option value={60}>{this.convertMinsToHrsMins(60)}</option>\n                            <option value={120}>{this.convertMinsToHrsMins(120)}</option>\n                            <option value={180}>{this.convertMinsToHrsMins(180)}</option>\n                            <option value={240}>{this.convertMinsToHrsMins(240)}</option>\n                            <option value={300}>{this.convertMinsToHrsMins(300)}</option>\n                            <option value={360}>{this.convertMinsToHrsMins(360)}</option>\n                            <option value={420}>{this.convertMinsToHrsMins(420)}</option>\n                            <option value={480}>{this.convertMinsToHrsMins(480)}</option>\n                            <option value={540}>{this.convertMinsToHrsMins(540)}</option>\n                            <option value={600}>{this.convertMinsToHrsMins(600)}</option>\n                            <option value={660}>{this.convertMinsToHrsMins(660)}</option>\n                            <option value={720}>{this.convertMinsToHrsMins(720)}</option>\n                            <option value={780}>{this.convertMinsToHrsMins(780)}</option>\n                            <option value={840}>{this.convertMinsToHrsMins(840)}</option>\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" value={this.state.storeHours[5].close_time} onChange={this.handleSelectChange.bind(this)}>\n                            <option value={900}>{this.convertMinsToHrsMins(900)}</option>\n                            <option value={960}>{this.convertMinsToHrsMins(960)}</option>\n                            <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\n                            <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\n                            <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\n                            <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\n                            <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\n                            <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\n                            <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\n                            <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n\n                    <Form.Group controlId=\"formHoursSunday\">\n                      <h5 className=\"text-left\">Sunday</h5>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" value={this.state.storeHours[6].open_time} onChange={this.handleSelectChange.bind(this)}>\n                            <option value={0}>{this.convertMinsToHrsMins(0)}</option>\n                            <option value={60}>{this.convertMinsToHrsMins(60)}</option>\n                            <option value={120}>{this.convertMinsToHrsMins(120)}</option>\n                            <option value={180}>{this.convertMinsToHrsMins(180)}</option>\n                            <option value={240}>{this.convertMinsToHrsMins(240)}</option>\n                            <option value={300}>{this.convertMinsToHrsMins(300)}</option>\n                            <option value={360}>{this.convertMinsToHrsMins(360)}</option>\n                            <option value={420}>{this.convertMinsToHrsMins(420)}</option>\n                            <option value={480}>{this.convertMinsToHrsMins(480)}</option>\n                            <option value={540}>{this.convertMinsToHrsMins(540)}</option>\n                            <option value={600}>{this.convertMinsToHrsMins(600)}</option>\n                            <option value={660}>{this.convertMinsToHrsMins(660)}</option>\n                            <option value={720}>{this.convertMinsToHrsMins(720)}</option>\n                            <option value={780}>{this.convertMinsToHrsMins(780)}</option>\n                            <option value={840}>{this.convertMinsToHrsMins(840)}</option>\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" value={this.state.storeHours[6].close_time} onChange={this.handleSelectChange.bind(this)}>\n                            <option value={900}>{this.convertMinsToHrsMins(900)}</option>\n                            <option value={960}>{this.convertMinsToHrsMins(960)}</option>\n                            <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\n                            <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\n                            <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\n                            <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\n                            <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\n                            <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\n                            <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\n                            <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formPictures\">\n                      <input\n                        onChange={this.fileChangedHandler}\n                        type=\"file\"\n                        multiple\n                        className={touched.pictures && errors.pictures ? \"error\" : null}\n                      />\n                      {touched.pictures && errors.pictures ? (\n                        <div className=\"error-message\">{errors.pictures}</div>\n                      ) : null}\n                    </Form.Group>\n\n                    <Button onClick={handleSubmit}>Submit</Button>\n                  </Form>\n                )}\n            </Formik>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  updateRole: (role) => updateRole(role),\n  addStore: (store) => addStore(store),\n}, dispatch)\n\n\nexport default connect(null, mapDispatchToProps)(StoreSignupForm);\n","import React from 'react';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport './CalendarPage.css';\nimport {  Resources, ConfirmationDialog, Scheduler, AppointmentForm, AppointmentTooltip, DateNavigator,TodayButton, DayView, WeekView, MonthView, Appointments, ViewSwitcher, Toolbar,  DragDropProvider} from '@devexpress/dx-react-scheduler-material-ui';\nimport { ViewState, EditingState, IntegratedEditing } from '@devexpress/dx-react-scheduler';\nimport 'react-calendar/dist/Calendar.css';\nimport Paper from '@material-ui/core/Paper';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport { FiSearch} from 'react-icons/fi';\nimport { withRouter } from \"react-router\"\n\nconst today = new Date();\n\n//new Date(2018, 6, 1, 10, 0) start and end dates\n\nconst isWeekEnd = (date: Date): boolean => date.getDay() === 0 || date.getDay() === 6;\n\n\n\nconst Root = ({\n  children, style, ...restProps\n}) => (\n  <div\n    {...restProps}\n    style={{\n      ...style,\n      width: '1000px',\n    }}\n  >\n    {children}\n  </div>\n);\n\n\nconst DayScaleCell = ({\n  startDate, classes, ...restProps\n}: DayScaleCellProps) => (\n  <MonthView.DayScaleCell\n    // className={classNames({\n    //   [classes.weekEndDayScaleCell]: isWeekEnd(startDate),\n    // })}\n    className={isWeekEnd(startDate) ? 'weekend' : null}\n\n    // style={isWeekEnd(startDate) ? 'background-color: grey' : 'background-color: white'}\n    startDate={startDate}\n    {...restProps}\n  />\n);\n\nconst TimeTableCell = (\n  { startDate, classes, ...restProps }: TimeTableCellProps,\n) => (\n  <MonthView.TimeTableCell\n    className={isWeekEnd(startDate) ? 'weekend' : null}\n\n    startDate={startDate}\n    {...restProps}\n  />\n);\nconst recurringIcon = () => <div />\n\nconst BasicLayout = ({ appointmentData, onFieldChange,\n   ...restProps }) => {\n\n   const onCustomFieldChange = (nextValue) => {\n     onFieldChange({ price: nextValue });\n   };\n\n  return (\n    <AppointmentForm.BasicLayout\n      onFieldChange={onFieldChange}\n      appointmentData={appointmentData}\n      {...restProps}\n    >\n\n    <AppointmentForm.Label\n       text=\"Price\"\n       type=\"title\"\n     />\n     <Row className=\"justify-content-center\">\n     <AppointmentForm.TextEditor\n      style={{width: '50%'}}\n       value={appointmentData.price}\n       onValueChange={onCustomFieldChange}\n       placeholder=\"Price\"\n     />\n     <AppointmentForm.Label\n        style={{marginTop: 15, marginLeft: 10, fontSize: 20}}\n        text=\"$\"\n        type=\"text\"\n      />\n      </Row>\n    </AppointmentForm.BasicLayout>\n  );\n};\n\nconst messages = {\n  allDayLabel : '',\n  repeatLabel : ''\n}\n\nconst BooleanEditor = ({\n...restProps }) => {\n  // eslint-disable-next-line react/destructuring-assignment\n  // console.log(restProps);\n\nreturn null;\n  // if (restProps.type === 'endRepeat') {\n  //   console.log(\"BO\");\n  //   return null;\n  //\n  // } else {console.log(\"HELO\"); return <AppointmentForm.WeeklyRecurrenceSelectorComponent readOnly={true} {...restProps} />};\n};\n\nconst ResourceSwitcher = ({ styles,\n    mainResourceName, onChange, classes, resources,\n  }) => (\n    <div >\n      <Row className=\"justify-content-center text-xs-center text-sm-left pl-2\">\n      <p style={{fontSize: 20, marginRight:10, marginTop:2}}>\n        Filter By:\n      </p>\n      <Select\n        value={mainResourceName}\n        onChange={e => onChange(e.target.value)}\n        style={{paddingLeft: 60, height: 35}}\n      >\n        {resources.map(resource => (\n          <MenuItem key={resource.fieldName} value={resource.fieldName}>\n            {resource.title}\n          </MenuItem>\n        ))}\n      </Select>\n      </Row>\n    </div>\n\n  );\n\n\nconst RecurrenceLayout = ({\n  appointmentData,\n  visible,\n  ...restProps }) => {\n\n  return  (\n    <AppointmentForm.RecurrenceLayout\n      appointmentData={appointmentData}\n      visible={false}\n      {...restProps}\n    >\n\n    </AppointmentForm.RecurrenceLayout>\n  );\n\n};\n\nconst Appointment = ({\n  children, style,\n  ...restProps\n}) => {\n  // console.log(restProps);\n  return (\n    <Appointments.Appointment\n      {...restProps}\n      style={{\n        ...style,\n        backgroundColor: '#597096',\n        borderRadius: '5px',\n\n      }}\n\n    >\n      {children}\n    </Appointments.Appointment>\n  );\n}\n\nclass Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n       this.state = {\n         services: [],\n         workers: [],\n         worker_map: {},\n         service_map: {},\n         selectedWorkers: [],\n         selectedServices: [],\n         selectedAppointments: [\n           // { id: '0', startDate: '2020-04-19 15:00', endDate: '2020-04-19 16:00', title: 'Manicure', workers: [2],\n           // services: [2], price: 50},\n           // { id: '1', startDate: '2020-04-21 09:00', endDate: '2020-04-21 11:00', title: 'Hair Blowout', workers: [0, 1],\n           // services: [1], price: 20},\n         ],\n         appointments: [\n           // { id: '0', startDate: '2020-04-19 15:00', endDate: '2020-04-19 16:00', title: 'Manicure', workers: [2],\n           // services: [2], price: 50},\n           // { id: '1', startDate: '2020-04-21 09:00', endDate: '2020-04-21 11:00', title: 'Hair Blowout', workers: [0, 1],\n           //  services: [1], price: 20},\n         ],\n         mainResourceName: 'workers',\n          resources: [\n            {\n              fieldName: 'services',\n              title: 'Services',\n              allowMultiple: true,\n              instances: [\n                // { id: 1, text: 'Haircut' },\n                // { id: 2, text: 'Manicure' },\n\n              ],\n            },\n            {\n              fieldName: 'workers',\n              title: 'Workers',\n              allowMultiple: true,\n              instances: [\n                // { id: 0, text: 'Artin Kasumyan' },\n                // { id: 1, text: 'Arthur Kasumyan' },\n                // { id: 2, text: 'Roula Sharqawe' },\n                // { id: 3, text: 'George Clooney' },\n                // { id: 4, text: 'Johnny Depp' },\n              ],\n            },\n          ],\n         currentDate: today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate()\n       }\n       this.commitChanges = this.commitChanges.bind(this);\n       this.changeMainResource = this.changeMainResource.bind(this);\n       this.onSelectWorker = this.onSelectWorker.bind(this);\n       this.onRemoveWorker = this.onRemoveWorker.bind(this);\n       this.onSelectService = this.onSelectService.bind(this);\n       this.onRemoveService = this.onRemoveService.bind(this);\n       this.onSearch = this.onSearch.bind(this);\n  }\n\n    getAppointments = () => {\n\n        fetch('http://localhost:8081/stores/' + this.props.match.params.store_id + '/appointments' , {\n          method: \"GET\",\n          headers: {\n            'Content-type': 'application/json'\n          },\n          credentials: 'include'\n        }).then(value => value.json())\n        .then(data => {\n\n          let appointments = []\n\n          data.map((appointment, indx) => {\n\n              let date = new Date(appointment.date);\n              let startDate = new Date(date.getFullYear(), date.getMonth(), date.getDate(), appointment.start_time, 0);\n              let endDate = new Date(date.getFullYear(), date.getMonth(), date.getDate(), appointment.end_time, 0);\n\n              console.log(startDate)\n\n              appointments.push({\n                id: indx,\n                title: appointment.title,\n                workers: [this.state.worker_map[appointment.worker_id]],\n                services: [this.state.service_map[appointment.service_id]],\n                price: appointment.price,\n                startDate: startDate,\n                endDate: endDate\n              })\n\n              this.setState({\n                appointments: appointments,\n                selectedAppointments: appointments\n\n              })\n\n            })\n        })\n    }\n\n    async componentDidMount() {\n      let store_id = this.props.match.params.store_id\n      let workers = []\n      let services = []\n      let new_workers = []\n      let new_services = []\n\n      //fetching  workers and services\n      if(this.props.location.state && this.props.location.state.services) {\n        let service_map = {}\n        let service_instances = []\n\n        this.props.location.state.services.map((service, indx) => {\n          service_instances.push({id: indx, text: service.name})\n          service_map[service.id] = service.name\n        })\n\n        this.setState({\n          services: this.props.location.state.store.services,\n          service_map: service_map\n        })\n      }\n      else {\n\n          await fetch('http://localhost:8081/stores/' + store_id + \"/services\", {\n          method: \"GET\",\n          headers: {\n            'Content-type': 'application/json'\n          },\n          credentials: 'include'\n        }).then(function (response) {\n            if (response.status !== 200) {\n              // throw an error alert\n              console.log(\"error\")\n            }\n            else {\n              return response.json();\n            }\n          })\n          .then(async data => {\n            if (data) {\n              services = data;\n              let service_instances = []\n              let service_map = {}\n              console.log(\"here!!\", services);\n\n              services.map((service, indx) => {\n                    service_instances.push({id: indx, text: service.name})\n                    service_map[service.id] = service.name\n              })\n\n              this.setState({\n                  services: services,\n                  service_map: service_map\n              })\n\n              // return new_services;\n            }\n          });\n\n      }\n\n      if(this.props.location.state && this.props.location.state.workers){\n        let worker_instances = []\n        let worker_map = {}\n        this.props.location.state.workers.map((worker, indx) => {\n            worker_instances.push({id: indx, text: worker.first_name + ' ' + worker.last_name})\n            worker_map[worker.id] = worker.first_name + ' ' + worker.last_name\n        })\n        this.setState({\n          workers: worker_instances,\n          worker_map: worker_map\n        })\n      } \n      else{\n\n\n        await fetch('http://localhost:8081/stores/' + store_id + '/workers_list', {\n          method: \"GET\",\n          headers: {\n            'Content-type': 'application/json'\n          },\n          credentials: 'include'\n        }).then(function (response) {\n            if (response.status !== 200) {\n              // throw an error alert\n              console.log(\"error\")\n            }\n            else {\n              return response.json();\n            }\n          })\n          .then(async data => {\n            if (data) {\n              workers = data;\n              console.log(\"here\", workers);\n              let worker_instances = []\n              let worker_map = {}\n              workers.map((worker, indx) => {\n                  worker_instances.push({id: indx, text: worker.first_name + ' ' + worker.last_name})\n                  worker_map[worker.id] = worker.first_name + ' ' + worker.last_name\n              })\n              this.setState({\n                workers: worker_instances,\n                worker_map: worker_map\n              })\n            }\n          });\n\n      }\n\n      new_services = this.state.resources[0]\n      new_services.instances = this.state.services;\n      new_workers = this.state.resources[1]\n      new_workers.instances = this.state.workers;\n\n      this.setState({\n        resources: [new_services, new_workers]\n      })\n\n      this.getAppointments();\n\n    }\n\n  changeMainResource(mainResourceName) {\n    this.setState({ mainResourceName });\n  }\n\n  onSelectWorker(selectedList, selectedItem) {\n    // console.log(selectedList, selectedItem)\n    this.setState({ selectedWorkers: selectedList });\n  }\n\n  onRemoveWorker(selectedList, removedItem) {\n    // console.log(\"remove\", selectedList, removedItem);\n    this.setState({ selectedWorkers: selectedList });\n  }\n\n  onSelectService(selectedList, selectedItem) {\n    this.setState({ selectedServices: selectedList });\n  }\n\n  onRemoveService(selectedList, removedItem) {\n    this.setState({ selectedServices: selectedList });\n  }\n\n  onSearch() {\n\n    let includeWorker;\n    let includeService;\n    let newSelected = [];\n\n    this.state.appointments.map(appointment => {\n      includeWorker = (this.state.selectedWorkers.length==0) ? true : false;\n      includeService= (this.state.selectedServices.length==0) ? true : false;\n\n      this.state.selectedWorkers.map(worker => {\n\n        if(appointment.workers.includes(worker.id)) {\n          includeWorker = true;\n        }\n      })\n      this.state.selectedServices.map(service => {\n\n        if(appointment.services.includes(service.id)) {\n          includeService = true;\n        }\n      })\n\n      if(includeService && includeWorker) {\n        newSelected.push(appointment);\n      }\n    })\n    this.setState({ selectedAppointments: newSelected });\n  }\n\n\n  commitChanges({ added, changed, deleted }) {\n    this.setState((state) => {\n      let { selectedAppointments } = state;\n      let appointments = selectedAppointments;\n      if (added) {\n        const startingAddedId = appointments.length > 0 ? appointments[appointments.length - 1].id + 1 : 0;\n        appointments = [...appointments, { id: startingAddedId, ...added }];\n      }\n      if (changed) {\n        appointments = appointments.map(appointment => (\n          changed[appointment.id] ? { ...appointment, ...changed[appointment.id] } : appointment));\n      }\n      if (deleted !== undefined) {\n        appointments = appointments.filter(appointment => appointment.id !== deleted);\n      }\n      return { appointments };\n    });\n  }\n\n\n\n  render() {\n\n    console.log(this.state.selectedAppointments);\n    return (\n      <Container fluid>\n        <Row className=\"justify-content-center\">\n          <Col>\n            <p className=\"title\"> Manage Your Appointments </p>\n            <Row style={{marginBottom: 50, marginLeft: '22%', position: 'relative'}}>\n            <Multiselect\n              // isObject={false}\n              options={this.state.resources[0][\"instances\"]}\n              // selectedValues={this.state.selected}\n              onSelect={this.onSelectService}\n              onRemove={this.onRemoveService}\n              placeholder=\"Service\"\n              closeIcon=\"cancel\"\n              displayValue=\"text\"\n              style={{multiselectContainer: {marginLeft: '2%', width: '35%'},  groupHeading:{width: 50, maxWidth: 50}, chips: { background: \"#587096\", height: 35 }, inputField: {color: 'black'}, searchBox: { minWidth: 250, width: '100%', height: '30', backgroundColor: 'white', borderRadius: \"5px\" }} }\n              />\n            <Multiselect\n                // isObject={false}\n                options={this.state.resources[1][\"instances\"]}\n                // selectedValues={this.state.selected}\n                onSelect={this.onSelectWorker}\n                onRemove={this.onRemoveWorker}\n                placeholder=\"Workers\"\n                closeIcon=\"cancel\"\n                displayValue=\"text\"\n                style={{multiselectContainer: {marginLeft: '2%', width: '35%'},  optionContainer:{ zIndex: 10000000}, chips: { background: \"#587096\", height: 35 }, inputField: {color: 'black'}, searchBox: { minWidth: 250, width: '100%', height: '30', backgroundColor: 'white', borderRadius: \"5px\" }} }\n              />\n              <FiSearch onClick={this.onSearch} size={35} style={{cursor: \"pointer\", marginLeft: 10, paddingRight:\"10px\"}}/>\n            </Row>\n\n           <Paper className=\"react-calendar\">\n          <Scheduler\n            data={this.state.selectedAppointments}\n\n          >\n          <ViewState\n            defaultCurrentDate={this.state.currentDate}\n\n          />\n          <EditingState\n           onCommitChanges={this.commitChanges}\n         />\n         <IntegratedEditing />\n\n            <WeekView\n             startDayHour={8}\n             endDayHour={24}\n             cellDuration={60}\n           />\n           <MonthView\n             dayScaleCellComponent={DayScaleCell}\n             timeTableCellComponent={TimeTableCell}\n          />\n          <DayView\n            startDayHour={8}\n            endDayHour={24}\n            cellDuration={60}\n          />\n\n            <Toolbar />\n            <ViewSwitcher />\n            <DateNavigator/>\n            <TodayButton />\n            <ConfirmationDialog />\n            <Appointments\n            appointmentComponent={Appointment}/>\n            <AppointmentTooltip\n            showCloseButton\n            showOpenButton/>\n            <AppointmentForm\n            isRecurrence={false}\n            basicLayoutComponent={BasicLayout}\n            recurrenceLayoutComponent={RecurrenceLayout}\n            // textEditorComponent={TextEditor}\n            messages={messages}\n            booleanEditorComponent={BooleanEditor}\n            />\n            <Resources\n              data={this.state.resources}\n              // mainResourceName={this.state.mainResourceName}\n              />\n            <DragDropProvider/>\n          </Scheduler>\n          </Paper>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(Calendar);\n\n// <ResourceSwitcher\n//  resources={this.state.resources}\n//  mainResourceName={this.state.mainResourceName}\n//  onChange={this.changeMainResource}\n// />\n","import React from 'react';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport LargeCarousel from '../LargeCarousel';\nimport { Button } from 'react-bootstrap';\nimport Cookies from 'js-cookie';\nimport { withRouter } from \"react-router-dom\";\nimport {\n  addAlert\n} from '../../reduxFolder/actions/alert'\nimport store from '../../reduxFolder/store';\nimport './StoreDisplay.css'\n// import { getPictures } from '../s3'\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nclass StoreDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      store: {\n        id: \"\",\n        name: \"\",\n        street: \"\",\n        city: \"\",\n        state: \"\",\n        zipcode: \"\",\n        created_at: \"\",\n        category: [],\n        services: [],\n        workers: [],\n        owners: [],\n        phone: \"\",\n        clients: [],\n        description: \"\",\n        lat: \"\",\n        lng: \"\"\n      },\n      pictures: []\n    }\n  }\n\n  triggerStoreEdit() {\n    this.props.history.push({\n      pathname: '/stores/edit/' + this.props.match.params.store_id,\n      state: this.state\n    })\n  }\n\n  triggerBook() {\n    this.props.history.push({\n      pathname: '/book/' + this.props.match.params.store_id,\n      state: this.state\n    })\n  }\n\n  componentDidMount() {\n    // if we were passed the store data from calling component\n    if(this.props.location.state && this.props.location.state.store){\n      let convertedCategory = this.props.location.state.store.category.map((str) => ({ value: str.toLowerCase(), label: str }));\n      this.setState({\n        store: this.props.location.state.store,\n        selectedOption: convertedCategory\n      })\n    }\n    else{\n      // retrieve the store data from the database\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id , {\n        method: \"GET\",\n        headers: {\n            'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      })\n      .then(function(response){\n        if(response.status!==200){\n          // throw an error alert\n          store.dispatch(addAlert(response))\n        }\n        else{\n          return response.json();\n        }\n      })\n      .then(data => {\n        if(data){\n          let convertedCategory = data.category.map((str) => ({ value: str.toLowerCase(), label: str }));\n          this.setState({\n            store: data,\n            selectedOption: convertedCategory\n          })\n        }\n      });\n    }\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (prevState.store !== this.state.store) {\n      // let picturesFetched = await getPictures('stores/' + this.state.store.id + '/images/')\n      // this.setState({\n      //   pictures: picturesFetched\n      // })\n      \n      // can put this for now so we don't have to upload to s3\n      this.setState({\n        pictures: [\n          { \n            url: \"/hair.jpg\",\n            key: \"/hair.jpg\"\n          },\n          {\n            url: \"/nails.jpg\",\n            key: \"/nails.jpg\"\n          },\n          {\n            url: \"/salon.jpg\",\n            key: \"/salon.jpg\"\n          }\n        ]\n      })\n    }\n  }\n\n  render() {\n    let editButton;\n    if(Cookies.get('user') && this.state.store.owners.indexOf(JSON.parse(Cookies.get('user').substring(2)).id) > -1){\n      editButton = <Button className=\"float-left\" onClick={() =>  this.triggerStoreEdit()}>Edit Store</Button>\n    }\n\n    return (\n      <Container fluid>\n        <Row className=\"justify-content-md-center\" style={{ marginTop: '15px', marginBottom: '15px'}}>\n          <Col lg={3}>\n            <h1>{this.state.store.name}</h1>\n            <h5 style={{color: \"gray\"}}>{this.state.store.street}, {this.state.store.city}, {this.state.store.state}, {this.state.store.zipcode}</h5>\n            <hr/>\n            <p style={{fontSize: \"25px\"}}>{this.state.store.description}</p>\n            <ul>\n              {this.state.store.category.map((cat, index) => (\n                <li key={\"cat-\" + index}>{cat}</li>\n              ))}\n            </ul>\n            <div id=\"buttonGroup\">\n              {editButton}\n              <Button className=\"float-left\" onClick={() =>  this.triggerBook()}>Book Now</Button>\n            </div>\n          </Col>\n          <Col xs={10} sm={9} md={8} lg={7}>\n            <LargeCarousel className=\"carousel\" pictures={this.state.pictures}/>\n          </Col>\n        </Row>\n        <Row>\n          {/* <WorkerDisplay/> */}\n        </Row>\n        <Row>\n          {/* <ServiceDisplay/> */}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(StoreDisplay);","import React from 'react';\nimport '../../App.css';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport GridLoader from 'react-spinners/GridLoader'\nimport { FaShoppingCart, FaRoad, FaBuilding, FaUniversity, FaGlobe, FaPen, FaPhone } from 'react-icons/fa';\nimport { Formik } from 'formik';\nimport { css } from '@emotion/core'\nimport * as Yup from 'yup';\nimport Select from 'react-select';\nimport {\n  addAlert\n} from '../../reduxFolder/actions/alert'\nimport store from '../../reduxFolder/store';\nimport { getPictures, deleteHandler, uploadHandler } from '../s3'\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n`;\n\nclass StoreEditForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      store: {\n        // pictures: [],\n        name: \"\",\n        description: \"\",\n        phone: \"\",\n        id: \"\",\n        street: \"\",\n        city: \"\",\n        state: \"\",\n        zipcode: \"\",\n        category: []\n      },\n      storeHours: [],\n      newHours: [],\n      selectedOption: null,\n      loading: true,\n      pictures: [],\n      selectedFiles: [],\n      keys: []\n    };\n\n    // options for the categories field\n    this.options = [\n      { value: 'nails', label: 'Nails' },\n      { value: 'hair', label: 'Hair' },\n    ];\n\n    // RegEx for phone number validation\n    this.phoneRegExp = /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/\n\n    // Schema for yup\n    this.yupValidationSchema = Yup.object().shape({\n      name: Yup.string()\n        .min(2, \"Store name must have at least 2 characters\")\n        .max(100, \"Store name can't be longer than 100 characters\")\n        .required(\"Name is required\"),\n      description: Yup.string()\n        .min(20, \"Description must have at least 20 characters\")\n        .required(\"Description is required\"), // will make it required soon\n      phone: Yup.string()\n        .matches(this.phoneRegExp, \"Phone number is not valid\")\n        .required(\"Phone number is required\"),\n      street: Yup.string()\n        .min(6, \"Street must have at least 6 characters\")\n        .max(100, \"Street can't be longer than 100 characters\")\n        .required(\"Street is required\"),\n      city: Yup.string()\n        .min(2, \"City must have at least 2 characters\")\n        .max(40, \"City can't be longer than 40 characters\")\n        .required(\"City is required\"),\n      state: Yup.string()\n        .min(2, \"State must have at least 2 characters\")\n        .max(12, \"State can't be longer than 12 characters\")\n        .required(\"State is required\"),\n      zipcode: Yup.string()\n        .max(20, \"Zipcode can't be longer than 100 characters\")\n        .required(\"Zipcode is required\"),\n      category: Yup.array()\n        .required(\"Category is required\")\n        .nullable(),\n      pictureCount: Yup.number()\n        .required(\"Pictures are required\")\n        .min(1, \"Must have at least one picture\")\n    });\n\n    this.triggerStoreDisplay = this.triggerStoreDisplay.bind(this);\n  }\n\n  // redirect to the store display page and pass the new store data\n  triggerStoreDisplay(returnedStore) {\n    this.props.history.push({\n      pathname: '/stores/' + this.props.match.params.store_id,\n      state: {\n        store: returnedStore\n      }\n    })\n  }\n\n  convertMinsToHrsMins(mins) {\n    let h = Math.floor(mins / 60);\n    let m = mins % 60;\n    let am = false\n    if (h == 24) {\n      am = true\n      h -= 12\n    }\n    else if (h < 12) {\n      am = true\n    } else if (h != 12) {\n      h -= 12\n    }\n    h = h < 10 ? '0' + h : h;\n    if(h == 0) {\n      h = '12'\n    }\n    m = m < 10 ? '0' + m : m;\n    if (am) {\n      return `${h}:${m}am`;\n    } else {\n      return `${h}:${m}pm`;\n    }\n\n  }\n\n  handleSelectChange = (event) => {\n    var days = ['formHoursMonday', 'formHoursTuesday', 'formHoursWednesday', 'formHoursThursday', 'formHoursFriday', 'formHoursSaturday', 'formHoursSunday']\n    var day = days.indexOf(event.target.id)\n    var updateNewHours = this.state.newHours\n    var old_open_time = 0\n    var old_close_time = 0\n    var newStoreHours = []\n    if(this.state.newHours[day]) {\n      old_open_time = this.state.newHours[day].open_time\n      old_close_time = this.state.newHours[day].close_time\n    } else {\n      old_open_time = this.state.storeHours[day].open_time\n      old_close_time = this.state.storeHours[day].close_time\n    }\n    if(parseInt(event.target.querySelector('option').value) <= 840) {\n      updateNewHours[day] = {open_time: parseInt(event.target.value), close_time: old_close_time}\n      newStoreHours = [\n        ...this.state.storeHours.slice(0, day),\n        {open_time: parseInt(event.target.value), close_time: old_close_time},\n        ...this.state.storeHours.slice(day + 1)\n      ]\n    } else {\n      updateNewHours[day] = {open_time: old_open_time, close_time: parseInt(event.target.value)}\n      newStoreHours = [\n        ...this.state.storeHours.slice(0, day),\n        {open_time: old_open_time, close_time: parseInt(event.target.value)},\n        ...this.state.storeHours.slice(day + 1)\n      ]\n    }\n    \n    this.setState({\n      newHours: updateNewHours,\n      storeHours: newStoreHours\n    })\n  };\n\n  deleteFileChangeHandler = async (event, setFieldValue, newPictureLength) => {\n    if(event.target.checked){\n      await this.state.keys.push(event.target.id)\n      console.log(this.state.pictures.length, newPictureLength, this.state.keys.length)\n      setFieldValue('pictureCount', this.state.pictures.length + newPictureLength - this.state.keys.length)\n    }\n    else{\n      await this.state.keys.pop(event.target.id)\n      console.log(this.state.pictures.length, newPictureLength, this.state.keys.length)\n      setFieldValue('pictureCount', this.state.pictures.length + newPictureLength - this.state.keys.length)\n    }\n  }\n\n  fileChangedHandler = (event, setFieldValue, pictures) => {\n    this.setState({ selectedFiles: event.target.files })\n    setFieldValue('pictureCount', this.state.pictures.length + event.target.files.length - this.state.keys.length)\n    setFieldValue('pictures', event.target.files)\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (prevState.store !== this.state.store) {\n      let picturesFetched = await getPictures('stores/' + this.state.store.id + '/images/')\n      this.setState({\n        pictures: picturesFetched\n      })\n    }\n\n    // can put this for now so we don't have to upload to s3\n    // this.setState({\n      // pictures: [\n      //   { \n      //     url: \"/hair.jpg\",\n      //     key: \"/hair.jpg\"\n      //   },\n      //   {\n      //     url: \"/nails.jpg\",\n      //     key: \"/nails.jpg\"\n      //   },\n      //   {\n      //     url: \"/salon.jpg\",\n      //     key: \"/salon.jpg\"\n      //   }\n      // ]\n    // })\n  }\n\n  componentDidMount() {\n    // if we were given the existing data from calling component use that, else fetch\n    // check if categories are empty, if they are then cache/store needs to be updated. \n    if (this.props.location.state && this.props.location.state.store) {\n      let convertedCategory = this.props.location.state.store.category.map((str) => ({ value: str.toLowerCase(), label: str }));\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/storeHours', {\n        method: \"GET\",\n        headers: {\n            'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      })\n      .then(function(response){\n        if(response.status!==200){\n          // throw an error alert\n          store.dispatch(addAlert(response))\n        }\n        else{\n          return response.json();\n        }\n      })\n      .then(data => {\n        this.setState({\n          store: this.props.location.state.store,\n          selectedOption: convertedCategory,\n          storeHours: data,\n          loading: false\n        })\n      });\n    }\n    else {\n      Promise.all([\n        fetch(fetchDomain + '/stores/' + this.props.match.params.store_id, {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      }).then(value => value.json()),\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/storeHours', {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      }).then(value => value.json())\n      ]).then(allResponses => {\n        const response1 = allResponses[0]\n        const response2 = allResponses[1]\n        let convertedCategory = response1.category.map((str) => ({ value: str.toLowerCase(), label: str }));\n        this.setState({\n          store: response1,\n          selectedOption: convertedCategory,\n          storeHours: response2,\n          loading: false\n        })\n      })\n    }\n  }\n\n  render() {\n    const DisplayWithLoading = (props) => {\n      if (this.state.loading) {\n        return <Row className=\"vertical-center\">\n            <Col>\n              <GridLoader\n                css={override}\n                size={20}\n                color={\"#2196f3\"}\n                loading={this.state.isLoading}\n              />\n            </Col>\n          </Row>\n      } else {\n        return <Row className=\"justify-content-center\">\n        <Col xs={8} sm={7} md={6} lg={5}>\n          <Formik\n            enableReinitialize\n            initialValues={{\n              name: this.state.store.name,\n              description: this.state.store.description,\n              phone: this.state.store.phone,\n              street: this.state.store.street,\n              city: this.state.store.city,\n              state: this.state.store.state,\n              zipcode: this.state.store.zipcode,\n              category: this.state.selectedOption,\n              services: null,\n              owners: null,\n              pictures: this.state.pictures,\n              pictureCount: this.state.pictures.length - this.state.keys.length,\n              storeHours: this.state.storeHours\n            }}\n            validationSchema={this.yupValidationSchema}\n            onSubmit={async (values) => {\n              values.category = values.category.map(function (val) {\n                return val.label;\n              })\n\n                let store_id = this.props.match.params.store_id\n                let triggerStoreDisplay = this.triggerStoreDisplay\n\n                values.services = this.state.store.services\n                values.owners = this.state.store.owners\n                values.id = store_id\n                values.storeHours = this.state.newHours\n\n                // remove files from s3\n                await deleteHandler(this.state.keys)\n\n                // upload new images to s3 from client to avoid burdening back end\n                let prefix = 'stores/' + this.props.match.params.store_id + '/services/' + values.name + '/'\n                await uploadHandler(prefix, this.state.selectedFiles)\n\n                fetch(fetchDomain + '/stores/edit/' + store_id , {\n                  method: \"POST\",\n                  headers: {\n                    'Content-type': 'application/json'\n                  },\n                  credentials: 'include',\n                  body: JSON.stringify(values)\n                })\n                .then(function(response){\n                  if(response.status!==200){\n                    store.dispatch(addAlert(response))\n                  }\n                  else {\n                    // redirect to home page signed in\n                    return response.json()\n                  }\n                })\n                .then(data => {\n                  if(data){\n                    triggerStoreDisplay(data)\n                  }\n                });\n            }}\n          >\n            {({ values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              setFieldValue }) => (\n                <Form className=\"formBody rounded\">\n                  <h3>Store Edit</h3>\n\n                  <Form.Group controlId=\"formName\">\n                    <InputGroup>\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>\n                          <FaShoppingCart />\n                        </InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Control\n                        type=\"text\"\n                        name=\"name\"\n                        value={values.name}\n                        placeholder=\"Business Name\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        className={touched.name && errors.name ? \"error\" : null} />\n                    </InputGroup>\n                    {touched.name && errors.name ? (\n                      <div className=\"error-message\">{errors.name}</div>\n                    ) : null}\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formDescription\">\n                    <InputGroup>\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>\n                          <FaPen />\n                        </InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Control\n                        as=\"textarea\"\n                        rows={3}\n                        name=\"description\"\n                        value={values.description}\n                        placeholder=\"Description\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        className={touched.description && errors.description ? \"error\" : null} />\n                    </InputGroup>\n                    {touched.description && errors.description ? (\n                      <div className=\"error-message\">{errors.description}</div>\n                    ) : null}\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formPhone\">\n                    <InputGroup>\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>\n                          <FaPhone />\n                        </InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Control type=\"text\"\n                        value={values.phone}\n                        placeholder=\"Phone Number\"\n                        name=\"phone\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        className={touched.phone && errors.phone ? \"error\" : null} />\n                    </InputGroup>\n                    {touched.phone && errors.phone ? (\n                      <div className=\"error-message\">{errors.phone}</div>\n                    ) : null}\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formStreet\">\n                    <InputGroup>\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>\n                          <FaRoad />\n                        </InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Control type=\"text\"\n                        value={values.street}\n                        placeholder=\"Street\"\n                        name=\"street\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        className={touched.street && errors.street ? \"error\" : null} />\n                    </InputGroup>\n                    {touched.street && errors.street ? (\n                      <div className=\"error-message\">{errors.street}</div>\n                    ) : null}\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formCity\">\n                    <InputGroup>\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>\n                          <FaBuilding />\n                        </InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Control type=\"text\"\n                        value={values.city}\n                        placeholder=\"City\"\n                        name=\"city\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        className={touched.city && errors.city ? \"error\" : null} />\n                    </InputGroup>\n                    {touched.city && errors.city ? (\n                      <div className=\"error-message\">{errors.city}</div>\n                    ) : null}\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formState\">\n                    <InputGroup>\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>\n                          <FaUniversity />\n                        </InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Control\n                        value={values.state}\n                        placeholder=\"State\"\n                        name=\"state\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        className={touched.state && errors.state ? \"error\" : null} />\n                    </InputGroup>\n                    {touched.state && errors.state ? (\n                      <div className=\"error-message\">{errors.state}</div>\n                    ) : null}\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formZipcode\">\n                    <InputGroup>\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>\n                          <FaGlobe />\n                        </InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Control\n                        value={values.zipcode}\n                        placeholder=\"Zipcode\"\n                        name=\"zipcode\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        className={touched.zipcode && errors.zipcode ? \"error\" : null} />\n                    </InputGroup>\n                    {touched.zipcode && errors.zipcode ? (\n                      <div className=\"error-message\">{errors.zipcode}</div>\n                    ) : null}\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formCategory\">\n                    <Select\n                      value={values.category}\n                      onChange={option => setFieldValue(\"category\", option)}\n                      name=\"category\"\n                      options={this.options}\n                      isMulti={true}\n                      placeholder={\"Category\"}\n                      className={touched.category && errors.category ? \"error\" : null}\n                    />\n                    {touched.category && errors.category ? (\n                      <div className=\"error-message\">{errors.category}</div>\n                    ) : null}\n                  </Form.Group>\n\n                  <h4>Store Hours</h4>\n\n                  <Form.Group controlId=\"formHoursMonday\">\n                    <h5 className=\"text-left\">Monday</h5>\n                    <Form.Row>\n                      <Col>\n                        <Form.Control as=\"select\" value={this.state.storeHours[0].open_time} onChange={this.handleSelectChange.bind(this)}>\n                          <option value={0}>{this.convertMinsToHrsMins(0)}</option>\n                          <option value={60}>{this.convertMinsToHrsMins(60)}</option>\n                          <option value={120}>{this.convertMinsToHrsMins(120)}</option>\n                          <option value={180}>{this.convertMinsToHrsMins(180)}</option>\n                          <option value={240}>{this.convertMinsToHrsMins(240)}</option>\n                          <option value={300}>{this.convertMinsToHrsMins(300)}</option>\n                          <option value={360}>{this.convertMinsToHrsMins(360)}</option>\n                          <option value={420}>{this.convertMinsToHrsMins(420)}</option>\n                          <option value={480}>{this.convertMinsToHrsMins(480)}</option>\n                          <option value={540}>{this.convertMinsToHrsMins(540)}</option>\n                          <option value={600}>{this.convertMinsToHrsMins(600)}</option>\n                          <option value={660}>{this.convertMinsToHrsMins(660)}</option>\n                          <option value={720}>{this.convertMinsToHrsMins(720)}</option>\n                          <option value={780}>{this.convertMinsToHrsMins(780)}</option>\n                          <option value={840}>{this.convertMinsToHrsMins(840)}</option>\n                        </Form.Control>\n                      </Col>\n                      <Col>\n                        <Form.Control as=\"select\" value={this.state.storeHours[0].close_time} onChange={this.handleSelectChange.bind(this)}>\n                          <option value={900}>{this.convertMinsToHrsMins(900)}</option>\n                          <option value={960}>{this.convertMinsToHrsMins(960)}</option>\n                          <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\n                          <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\n                          <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\n                          <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\n                          <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\n                          <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\n                          <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\n                          <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\n                        </Form.Control>\n                      </Col>\n                    </Form.Row>\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formHoursTuesday\">\n                    <h5 className=\"text-left\">Tuesday</h5>\n                    <Form.Row>\n                      <Col>\n                        <Form.Control as=\"select\" value={this.state.storeHours[1].open_time} onChange={this.handleSelectChange.bind(this)}>\n                          <option value={0}>{this.convertMinsToHrsMins(0)}</option>\n                          <option value={60}>{this.convertMinsToHrsMins(60)}</option>\n                          <option value={120}>{this.convertMinsToHrsMins(120)}</option>\n                          <option value={180}>{this.convertMinsToHrsMins(180)}</option>\n                          <option value={240}>{this.convertMinsToHrsMins(240)}</option>\n                          <option value={300}>{this.convertMinsToHrsMins(300)}</option>\n                          <option value={360}>{this.convertMinsToHrsMins(360)}</option>\n                          <option value={420}>{this.convertMinsToHrsMins(420)}</option>\n                          <option value={480}>{this.convertMinsToHrsMins(480)}</option>\n                          <option value={540}>{this.convertMinsToHrsMins(540)}</option>\n                          <option value={600}>{this.convertMinsToHrsMins(600)}</option>\n                          <option value={660}>{this.convertMinsToHrsMins(660)}</option>\n                          <option value={720}>{this.convertMinsToHrsMins(720)}</option>\n                          <option value={780}>{this.convertMinsToHrsMins(780)}</option>\n                          <option value={840}>{this.convertMinsToHrsMins(840)}</option>\n                        </Form.Control>\n                      </Col>\n                      <Col>\n                        <Form.Control as=\"select\" value={this.state.storeHours[1].close_time} onChange={this.handleSelectChange.bind(this)}>\n                          <option value={900}>{this.convertMinsToHrsMins(900)}</option>\n                          <option value={960}>{this.convertMinsToHrsMins(960)}</option>\n                          <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\n                          <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\n                          <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\n                          <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\n                          <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\n                          <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\n                          <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\n                          <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\n                        </Form.Control>\n                      </Col>\n                    </Form.Row>\n                  </Form.Group>\n\n\n                  <Form.Group controlId=\"formHoursWednesday\">\n                    <h5 className=\"text-left\">Wednesday</h5>\n                    <Form.Row>\n                      <Col>\n                        <Form.Control as=\"select\" value={this.state.storeHours[2].open_time} onChange={this.handleSelectChange.bind(this)}>\n                          <option value={0}>{this.convertMinsToHrsMins(0)}</option>\n                          <option value={60}>{this.convertMinsToHrsMins(60)}</option>\n                          <option value={120}>{this.convertMinsToHrsMins(120)}</option>\n                          <option value={180}>{this.convertMinsToHrsMins(180)}</option>\n                          <option value={240}>{this.convertMinsToHrsMins(240)}</option>\n                          <option value={300}>{this.convertMinsToHrsMins(300)}</option>\n                          <option value={360}>{this.convertMinsToHrsMins(360)}</option>\n                          <option value={420}>{this.convertMinsToHrsMins(420)}</option>\n                          <option value={480}>{this.convertMinsToHrsMins(480)}</option>\n                          <option value={540}>{this.convertMinsToHrsMins(540)}</option>\n                          <option value={600}>{this.convertMinsToHrsMins(600)}</option>\n                          <option value={660}>{this.convertMinsToHrsMins(660)}</option>\n                          <option value={720}>{this.convertMinsToHrsMins(720)}</option>\n                          <option value={780}>{this.convertMinsToHrsMins(780)}</option>\n                          <option value={840}>{this.convertMinsToHrsMins(840)}</option>\n                        </Form.Control>\n                      </Col>\n                      <Col>\n                        <Form.Control as=\"select\" value={this.state.storeHours[2].close_time} onChange={this.handleSelectChange.bind(this)}>\n                          <option value={900}>{this.convertMinsToHrsMins(900)}</option>\n                          <option value={960}>{this.convertMinsToHrsMins(960)}</option>\n                          <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\n                          <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\n                          <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\n                          <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\n                          <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\n                          <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\n                          <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\n                          <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\n                        </Form.Control>\n                      </Col>\n                    </Form.Row>\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formHoursThursday\">\n                    <h5 className=\"text-left\">Thursday</h5>\n                    <Form.Row>\n                      <Col>\n                        <Form.Control as=\"select\" value={this.state.storeHours[3].open_time} onChange={this.handleSelectChange.bind(this)}>\n                          <option value={0}>{this.convertMinsToHrsMins(0)}</option>\n                          <option value={60}>{this.convertMinsToHrsMins(60)}</option>\n                          <option value={120}>{this.convertMinsToHrsMins(120)}</option>\n                          <option value={180}>{this.convertMinsToHrsMins(180)}</option>\n                          <option value={240}>{this.convertMinsToHrsMins(240)}</option>\n                          <option value={300}>{this.convertMinsToHrsMins(300)}</option>\n                          <option value={360}>{this.convertMinsToHrsMins(360)}</option>\n                          <option value={420}>{this.convertMinsToHrsMins(420)}</option>\n                          <option value={480}>{this.convertMinsToHrsMins(480)}</option>\n                          <option value={540}>{this.convertMinsToHrsMins(540)}</option>\n                          <option value={600}>{this.convertMinsToHrsMins(600)}</option>\n                          <option value={660}>{this.convertMinsToHrsMins(660)}</option>\n                          <option value={720}>{this.convertMinsToHrsMins(720)}</option>\n                          <option value={780}>{this.convertMinsToHrsMins(780)}</option>\n                          <option value={840}>{this.convertMinsToHrsMins(840)}</option>\n                        </Form.Control>\n                      </Col>\n                      <Col>\n                        <Form.Control as=\"select\" value={this.state.storeHours[3].close_time} onChange={this.handleSelectChange.bind(this)}>\n                          <option value={900}>{this.convertMinsToHrsMins(900)}</option>\n                          <option value={960}>{this.convertMinsToHrsMins(960)}</option>\n                          <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\n                          <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\n                          <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\n                          <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\n                          <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\n                          <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\n                          <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\n                          <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\n                        </Form.Control>\n                      </Col>\n                    </Form.Row>\n                  </Form.Group>\n\n\n                  <Form.Group controlId=\"formHoursFriday\">\n                    <h5 className=\"text-left\">Friday</h5>\n                    <Form.Row>\n                      <Col>\n                        <Form.Control as=\"select\" value={this.state.storeHours[4].open_time} onChange={this.handleSelectChange.bind(this)}>\n                          <option value={0}>{this.convertMinsToHrsMins(0)}</option>\n                          <option value={60}>{this.convertMinsToHrsMins(60)}</option>\n                          <option value={120}>{this.convertMinsToHrsMins(120)}</option>\n                          <option value={180}>{this.convertMinsToHrsMins(180)}</option>\n                          <option value={240}>{this.convertMinsToHrsMins(240)}</option>\n                          <option value={300}>{this.convertMinsToHrsMins(300)}</option>\n                          <option value={360}>{this.convertMinsToHrsMins(360)}</option>\n                          <option value={420}>{this.convertMinsToHrsMins(420)}</option>\n                          <option value={480}>{this.convertMinsToHrsMins(480)}</option>\n                          <option value={540}>{this.convertMinsToHrsMins(540)}</option>\n                          <option value={600}>{this.convertMinsToHrsMins(600)}</option>\n                          <option value={660}>{this.convertMinsToHrsMins(660)}</option>\n                          <option value={720}>{this.convertMinsToHrsMins(720)}</option>\n                          <option value={780}>{this.convertMinsToHrsMins(780)}</option>\n                          <option value={840}>{this.convertMinsToHrsMins(840)}</option>\n                        </Form.Control>\n                      </Col>\n                      <Col>\n                        <Form.Control as=\"select\" value={this.state.storeHours[4].close_time} onChange={this.handleSelectChange.bind(this)}>\n                          <option value={900}>{this.convertMinsToHrsMins(900)}</option>\n                          <option value={960}>{this.convertMinsToHrsMins(960)}</option>\n                          <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\n                          <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\n                          <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\n                          <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\n                          <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\n                          <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\n                          <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\n                          <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\n                        </Form.Control>\n                      </Col>\n                    </Form.Row>\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formHoursSaturday\">\n                    <h5 className=\"text-left\">Saturday</h5>\n                    <Form.Row>\n                      <Col>\n                        <Form.Control as=\"select\" value={this.state.storeHours[5].open_time} onChange={this.handleSelectChange.bind(this)}>\n                          <option value={0}>{this.convertMinsToHrsMins(0)}</option>\n                          <option value={60}>{this.convertMinsToHrsMins(60)}</option>\n                          <option value={120}>{this.convertMinsToHrsMins(120)}</option>\n                          <option value={180}>{this.convertMinsToHrsMins(180)}</option>\n                          <option value={240}>{this.convertMinsToHrsMins(240)}</option>\n                          <option value={300}>{this.convertMinsToHrsMins(300)}</option>\n                          <option value={360}>{this.convertMinsToHrsMins(360)}</option>\n                          <option value={420}>{this.convertMinsToHrsMins(420)}</option>\n                          <option value={480}>{this.convertMinsToHrsMins(480)}</option>\n                          <option value={540}>{this.convertMinsToHrsMins(540)}</option>\n                          <option value={600}>{this.convertMinsToHrsMins(600)}</option>\n                          <option value={660}>{this.convertMinsToHrsMins(660)}</option>\n                          <option value={720}>{this.convertMinsToHrsMins(720)}</option>\n                          <option value={780}>{this.convertMinsToHrsMins(780)}</option>\n                          <option value={840}>{this.convertMinsToHrsMins(840)}</option>\n                        </Form.Control>\n                      </Col>\n                      <Col>\n                        <Form.Control as=\"select\" value={this.state.storeHours[5].close_time} onChange={this.handleSelectChange.bind(this)}>\n                          <option value={900}>{this.convertMinsToHrsMins(900)}</option>\n                          <option value={960}>{this.convertMinsToHrsMins(960)}</option>\n                          <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\n                          <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\n                          <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\n                          <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\n                          <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\n                          <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\n                          <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\n                          <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\n                        </Form.Control>\n                      </Col>\n                    </Form.Row>\n                  </Form.Group>\n\n\n                  <Form.Group controlId=\"formHoursSunday\">\n                    <h5 className=\"text-left\">Sunday</h5>\n                    <Form.Row>\n                      <Col>\n                        <Form.Control as=\"select\" value={this.state.storeHours[6].open_time} onChange={this.handleSelectChange.bind(this)}>\n                          <option value={0}>{this.convertMinsToHrsMins(0)}</option>\n                          <option value={60}>{this.convertMinsToHrsMins(60)}</option>\n                          <option value={120}>{this.convertMinsToHrsMins(120)}</option>\n                          <option value={180}>{this.convertMinsToHrsMins(180)}</option>\n                          <option value={240}>{this.convertMinsToHrsMins(240)}</option>\n                          <option value={300}>{this.convertMinsToHrsMins(300)}</option>\n                          <option value={360}>{this.convertMinsToHrsMins(360)}</option>\n                          <option value={420}>{this.convertMinsToHrsMins(420)}</option>\n                          <option value={480}>{this.convertMinsToHrsMins(480)}</option>\n                          <option value={540}>{this.convertMinsToHrsMins(540)}</option>\n                          <option value={600}>{this.convertMinsToHrsMins(600)}</option>\n                          <option value={660}>{this.convertMinsToHrsMins(660)}</option>\n                          <option value={720}>{this.convertMinsToHrsMins(720)}</option>\n                          <option value={780}>{this.convertMinsToHrsMins(780)}</option>\n                          <option value={840}>{this.convertMinsToHrsMins(840)}</option>\n                        </Form.Control>\n                      </Col>\n                      <Col>\n                        <Form.Control as=\"select\" value={this.state.storeHours[6].close_time} onChange={this.handleSelectChange.bind(this)}>\n                          <option value={900}>{this.convertMinsToHrsMins(900)}</option>\n                          <option value={960}>{this.convertMinsToHrsMins(960)}</option>\n                          <option value={1020}>{this.convertMinsToHrsMins(1020)}</option>\n                          <option value={1080}>{this.convertMinsToHrsMins(1080)}</option>\n                          <option value={1140}>{this.convertMinsToHrsMins(1140)}</option>\n                          <option value={1200}>{this.convertMinsToHrsMins(1200)}</option>\n                          <option value={1260}>{this.convertMinsToHrsMins(1260)}</option>\n                          <option value={1320}>{this.convertMinsToHrsMins(1320)}</option>\n                          <option value={1380}>{this.convertMinsToHrsMins(1380)}</option>\n                          <option value={1440}>{this.convertMinsToHrsMins(1440)}</option>\n                        </Form.Control>\n                      </Col>\n                    </Form.Row>\n                  </Form.Group>\n\n                  <Form.Group controlId=\"pictureCount\">\n                    <Form.Label>Delete Images</Form.Label>\n                    {this.state.pictures.map((picture, index) => (\n                      <div key={\"pic-\" + index}>\n                        <img className=\"img-fluid\" src={picture.url} alt={\"Slide \" + index} />\n                        <Form.Check\n                          // style={{marginLeft: 30}}\n                          id={picture.key}\n                          label={picture.key.split('/').slice(-1)[0]}\n                          onChange={event => this.deleteFileChangeHandler(event, setFieldValue, values.pictures.length)}\n                        />\n                      </div>\n                    ))}\n                  </Form.Group>\n\n                  <Form.Group controlId=\"pictures\">\n                    <Form.Label>Add Images</Form.Label>\n                    <br/>\n                    <input \n                      onChange={event => this.fileChangedHandler(event, setFieldValue, values.pictures)}\n                      type=\"file\"\n                      multiple\n                      className={touched.pictures && errors.pictures ? \"error\" : null}\n                    />\n                    {touched.pictureCount && errors.pictureCount ? (\n                      <div className=\"error-message\">{errors.pictureCount}</div>\n                    ): null}\n                  </Form.Group>\n\n\n                  <Button onClick={handleSubmit}>Submit</Button>\n                </Form>\n              )}\n          </Formik>\n        </Col>\n      </Row>\n      }\n    }\n\n    return (\n      <Container fluid>\n        <DisplayWithLoading/>\n      </Container>\n    );\n  }\n}\n\nexport default StoreEditForm;\n","//CITATION: https://medium.com/@faizanv/authentication-for-your-react-and-express-application-w-json-web-tokens-923515826e0\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nexport default function redirectWithoutAuth(ComponentToProtect) {\n  return class extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        loading: true,\n        redirect: false,\n      };\n    }\n    componentDidMount() {\n      fetch(fetchDomain + '/checkToken' , {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      }).then(res => {\n          if (res.status === 200) {\n            this.setState({ loading: false });\n          } else {\n            const error = new Error(res.error);\n            throw error;\n          }\n        })\n        .catch(err => {\n          console.error(err);\n          this.setState({ loading: false, redirect: true });\n        });\n    }\n    render() {\n      const { loading, redirect } = this.state;\n      if (loading) {\n        return null;\n      }\n      if (redirect) {\n        return <Redirect to=\"/login\" />;\n      }\n      else {\n        return <ComponentToProtect {...this.props} />;\n      }\n    }\n  }\n}","import React from 'react';\nimport '../../App.css';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport { FaLockOpen, FaLock, FaUser, FaPhone } from 'react-icons/fa';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {editUser} from '../../reduxFolder/redux.js'\n\nclass EditProfileForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {\n        first_name: '',\n        last_name: '',\n        phone: '',\n        password: '',\n        password_confirmation: '',\n        id: ''\n      }\n    }\n    // RegEx for phone number validation\n    this.phoneRegExp = /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/\n    // this.emailRegExp = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/\n    // Schema for yup\n    this.yupValidationSchema = Yup.object().shape({\n      first_name: Yup.string()\n      .min(2, \"First name must have at least 2 characters\")\n      .max(100, \"First name can't be longer than 100 characters\")\n      .required(\"First name is required\"),\n      last_name: Yup.string()\n      .min(2, \"Last name must have at least 2 characters\")\n      .max(100, \"Last name can't be longer than 100 characters\")\n      .required(\"Last name is required\"),\n      // email: Yup.string()\n      // .email(\"Must be a valid email address\")\n      // .max(100, \"Email must be less than 100 characters\")\n      // .required(\"Email is required\"),\n      phone: Yup.string()\n      .matches(this.phoneRegExp, \"Phone number is not valid\"),\n      password: Yup.string()\n      .min(6, \"Password must have at least 6 characters\")\n      .max(100, \"Password can't be longer than 100 characters\")\n      .required(\"Password is required\"),\n      password_confirmation: Yup.string()\n      .oneOf([Yup.ref('password')], 'Passwords do not match')\n      .required(\"Password confirmation is required\"),\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState)  {\n    if (prevProps.user !== this.props.user) {\n      this.props.history.push({\n        pathname: '/users/' + this.props.user.id,\n      })\n    }\n  }\n    \n  render() {\n    return (\n      <Container fluid>\n        <Row className=\"justify-content-center\">\n          <Col xs={8} sm={7} md={6} lg={5}>\n            <Formik\n              enableReinitialize\n              initialValues={{\n                first_name: this.props.user.first_name,\n                last_name: this.props.user.last_name,\n                phone: this.props.user.phone,\n                password: '',\n                password_confirmation: '',\n                id: 0\n              }}\n              validationSchema={this.yupValidationSchema}\n              onSubmit={(values) => {\n                values.id = this.props.match.params.user_id\n\n                this.props.editProfile(values)\n              }}\n            >\n            {( {values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit}) => (\n              <Form className=\"formBody rounded\">\n                <h3>Edit Profile</h3>\n\n                <Form.Group controlId=\"formFirstName\">\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                            <FaUser/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control \n                      type=\"text\" \n                      name=\"first_name\"\n                      value={values.first_name} \n                      placeholder=\"First Name\" \n                      onChange={handleChange} \n                      onBlur={handleBlur}\n                      className={touched.first_name && errors.first_name ? \"error\" : null}/>\n                  </InputGroup>\n                  {touched.first_name && errors.first_name ? (\n                    <div className=\"error-message\">{errors.first_name}</div>\n                  ): null}\n                </Form.Group>\n\n                <Form.Group controlId=\"formLastName\">\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                            <FaUser/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control type=\"text\" \n                    value={values.last_name}\n                    placeholder=\"Last Name\" \n                    name=\"last_name\" \n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    className={touched.last_name && errors.last_name ? \"error\" : null}/>\n                  </InputGroup>\n                  {touched.last_name && errors.last_name ? (\n                    <div className=\"error-message\">{errors.last_name}</div>\n                  ): null}\n                </Form.Group>\n\n                <Form.Group controlId=\"formPhone\">\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                            <FaPhone/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control type=\"text\" \n                      value={values.phone} \n                      placeholder=\"Phone Number\" \n                      name=\"phone\" \n                      onChange={handleChange} \n                      onBlur={handleBlur}\n                      className={touched.phone && errors.phone ? \"error\" : null}/>\n                  </InputGroup>\n                  {touched.phone && errors.phone ? (\n                    <div className=\"error-message\">{errors.phone}</div>\n                  ): null}\n                </Form.Group>\n\n                <Form.Group controlId=\"formPassword\">\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                            <FaLockOpen/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control \n                      type=\"password\" \n                      value={values.password} \n                      placeholder=\"Password\" \n                      name=\"password\" \n                      onChange={handleChange} \n                      onBlur={handleBlur}\n                      className={touched.password && errors.password ? \"error\" : null}/>\n                  </InputGroup>\n                  {touched.password && errors.password ? (\n                    <div className=\"error-message\">{errors.password}</div>\n                  ): null}\n                </Form.Group>\n\n                <Form.Group controlId=\"formPasswordConfirmation\">\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                            <FaLock/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control \n                      type=\"password\" \n                      value={values.password_confirmation}\n                      placeholder=\"Confirm Password\" \n                      name=\"password_confirmation\" \n                      onChange={handleChange} \n                      onBlur={handleBlur}\n                      className={touched.password_confirmation && errors.password_confirmation ? \"error\" : null}/>\n                  </InputGroup>\n                  {touched.password_confirmation && errors.password_confirmation ? (\n                    <div className=\"error-message\">{errors.password_confirmation}</div>\n                  ): null}\n                </Form.Group>\n                <Button onClick={handleSubmit}>Submit</Button>\n              </Form>\n            )}\n            </Formik>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.userReducer.user\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  editProfile: (email, password, auth_token) => editUser(email, password, auth_token)\n}, dispatch)\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfileForm);\n","import React from 'react';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { connect } from 'react-redux';\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    // fix later to render all users not just current one? this.props.match.params.user_id\n    return (\n      <Container fluid>\n        <Row className=\"justify-content-center\">\n            <Col>\n              <h1>{this.props.user.first_name} {this.props.user.last_name}</h1>\n              <h1>{this.props.user.phone}</h1>\n              <h1>{this.props.user.email}</h1>\n            </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.userReducer.user\n})\n\nexport default connect(mapStateToProps)(Profile);\n","import React from \"react\"\nimport ContentLoader from \"react-content-loader\" \n\nconst UserStoresDashboardLoader = () => (\n  <ContentLoader \n    speed={1}\n    style={{ width: '100%', height: '100%' }}\n    viewBox=\"0 0 1000 1500\"\n    backgroundColor=\"#f3f3f3\"\n    foregroundColor=\"#eae8e8\"\n  >\n    <rect className={'d-none d-md-block'} x=\"50\" y=\"30\" rx=\"0\" ry=\"0\" width=\"500\" height=\"250\" /> \n    <rect className={'d-none d-md-block'} x=\"630\" y=\"71\" rx=\"3\" ry=\"3\" width=\"200\" height=\"15\" /> \n    <rect className={'d-none d-md-block'} x=\"645\" y=\"105\" rx=\"3\" ry=\"3\" width=\"164\" height=\"6\" /> \n    <rect className={'d-none d-md-block'} x=\"630\" y=\"130\" rx=\"3\" ry=\"3\" width=\"200\" height=\"25\" /> \n    <rect className={'d-none d-md-block'} x=\"630\" y=\"170\" rx=\"3\" ry=\"3\" width=\"200\" height=\"25\" /> \n    <rect className={'d-none d-md-block'} x=\"630\" y=\"210\" rx=\"3\" ry=\"3\" width=\"200\" height=\"25\" /> \n    \n    <rect className={'d-block d-md-none'} x=\"66\" y=\"0\" rx=\"0\" ry=\"0\" width=\"858\" height=\"614\" /> \n    <rect className={'d-block d-md-none'}x=\"69\" y=\"689\" rx=\"3\" ry=\"3\" width=\"858\" height=\"115\" /> \n    <rect className={'d-block d-md-none'}x=\"104\" y=\"869\" rx=\"3\" ry=\"3\" width=\"788\" height=\"55\" /> \n    <rect className={'d-block d-md-none'}x=\"49\" y=\"999\" rx=\"3\" ry=\"3\" width=\"900\" height=\"115\" /> \n    <rect className={'d-block d-md-none'}x=\"49\" y=\"1169\" rx=\"3\" ry=\"3\" width=\"900\" height=\"115\" /> \n    <rect className={'d-block d-md-none'}x=\"49\" y=\"1339\" rx=\"3\" ry=\"3\" width=\"900\" height=\"115\" /> \n  </ContentLoader>\n)\n\nexport default UserStoresDashboardLoader","import React from 'react';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { Button, Image } from 'react-bootstrap';\n// import SearchCard from '../Search/SearchCard';\nimport Carousel from 'react-bootstrap/Carousel'\n// import salon from '../../assets/salon.jpg';\nimport salon2 from '../../assets/salon2.jpeg';\nimport hair from '../../assets/hair_salon.jpg';\nimport { FaEdit } from 'react-icons/fa';\nimport './UserStoresDashboard.css'\nimport {\n  addAlert\n} from '../../reduxFolder/actions/alert'\nimport store from '../../reduxFolder/store';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {addStore} from '../../reduxFolder/actions/stores.js'\nimport UserStoresDashboardLoader from './UserStoresDashboardLoader';\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\n// ***** NOTE: fix to properly display all the stores\n\nclass UserStoresDashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      stores: [\n        {\n          id: \"\",\n          name: \"\",\n          street: \"\",\n          city: \"\",\n          state: \"\",\n          zipcode: \"\",\n          created_at: \"\",\n          category: [],\n          services: [],\n          workers: [],\n          owners: [],\n          phone: \"\",\n          clients: [],\n          description: \"\",\n          lat: \"\",\n          lng: \"\"\n        }\n      ],\n      redirectToWorkerForm: null,\n      store_id: null,\n      loading: true\n    }\n  }\n\n  triggerStoreEdit(passedStore) {\n    this.props.history.push({\n      pathname: '/stores/edit/' + passedStore.id,\n      state: {\n        store: passedStore\n      }\n    })\n  }\n\n  triggerAddWorker(id) {\n    this.props.history.push({\n      pathname: '/stores/addWorker/' + id\n    })\n  }\n\n  triggerShowWorkers(id) {\n    this.props.history.push({\n      pathname: '/stores/' + id + '/workers'\n    })\n  }\n\n  triggerStoreShow(passedStore) {\n    this.props.history.push({\n      pathname: '/stores/' + passedStore.id,\n      state: {\n        store: passedStore\n      }\n    })\n  }\n\n  triggerShowServices(id) {\n    this.props.history.push({\n      pathname: '/stores/' + id + '/services'\n    })\n  }\n\n  triggerAddService(id) {\n    this.props.history.push({\n      pathname: '/stores/addService/' + id,\n    })\n  }\n\n  triggerShowCalendar(store) {\n    this.props.history.push({\n      pathname: '/storeCalendar/' + store.id,\n      state: {\n        store: store\n      }\n    })\n  }\n\n  componentDidMount() {\n    fetch(fetchDomain + '/stores/users/' + this.props.match.params.user_id , {\n      method: \"GET\",\n      headers: {\n          'Content-type': 'application/json'\n      },\n      credentials: 'include'\n    })\n    .then(function(response){\n      if(response.status!==200){\n        // throw an error alert\n        store.dispatch(addAlert(response))\n      }\n      else{\n        return response.json();\n      }\n    })\n    .then(data => {\n      if(data){\n        // let convertedCategory = data.category.map((str) => ({ value: str.toLowerCase(), label: str }));\n        this.setState({\n          stores: data,\n          loading: false\n        })\n      }\n      this.props.addStore(data);\n\n    });\n  }\n\n  render() {\n    const DisplayWithLoading = (props) => {\n      if (this.state.loading) {\n        return <Row className=\"mt-5\">\n            <Col xs=\"12\">\n              <UserStoresDashboardLoader/>\n            </Col>\n          </Row>\n      } else {\n        return(\n          <>{this.state.stores.map((store, index) => (\n            <div key={\"store\" + index}>\n              <Row className=\"justify-content-center align-content-center my-5\">\n                <Col md={6} className=\"vertical-align-contents\">\n                  <Carousel className=\"dashboard-carousel\" interval=\"\">\n                      <Carousel.Item>\n                        <Image fluid src={salon2} alt=\"test\"/>\n                      </Carousel.Item>\n                      <Carousel.Item >\n                        <Image fluid src={hair} alt=\"test2\"/>\n                      </Carousel.Item>\n                  </Carousel>\n                </Col>\n                <Col md={5} className=\"vertical-align-contents\">\n                  <Row className={\"justify-content-center\"}>\n                    <Col sm={12}>\n                      <span className=\"name\" onClick={() => this.triggerStoreShow(store)} style={{cursor: 'pointer'}}> {store.name} </span>\n                      <FaEdit className=\"edit mb-3\" size={25} onClick={() => this.triggerStoreEdit(store)}/>\n                    </Col>\n                    <Col sm={12}>\n                      <p className=\"address\">{store.street}, {store.city}, {store.state} </p>\n                    </Col>\n                    <Col sm={8} className={\"py-1\"}>\n                      <Button block className=\"update_button\"  onClick={() =>  this.triggerShowCalendar(store)}>Calendar</Button> &nbsp;\n                    </Col>\n                    <Col sm={8} className={\"py-1\"}>\n                      <Button block className=\"update_button\" onClick={() =>  this.triggerShowWorkers(store.id)}>Workers</Button> &nbsp;\n                    </Col>\n                    <Col sm={8} className={\"py-1\"}>\n                      <Button block className=\"update_button\" onClick={() =>  this.triggerShowServices(store.id)}>Services</Button> &nbsp;\n                    </Col>\n                  </Row>\n                </Col>\n              </Row>\n            </div>\n          ))}</>\n        )\n      }\n    }\n    return (\n      <Container fluid>\n        <DisplayWithLoading/>\n      </Container>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  stores: state.storeReducer.stores,\n  user: state.userReducer.user\n})\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  addStore: (store) => addStore(store),\n}, dispatch)\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserStoresDashboard);\n","import React from 'react';\nimport '../../App.css';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport { FaEnvelope } from 'react-icons/fa';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport Select from 'react-select';\nimport {\n  addAlert\n} from '../../reduxFolder/actions/alert'\nimport store from '../../reduxFolder/store';\nimport GridLoader from 'react-spinners/GridLoader'\nimport { css } from '@emotion/core'\n\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n`;\n\nclass AddWorkerForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: [\n        { value: 0, label: 'Brazilian Blowout' },\n        { value: 1, label: 'Manicure' },\n      ],\n      workerHours: [],\n      storeHours: [],\n      weekIsWorking: [true, true, true, true, true, true, true],\n      loading: true\n    };\n    this.emailRegExp = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/\n    // Schema for yup\n    this.yupValidationSchema = Yup.object().shape({\n      email: Yup.string()\n        .email(\"Must be a valid email address\")\n        .max(100, \"Email must be less than 100 characters\")\n        .required(\"Email is required\"),\n    });\n\n    this.triggerWorkerDisplay = this.triggerWorkerDisplay.bind(this);\n  }\n\n  convertMinsToHrsMins(mins) {\n    let h = Math.floor(mins / 60);\n    let m = mins % 60;\n    let am = false\n    if (h == 24) {\n      am = true\n      h -= 12\n    }\n    else if (h < 12) {\n      am = true\n    } else if (h != 12) {\n      h -= 12\n    }\n    h = h < 10 ? '0' + h : h;\n    if (h == 0) {\n      h = '12'\n    }\n    m = m < 10 ? '0' + m : m;\n    if (am) {\n      return `${h}:${m}am`;\n    } else {\n      return `${h}:${m}pm`;\n    }\n\n  }\n\n  handleSelectChange = (event) => {\n    var days = ['formHoursMonday', 'formHoursTuesday', 'formHoursWednesday', 'formHoursThursday', 'formHoursFriday', 'formHoursSaturday', 'formHoursSunday']\n    var day = days.indexOf(event.target.id)\n    var old_start_time = 0\n    var old_end_time = 0\n    var newWorkerHours = []\n    old_start_time = this.state.workerHours[day].start_time\n    old_end_time = this.state.workerHours[day].end_time\n    if (parseInt(event.target.querySelector('option').value) <= 840) {\n      newWorkerHours = [\n        ...this.state.workerHours.slice(0, day),\n        { start_time: parseInt(event.target.value), end_time: old_end_time },\n        ...this.state.workerHours.slice(day + 1)\n      ]\n    } else {\n      newWorkerHours = [\n        ...this.state.workerHours.slice(0, day),\n        { start_time: old_start_time, end_time: parseInt(event.target.value) },\n        ...this.state.workerHours.slice(day + 1)\n      ]\n    }\n\n    this.setState({\n      workerHours: newWorkerHours\n    })\n  };\n\n  handleDayStatusChange = (day) => {\n    var updateWeekIsWorking = [\n      ...this.state.weekIsWorking.slice(0, day),\n      !this.state.weekIsWorking[day],\n      ...this.state.weekIsWorking.slice(day + 1)\n    ]\n\n    this.setState({\n      weekIsWorking: updateWeekIsWorking\n    })\n  };\n\n  // redirect to the worker display page and pass the new worker data\n  triggerWorkerDisplay(returnedWorker) {\n    this.props.history.push({\n      pathname: '/stores/' + this.props.match.params.store_id + '/workers/' + returnedWorker.id,\n      state: {\n        worker: returnedWorker\n      }\n    })\n  }\n\n  componentDidMount() {\n    fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/storeHours\", {\n      method: \"GET\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      credentials: 'include'\n    })\n      .then(function (response) {\n        if (response.status !== 200) {\n          // throw an error alert\n          store.dispatch(addAlert(response))\n        }\n        else {\n          return response.json();\n        }\n      })\n      .then(data => {\n        if (data) {\n          let receivedWorkerHours = data.map((day) => ({ start_time: day.open_time, end_time: day.close_time }));\n          this.setState({\n            storeHours: data, \n            workerHours: receivedWorkerHours,\n            loading: false\n          })\n        }\n      });\n  }\n\n  render() {\n    const CreateStartTimesForDay = (props) => {\n      let items = [];\n      for (let i = this.state.storeHours[props.day].open_time; i <= 840; i += 60) {\n        items.push(<option key={i} value={i}>{this.convertMinsToHrsMins(i)}</option>);\n      }\n      return items;\n    }\n    const CreateEndTimesForDay = (props) => {\n      let items = [];\n      for (let i = 900; i <= this.state.storeHours[props.day].close_time; i += 60) {\n        items.push(<option key={i} value={i}>{this.convertMinsToHrsMins(i)}</option>);\n      }\n      return items;\n    }\n    const DisplayWithLoading = (props) => {\n      if (this.state.loading) {\n        return <Row className=\"vertical-center\">\n          <Col>\n            <GridLoader\n              css={override}\n              size={20}\n              color={\"#2196f3\"}\n              loading={this.state.isLoading}\n            />\n          </Col>\n        </Row>\n      } else { \n        return <Row className=\"justify-content-center\">\n          <Col xs={8} sm={7} md={6} lg={5}>\n            <Formik\n              initialValues={{\n                email: '',\n                services: '',\n                workerHours: []\n              }}\n              validationSchema={this.yupValidationSchema}\n              onSubmit={(values) => {\n                let store_id = this.props.match.params.store_id\n                let triggerWorkerDisplay = this.triggerWorkerDisplay\n\n                values.services = values.services.map(function (val) {\n                  return val.value;\n                })\n\n                fetch(fetchDomain + '/stores/addWorker/' + store_id, {\n                  method: \"POST\",\n                  headers: {\n                    'Content-type': 'application/json'\n                  },\n                  credentials: 'include',\n                  body: JSON.stringify(values)\n                })\n                  .then(function (response) {\n                    if (response.status !== 200) {\n                      store.dispatch(addAlert(response))\n                    }\n                    else {\n                      return response.json();\n                    }\n                  })\n                  .then(function (data) {\n                    // redirect to home page signed in\n                    if (data) {\n                      triggerWorkerDisplay(data)\n                    }\n                  })\n              }}\n            >\n              {({ values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                setFieldValue }) => (\n                  <Form className=\"formBody rounded\">\n                    <h3>Add Worker</h3>\n\n                    <Form.Group controlId=\"formEmail\">\n                      <InputGroup>\n                        <InputGroup.Prepend>\n                          <InputGroup.Text>\n                            <FaEnvelope />\n                          </InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control\n                          type=\"email\"\n                          value={values.email}\n                          placeholder=\"Email\"\n                          name=\"email\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          className={touched.email && errors.email ? \"error\" : null} />\n                      </InputGroup>\n                      {touched.email && errors.email ? (\n                        <div className=\"error-message\">{errors.email}</div>\n                      ) : null}\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formServices\">\n                      <Select\n                        value={values.services}\n                        onChange={option => setFieldValue(\"services\", option)}\n                        name=\"services\"\n                        options={this.state.options}\n                        isMulti={true}\n                        placeholder={\"Services\"}\n                        className={touched.services && errors.services ? \"error\" : null}\n                      />\n                      {touched.services && errors.services ? (\n                        <div className=\"error-message\">{errors.services}</div>\n                      ) : null}\n                    </Form.Group>\n\n                    {/* Later make this work with store hours*/}\n                    <h4>Worker Hours</h4>\n\n                    <Form.Group controlId=\"formHoursMonday\">\n                      <Form.Row className=\"text-left\">\n                        <Col>\n                          <h5>Monday</h5>\n                          <Form.Check\n                            type=\"checkbox\"\n                            id=\"monday-toggle\"\n                            label=\"Working Today?\"\n                            checked={this.state.weekIsWorking[0]}\n                            onChange={() => this.handleDayStatusChange(0)}\n                          />\n                        </Col>\n                      </Form.Row>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[0]} value={this.state.workerHours[0].start_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateStartTimesForDay day={0} />\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[0]} value={this.state.workerHours[0].end_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateEndTimesForDay day={0} />\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formHoursTuesday\">\n                      <Form.Row className=\"text-left\">\n                        <Col>\n                          <h5>Tuesday</h5>\n                          <Form.Check\n                            type=\"checkbox\"\n                            id=\"tuesday-toggle\"\n                            label=\"Working Today?\"\n                            checked={this.state.weekIsWorking[1]}\n                            onChange={() => this.handleDayStatusChange(1)}\n                          />\n                        </Col>\n                      </Form.Row>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[1]} value={this.state.workerHours[1].start_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateStartTimesForDay day={1} />\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[1]} value={this.state.workerHours[1].end_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateEndTimesForDay day={1} />\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n\n                    <Form.Group controlId=\"formHoursWednesday\">\n                      <Form.Row className=\"text-left\">\n                        <Col>\n                          <h5>Wednesday</h5>\n                          <Form.Check\n                            type=\"checkbox\"\n                            id=\"wednesday-toggle\"\n                            label=\"Working Today?\"\n                            checked={this.state.weekIsWorking[2]}\n                            onChange={() => this.handleDayStatusChange(2)}\n                          />\n                        </Col>\n                      </Form.Row>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[2]} value={this.state.workerHours[2].start_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateStartTimesForDay day={2} />\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[2]} value={this.state.workerHours[2].end_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateEndTimesForDay day={2} />\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formHoursThursday\">\n                      <Form.Row className=\"text-left\">\n                        <Col>\n                          <h5>Thursday</h5>\n                          <Form.Check\n                            type=\"checkbox\"\n                            id=\"thursday-toggle\"\n                            label=\"Working Today?\"\n                            checked={this.state.weekIsWorking[3]}\n                            onChange={() => this.handleDayStatusChange(3)}\n                          />\n                        </Col>\n                      </Form.Row>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[3]} value={this.state.workerHours[3].start_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateStartTimesForDay day={3} />\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[3]} value={this.state.workerHours[3].end_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateEndTimesForDay day={3} />\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n\n                    <Form.Group controlId=\"formHoursFriday\">\n                      <Form.Row className=\"text-left\">\n                        <Col>\n                          <h5>Friday</h5>\n                          <Form.Check\n                            type=\"checkbox\"\n                            id=\"friday-toggle\"\n                            label=\"Working Today?\"\n                            checked={this.state.weekIsWorking[4]}\n                            onChange={() => this.handleDayStatusChange(4)}\n                          />\n                        </Col>\n                      </Form.Row>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[4]} value={this.state.workerHours[4].start_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateStartTimesForDay day={4} />\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[4]} value={this.state.workerHours[4].end_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateEndTimesForDay day={4} />\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formHoursSaturday\">\n                      <Form.Row className=\"text-left\">\n                        <Col>\n                          <h5>Saturday</h5>\n                          <Form.Check\n                            type=\"checkbox\"\n                            id=\"saturday-toggle\"\n                            label=\"Working Today?\"\n                            checked={this.state.weekIsWorking[5]}\n                            onChange={() => this.handleDayStatusChange(5)}\n                          />\n                        </Col>\n                      </Form.Row>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[5]} value={this.state.workerHours[5].start_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateStartTimesForDay day={5} />\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[5]} value={this.state.workerHours[5].end_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateEndTimesForDay day={5} />\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n\n                    <Form.Group controlId=\"formHoursSunday\">\n                      <Form.Row className=\"text-left\">\n                        <Col>\n                          <h5>Sunday</h5>\n                          <Form.Check\n                            type=\"checkbox\"\n                            id=\"sunday-toggle\"\n                            label=\"Working Today?\"\n                            checked={this.state.weekIsWorking[6]}\n                            onChange={() => this.handleDayStatusChange(6)}\n                          />\n                        </Col>\n                      </Form.Row>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[6]} value={this.state.workerHours[6].start_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateStartTimesForDay day={6} />\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[6]} value={this.state.workerHours[6].end_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateEndTimesForDay day={6} />\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n                    <Button onClick={handleSubmit}>Submit</Button>\n                  </Form>\n                )}\n            </Formik>\n          </Col>\n        </Row>\n      } \n    }\n\n    return (\n      <Container fluid>\n        <DisplayWithLoading/>\n      </Container>\n    );\n  }\n}\n\nexport default AddWorkerForm;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { Button } from 'react-bootstrap';\nimport './Worker.css'\n// import {\n//   addAlert\n// } from '../../reduxFolder/actions'\n// import store from '../../reduxFolder/store';\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nclass WorkerDashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      workers: [],\n      redirectToWorkerEditForm: null,\n      redirectToWorkerDisplay: null\n    }\n  }\n\n  triggerWorkerEditForm(workerPassed) {\n    this.props.history.push({\n      pathname: '/stores/' + this.props.match.params.store_id + '/workers/' + workerPassed.id + '/edit',\n      state: {\n        worker: workerPassed\n      }\n    })\n  }\n\n  triggerWorkerDisplay(workerPassed) {\n    this.props.history.push({\n      pathname: '/stores/' + this.props.match.params.store_id + '/workers/' + workerPassed.id,\n      state: {\n        worker: workerPassed\n      }\n    })\n  }\n\n  triggerAddWorker() {\n    this.props.history.push({\n      pathname: '/stores/addWorker/' + this.props.match.params.store_id\n    })\n  }\n\n  componentDidMount() {\n    if(this.props.location.state && this.props.location.state.workers){\n      this.setState({\n        workers: this.props.location.state.workers\n      })\n    }\n    else{\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/workers', {\n        method: \"GET\",\n        headers: {\n            'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      })\n      .then(function(response){\n        if(response.status!==200){\n          // throw an error alert\n          // store.dispatch(addAlert(response))\n        }\n        else{\n          return response.json();\n        }\n      })\n      .then(data => {\n        if(data){\n          this.setState({\n            workers: data\n          })\n        }\n      });\n    }\n  }\n\n  render() {\n    let workers = null;\n    if(this.state.workers.length != 0){\n      workers = <div>\n                  {this.state.workers.map(worker => (\n                    <Col key={\"worker-\" + worker.id}>\n                      <Button onClick={() => this.triggerWorkerDisplay(worker)}>Show Worker</Button>\n                      <Button onClick={() => this.triggerWorkerEditForm(worker)}>Edit Worker</Button>\n                    </Col>\n                  ))}\n                </div>\n    }\n    else{\n      workers = <div>\n                  <p className=\"noResults\">No Workers!</p>\n                  <Button onClick={() => this.triggerAddWorker()}>Add Worker</Button>\n                </div>\n    }\n\n    return (\n      <Container fluid>\n        <Row className=\"justify-content-center\">\n          {workers}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default WorkerDashboard;","import React from 'react';\nimport '../../App.css';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport Select from 'react-select';\nimport {\n  addAlert\n} from '../../reduxFolder/actions/alert'\nimport store from '../../reduxFolder/store';\nimport GridLoader from 'react-spinners/GridLoader'\nimport { css } from '@emotion/core'\nimport { withRouter } from \"react-router\"\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\nconst override = css`\n  display: block;\n  margin: 0 auto;\n`;\n\n\nclass WorkerEditForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      worker: {\n        id: 0,\n        store_id: 0,\n        services: [],\n        user_id: 0,\n        created_at: \"\",\n        first_name: \"\",\n        last_name: \"\"\n      },\n      options: [\n        { value: 0, label: 'Brazilian Blowout' },\n        { value: 1, label: 'Manicure' },\n      ],\n      serviceMapping: {\n        0: \"Brazilian Blowout\",\n        1: \"Manicure\"\n      },\n      storeHours: [\n        { day_of_the_week: 0, start_time: 0, end_time: 0}, \n        { day_of_the_week: 1, start_time: 0, end_time: 0},\n        { day_of_the_week: 2, start_time: 0, end_time: 0},\n        { day_of_the_week: 3, start_time: 0, end_time: 0},\n        { day_of_the_week: 4, start_time: 0, end_time: 0},\n        { day_of_the_week: 5, start_time: 0, end_time: 0},\n        { day_of_the_week: 6, start_time: 0, end_time: 0}\n      ],\n      workerHours: [\n        { day_of_the_week: 0, start_time: 0, end_time: 0}, \n        { day_of_the_week: 1, start_time: 0, end_time: 0},\n        { day_of_the_week: 2, start_time: 0, end_time: 0},\n        { day_of_the_week: 3, start_time: 0, end_time: 0},\n        { day_of_the_week: 4, start_time: 0, end_time: 0},\n        { day_of_the_week: 5, start_time: 0, end_time: 0},\n        { day_of_the_week: 6, start_time: 0, end_time: 0}\n      ],\n      loading: true,\n      newHours: [],\n      weekIsWorking: [true, true, true, true, true, true, true]\n    };\n\n    // Schema for yup\n    // this.yupValidationSchema = Yup.object().shape({\n    //   services: Yup.string()\n    //     .required(\"Service is required\")\n    //   // .nullable()\n    // });\n\n    this.triggerWorkerDisplay = this.triggerWorkerDisplay.bind(this);\n  }\n\n  // redirect to the store display page and pass the new store data\n  triggerWorkerDisplay(returnedWorker) {\n    this.props.history.push({\n      pathname: '/stores/' + this.props.match.params.store_id + '/workers/' + this.props.match.params.worker_id,\n      state: {\n        worker: returnedWorker\n      }\n    })\n  }\n\n  convertMinsToHrsMins(mins) {\n    let h = Math.floor(mins / 60);\n    let m = mins % 60;\n    let am = false\n    if (h == 24) {\n      am = true\n      h -= 12\n    }\n    else if (h < 12) {\n      am = true\n    } else if (h != 12) {\n      h -= 12\n    }\n    h = h < 10 ? '0' + h : h;\n    if (h == 0) {\n      h = '12'\n    }\n    m = m < 10 ? '0' + m : m;\n    if (am) {\n      return `${h}:${m}am`;\n    } else {\n      return `${h}:${m}pm`;\n    }\n\n  }\n\n  handleSelectChange = (event) => {\n    var days = ['formHoursMonday', 'formHoursTuesday', 'formHoursWednesday', 'formHoursThursday', 'formHoursFriday', 'formHoursSaturday', 'formHoursSunday']\n    var day = days.indexOf(event.target.id)\n    var updateNewHours = this.state.newHours\n    var old_start_time = 0\n    var old_end_time = 0\n    var newWorkerHours = []\n    if (this.state.newHours[day]) {\n      old_start_time = this.state.newHours[day].start_time\n      old_end_time = this.state.newHours[day].end_time\n    } else {\n      old_start_time = this.state.workerHours[day].start_time\n      old_end_time = this.state.workerHours[day].end_time\n    }\n\n    if (parseInt(event.target.querySelector('option').value) <= 840) {\n      updateNewHours[day] = { start_time: parseInt(event.target.value), end_time: old_end_time }\n      newWorkerHours = [\n        ...this.state.workerHours.slice(0, day),\n        { start_time: parseInt(event.target.value), end_time: old_end_time },\n        ...this.state.workerHours.slice(day + 1)\n      ]\n    } else {\n      updateNewHours[day] = { start_time: old_start_time, end_time: parseInt(event.target.value) }\n      newWorkerHours = [\n        ...this.state.workerHours.slice(0, day),\n        { start_time: old_start_time, end_time: parseInt(event.target.value) },\n        ...this.state.workerHours.slice(day + 1)\n      ]\n    }\n\n    this.setState({\n      newHours: updateNewHours,\n      workerHours: newWorkerHours\n    })\n  };\n\n  handleDayStatusChange = (day) => {\n    var updateWeekIsWorking = [\n      ...this.state.weekIsWorking.slice(0, day),\n      !this.state.weekIsWorking[day],\n      ...this.state.weekIsWorking.slice(day + 1)\n    ]\n\n    this.setState({\n      weekIsWorking: updateWeekIsWorking\n    })\n  };\n\n  componentDidMount() {\n    if(this.props.location.state && this.props.location.state.worker){\n      this.setState({\n        worker: this.props.location.state.worker\n      })\n    }\n    else{\n      // first we fetch the service itself\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/workers/' + this.props.match.params.worker_id, {\n        method: \"GET\",\n        headers: {\n            'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      })\n      .then(function(response){\n        if(response.status!==200){\n          // throw an error alert\n          store.dispatch(addAlert(response))\n        }\n        else{\n          return response.json();\n        }\n      })\n      .then(data => {\n        if(data){\n          this.setState({\n            worker: this.props.location.state.worker\n          })\n        }\n      });\n    }\n\n    Promise.all([\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/workers/' + this.props.match.params.worker_id + '/hours', {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      }).then(value => value.json()),\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/storeHours\", {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      }).then(value => value.json())\n    ]).then(allResponses => {\n      this.setState({\n        storeHours: allResponses[1],\n        workerHours: allResponses[0],\n        loading: false\n      })\n    })\n  }\n\n  render() {\n    const CreateStartTimesForDay = (props) => {\n      let items = [];\n      for (let i = this.state.storeHours[props.day].open_time; i <= 840; i += 60) {\n        items.push(<option key={i} value={i}>{this.convertMinsToHrsMins(i)}</option>);\n      }\n      return items;\n    }\n    const CreateEndTimesForDay = (props) => {\n      let items = [];\n      for (let i = 900; i <= this.state.storeHours[props.day].close_time; i += 60) {\n        items.push(<option key={i} value={i}>{this.convertMinsToHrsMins(i)}</option>);\n      }\n      return items;\n    }\n\n    const DisplayWithLoading = (props) => {\n      if (this.state.loading) {\n        return <Row className=\"vertical-center\">\n          <Col>\n            <GridLoader\n              css={override}\n              size={20}\n              color={\"#2196f3\"}\n              loading={this.state.isLoading}\n            />\n          </Col>\n        </Row>\n      } else {\n        return <Row className=\"justify-content-center\">\n          <Col>\n            <Formik\n              enableReinitialize\n              initialValues={{\n                services: this.state.worker.services,\n                id: this.state.worker.id,\n                store_id: this.state.worker.store_id,\n                user_id: this.state.worker.user_id,\n                created_at: this.state.worker.created_at,\n                first_name: this.state.worker.first_name,\n                last_name: this.state.worker.last_name,\n                newHours: this.state.newHours,\n                noChange: false\n              }}\n              validationSchema={this.yupValidationSchema}\n              onSubmit={(values) => {\n\n                let store_id = this.props.match.params.store_id\n                let worker_id = this.props.match.params.worker_id\n                let triggerWorkerDisplay = this.triggerWorkerDisplay;\n                values.newHours.map((day, index) => {\n                  if(this.state.weekIsWorking[index]){\n                    return day\n                  } else {\n                    return {start_time: null, end_time: null}\n                  }\n                })\n                // not sure if we need this, commenting it out for now\n                // if(JSON.stringify(values.services)==JSON.stringify(this.state.receivedServices)) {\n                //   values.noChange = true\n                // }\n\n                fetch(fetchDomain + '/stores/' + store_id + '/workers/' + worker_id, {\n                  method: \"POST\",\n                  headers: {\n                    'Content-type': 'application/json'\n                  },\n                  credentials: 'include',\n                  body: JSON.stringify(values)\n                })\n                  .then(function (response) {\n                    if (response.status !== 200) {\n                      store.dispatch(addAlert(response))\n                    }\n                    else {\n                      // redirect to worker page\n                      return response.json()\n                    }\n                  })\n                  .then(data => {\n                    if (data) {\n                      // this.props.updateWorker(this.state.worker, this.state.newHours, values.services)\n                      triggerWorkerDisplay(data)\n                    }\n                  });\n              }}\n            >\n              {({ values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                setFieldValue }) => (\n                  <Form>\n                    <h3>Worker Edit</h3>\n\n                    {/* Later make this work with store hours*/}\n                    <h4>Worker Hours</h4>\n\n                    <Form.Group controlId=\"formHoursMonday\">\n                      <Form.Row className=\"text-left\">\n                        <Col>\n                          <h5>Monday</h5>\n                          <Form.Check\n                            type=\"checkbox\"\n                            id=\"monday-toggle\"\n                            label=\"Working Today?\"\n                            checked={this.state.weekIsWorking[0]}\n                            onChange={() => this.handleDayStatusChange(0)}\n                          />\n                        </Col>\n                      </Form.Row>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[0]} value={this.state.workerHours[0].start_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateStartTimesForDay day={0} />\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[0]} value={this.state.workerHours[0].end_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateEndTimesForDay day={0} />\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formHoursTuesday\">\n                      <Form.Row className=\"text-left\">\n                        <Col>\n                          <h5>Tuesday</h5>\n                          <Form.Check\n                            type=\"checkbox\"\n                            id=\"tuesday-toggle\"\n                            label=\"Working Today?\"\n                            checked={this.state.weekIsWorking[1]}\n                            onChange={() => this.handleDayStatusChange(1)}\n                          />\n                        </Col>\n                      </Form.Row>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[1]} value={this.state.workerHours[1].start_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateStartTimesForDay day={1} />\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[1]} value={this.state.workerHours[1].end_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateEndTimesForDay day={1} />\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n\n                    <Form.Group controlId=\"formHoursWednesday\">\n                      <Form.Row className=\"text-left\">\n                        <Col>\n                          <h5>Wednesday</h5>\n                          <Form.Check\n                            type=\"checkbox\"\n                            id=\"wednesday-toggle\"\n                            label=\"Working Today?\"\n                            checked={this.state.weekIsWorking[2]}\n                            onChange={() => this.handleDayStatusChange(2)}\n                          />\n                        </Col>\n                      </Form.Row>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[2]} value={this.state.workerHours[2].start_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateStartTimesForDay day={2} />\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[2]} value={this.state.workerHours[2].end_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateEndTimesForDay day={2} />\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formHoursThursday\">\n                      <Form.Row className=\"text-left\">\n                        <Col>\n                          <h5>Thursday</h5>\n                          <Form.Check\n                            type=\"checkbox\"\n                            id=\"thursday-toggle\"\n                            label=\"Working Today?\"\n                            checked={this.state.weekIsWorking[3]}\n                            onChange={() => this.handleDayStatusChange(3)}\n                          />\n                        </Col>\n                      </Form.Row>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[3]} value={this.state.workerHours[3].start_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateStartTimesForDay day={3} />\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[3]} value={this.state.workerHours[3].end_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateEndTimesForDay day={3} />\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n\n                    <Form.Group controlId=\"formHoursFriday\">\n                      <Form.Row className=\"text-left\">\n                        <Col>\n                          <h5>Friday</h5>\n                          <Form.Check\n                            type=\"checkbox\"\n                            id=\"friday-toggle\"\n                            label=\"Working Today?\"\n                            checked={this.state.weekIsWorking[4]}\n                            onChange={() => this.handleDayStatusChange(4)}\n                          />\n                        </Col>\n                      </Form.Row>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[4]} value={this.state.workerHours[4].start_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateStartTimesForDay day={4} />\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[4]} value={this.state.workerHours[4].end_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateEndTimesForDay day={4} />\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formHoursSaturday\">\n                      <Form.Row className=\"text-left\">\n                        <Col>\n                          <h5>Saturday</h5>\n                          <Form.Check\n                            type=\"checkbox\"\n                            id=\"saturday-toggle\"\n                            label=\"Working Today?\"\n                            checked={this.state.weekIsWorking[5]}\n                            onChange={() => this.handleDayStatusChange(5)}\n                          />\n                        </Col>\n                      </Form.Row>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[5]} value={this.state.workerHours[5].start_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateStartTimesForDay day={5} />\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[5]} value={this.state.workerHours[5].end_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateEndTimesForDay day={5} />\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n\n                    <Form.Group controlId=\"formHoursSunday\">\n                      <Form.Row className=\"text-left\">\n                        <Col>\n                          <h5>Sunday</h5>\n                          <Form.Check\n                            type=\"checkbox\"\n                            id=\"sunday-toggle\"\n                            label=\"Working Today?\"\n                            checked={this.state.weekIsWorking[6]}\n                            onChange={() => this.handleDayStatusChange(6)}\n                          />\n                        </Col>\n                      </Form.Row>\n                      <Form.Row>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[6]} value={this.state.workerHours[6].start_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateStartTimesForDay day={6} />\n                          </Form.Control>\n                        </Col>\n                        <Col>\n                          <Form.Control as=\"select\" disabled={!this.state.weekIsWorking[6]} value={this.state.workerHours[6].end_time} onChange={this.handleSelectChange.bind(this)}>\n                            <CreateEndTimesForDay day={6} />\n                          </Form.Control>\n                        </Col>\n                      </Form.Row>\n                    </Form.Group>\n\n                    <Button onClick={handleSubmit}>Submit</Button>\n                  </Form>\n                )}\n            </Formik>\n          </Col>\n        </Row>\n      }\n    }\n\n    return (\n      <Container fluid>\n        <DisplayWithLoading />\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(WorkerEditForm);\n","import React from 'react';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Image from 'react-bootstrap/Image'\nimport Nav from 'react-bootstrap/Nav'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport './WorkerDisplay.css'\nimport Calendar from '../Calendar/CalendarPage'\nimport WorkerEditForm from './WorkerEditForm';\nimport GridLoader from 'react-spinners/GridLoader'\nimport { css } from '@emotion/core'\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n`;\n\nclass WorkerDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      worker: {\n        id: 0,\n        store_id: 0,\n        services: [],\n        user_id: 0,\n        created_at: \"\",\n        first_name: [],\n        last_name: \"\"\n      },\n      serviceMapping: {\n        0: \"Brazilian Blowout\",\n        1: \"Manicure\"\n      },\n      loading: true,\n      workerHours: [],\n      receivedServices: [],\n      selectedOption: [],\n      storeHours: [],\n      choice: 0,\n      daysOfWeek: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\n    }\n  }\n\n  convertMinsToHrsMins(mins) {\n    let h = Math.floor(mins / 60);\n    let m = mins % 60;\n    let am = false\n    if (h == 24) {\n      am = true\n      h -= 12\n    }\n    else if (h < 12) {\n      am = true\n    } else if (h != 12) {\n      h -= 12\n    }\n    h = h < 10 ? '0' + h : h;\n    if (h == 0) {\n      h = '12'\n    }\n    m = m < 10 ? '0' + m : m;\n    if (am) {\n      return `${h}:${m}am`;\n    } else {\n      return `${h}:${m}pm`;\n    }\n\n  }\n\n  updateWorker = (worker, newHours, services) => {\n    let updateHours = this.state.workerHours.map((dayHours, index) =>{\n      if(newHours[index] != null) {\n        return newHours[index]\n      } else {\n        return dayHours\n      }\n    })\n    this.setState({\n      worker: worker,\n      workerHours: updateHours,\n      receivedServices: services\n    })\n  }\n\n  updateContent = (selectedChoice) => {\n    this.setState({\n      choice: selectedChoice\n    })\n  };\n\n  componentDidMount() {\n    if (this.props.location && this.props.location.state && this.props.location.state.worker) {\n      let convertedServices = this.props.location.state.worker.services.map((service) => ({ value: service, label: this.state.serviceMapping[service] }));\n      Promise.all([\n        fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/workers/' + this.props.match.params.worker_id + '/hours', {\n          method: \"GET\",\n          headers: {\n            'Content-type': 'application/json'\n          },\n          credentials: 'include'\n        }).then(value => value.json()),\n        fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/storeHours\", {\n          method: \"GET\",\n          headers: {\n            'Content-type': 'application/json'\n          },\n          credentials: 'include'\n        }).then(value => value.json())\n      ]).then(allResponses => {\n        let receivedWorkerHours = allResponses[1].map((day) => ({ start_time: day.open_time, end_time: day.close_time }));\n        if (allResponses[0] && allResponses[0].length == 7) {\n          receivedWorkerHours = allResponses[0]\n        } else {\n          this.setState({\n            newHours: receivedWorkerHours\n          })\n        }\n        this.setState({\n          worker: this.props.location.state.worker,\n          receivedServices: this.props.location.state.worker.services,\n          storeHours: allResponses[1],\n          workerHours: receivedWorkerHours,\n          loading: false\n        })\n      })\n    }\n    else {\n      Promise.all([\n        fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/workers/' + this.props.match.params.worker_id, {\n          method: \"GET\",\n          headers: {\n            'Content-type': 'application/json'\n          },\n          credentials: 'include'\n        }).then(value => value.json()),\n        fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/storeHours\", {\n          method: \"GET\",\n          headers: {\n            'Content-type': 'application/json'\n          },\n          credentials: 'include'\n        }).then(value => value.json()),\n        fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/workers/' + this.props.match.params.worker_id + '/hours', {\n          method: \"GET\",\n          headers: {\n            'Content-type': 'application/json'\n          },\n          credentials: 'include'\n        }).then(value => value.json())\n      ]).then(allResponses => {\n        let convertedServices = allResponses[0].services.map((service) => ({ value: service, label: this.state.serviceMapping[service] }));\n        let receivedWorkerHours = allResponses[1].map((day) => ({ start_time: day.open_time, end_time: day.close_time }));\n\n        // If worker hours are not complete, we default them to store hours. Worker hours should be complete though. \n        if (allResponses[2] && allResponses[2].length == 7) {\n          receivedWorkerHours = allResponses[2]\n        } else {\n          this.setState({\n            newHours: receivedWorkerHours\n          })\n        }\n        this.setState({\n          worker: allResponses[0],\n          receivedServices: allResponses[0].services,\n          selectedOption: convertedServices,\n          storeHours: allResponses[1],\n          workerHours: receivedWorkerHours,\n          loading: false\n        })\n      })\n    }\n  }\n\n  render() {\n    const ListWorkingHours = () => {\n      let items = [];\n      for (let i = 0; i < this.state.workerHours.length; i++) {\n        if (this.state.workerHours[i].start_time != null) {\n          items.push(<Col sm=\"11\" md=\"10\" key={i}><ListGroup.Item>{this.state.daysOfWeek[i]}: {this.convertMinsToHrsMins(this.state.workerHours[i].start_time)}-{this.convertMinsToHrsMins(this.state.workerHours[i].end_time)}</ListGroup.Item></Col>);\n        }\n        else {\n          items.push(<Col sm=\"11\" md=\"10\" key={i}><ListGroup.Item>{this.state.daysOfWeek[i]}: Off</ListGroup.Item></Col>);\n        }\n      }\n      return items;\n    }\n\n    const RenderProfileContent = () => {\n      if(this.state.choice == 0) {\n        return <Calendar/>\n      } else if(this.state.choice == 1) {\n        return <WorkerEditForm worker={this.state.worker} receivedServices={this.state.receivedServices} selectedOption={this.state.selectedOption} storeHours={this.state.storeHours} workerHours={this.state.workerHours} updateWorker={this.updateWorker}/>\n      } else {\n        return <p>Past Appointments go here....</p>\n      }\n    }\n\n    const DisplayWithLoading = (props) => {\n      if (this.state.loading) {\n        return <Row className=\"vertical-center\">\n          <Col>\n            <GridLoader\n              css={override}\n              size={20}\n              color={\"#2196f3\"}\n              loading={this.state.isLoading}\n            />\n          </Col>\n        </Row>\n      } else {\n        {/* CITATION: https://bootsnipp.com/snippets/M48pA */}\n        return <Row className=\"profile\">\n        <Col xs=\"11\" md=\"3\">\n        <div className=\"profile-sidebar\">\n            {/* <!-- SIDEBAR USERPIC --> */}\n            <div className=\"profile-userpic\">\n              <Image src=\"https://i.redd.it/v0caqchbtn741.jpg\" className=\"img-responsive\" alt=\"\" rounded />\n            </div>\n            {/* <!-- END SIDEBAR USERPIC --> */}\n\n            {/* <!-- SIDEBAR USER TITLE --> */}\n            <div className=\"profile-usertitle\">\n              <div className=\"profile-usertitle-name\">\n                {this.state.worker.first_name + \" \" + this.state.worker.last_name}\n              </div>\n              <div className=\"profile-usertitle-job\">\n                Stylist\n              </div>\n            </div>\n            {/* <!-- END SIDEBAR USER TITLE --> */}\n\n            {/* <!-- SIDEBAR BUTTONS --> */}\n            <div className=\"profile-userbuttons\">\n              <button type=\"button\" className=\"btn btn-success btn-sm\">Give a Raise</button>\n              <button type=\"button\" className=\"btn btn-danger btn-sm\">Lay Off</button>\n            </div>\n            {/* <!-- END SIDEBAR BUTTONS --> */}\n\n            {/* WORKING HOURS */}\n            <ListGroup variant=\"flush\">\n              <Row className=\"justify-content-center mt-4\">\n                <h5>Working Hours</h5>\n                <ListWorkingHours/>\n              </Row>\n            </ListGroup>\n            {/* END WORKING HOURS */}\n\n            {/* <!-- SIDEBAR MENU --> */}\n            <div className=\"profile-usermenu\">\n              <Nav defaultActiveKey=\"link-0\" className=\"flex-column\" variant=\"pills\">\n                <Nav.Link eventKey=\"link-0\" active={this.state.choice == 0} onClick={() => this.updateContent(0)}>Calendar</Nav.Link>\n                <Nav.Link eventKey=\"link-1\" active={this.state.choice == 1}  onClick={() => this.updateContent(1)}>Edit Profile</Nav.Link>\n                <Nav.Link eventKey=\"link-2\" active={this.state.choice == 2} onClick={() => this.updateContent(2)}>Past Appointments</Nav.Link>\n              </Nav>\n            </div>\n            {/* <!-- END MENU --> */}\n\n          </div>\n        </Col>\n\n        <Col xs=\"11\" md=\"9\">\n        <div className=\"profile-content\">\n            <RenderProfileContent/>\n          </div>\n        </Col>\n          \n      </Row>\n      }\n    }\n    return (\n      <Container fluid>\n        {/* <Row className=\"justify-content-center\">\n          <Col>\n            <h1>{this.state.worker.first_name}</h1>\n            <p>{this.state.worker.last_name}</p>\n            <ul>\n                {this.state.worker.services.map((service, index) => (\n                  <li key={\"cat-\" + index}>{this.state.serviceMapping[service]}</li>\n                ))}\n              </ul>\n          </Col>\n        </Row> */}\n        <DisplayWithLoading/>\n        \n      </Container>\n    );\n  }\n}\n\nexport default WorkerDisplay;","import React from 'react';\nimport '../../App.css';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport { FaDollarSign, FaHandshake, FaHourglassHalf, FaPen } from 'react-icons/fa';\nimport { Formik } from 'formik';\nimport Select from 'react-select';\nimport * as Yup from 'yup';\nimport {\n  addAlert\n} from '../../reduxFolder/actions/alert'\nimport store from '../../reduxFolder/store';\n// import { uploadHandler } from '../s3';\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nclass AddServiceForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '', // assuming this is a unique value for file upload\n      cost: '',\n      duration: '',\n      description: '',\n      workers: [],\n      category: [],\n      store_id: '',\n      categoryOptions: [\n        { value: 'nails', label: 'Nails' },\n        { value: 'hair', label: 'Hair' }\n      ],\n      workerOptions: [],\n      selectedOption: null,\n      selectedFiles: null\n    };\n\n    // Schema for yup\n    this.yupValidationSchema = Yup.object().shape({\n      name: Yup.string()\n      .min(2, \"Name must have at least 2 characters\")\n      .max(100, \"Name can't be longer than 100 characters\")\n      .required(\"Name is required\"),\n      description: Yup.string()\n      .min(20, \"Description must have at least 20 characters\")\n      .required(\"Description is required\"), // will make it required soon,\n      cost: Yup.number()\n      .positive(\"Cost must be positive\")\n      // .integer()\n      .required(\"Cost is required\"),\n      duration: Yup.number()\n      .positive(\"Duration must be positive\")\n      .integer(\"Duration must be an integer\")\n      .required(\"Duration is required\"),\n      workers: Yup.array()\n      .required(\"Worker is required\")\n      .nullable(),\n      category: Yup.array()\n      .required(\"Category is required\")\n      .nullable()\n      // pictures: Yup.array()\n      // .required(\"Picture is required\")\n      // .nullable()\n    });\n\n    this.triggerServiceDisplay = this.triggerServiceDisplay.bind(this);\n  }\n\n  componentDidMount() {\n    // need to get store category, fetch?\n    fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/workers\" , {\n      method: \"GET\",\n      headers: {\n          'Content-type': 'application/json'\n      },\n      credentials: 'include'\n    })\n    .then(function(response){\n      if(response.status!==200){\n        // throw an error alert\n        store.dispatch(addAlert(response))\n      }\n      else{\n        return response.json();\n      }\n    })\n    .then(data => {\n      if(data){\n        let convertedWorkers = data.map((worker) => ({ value: worker.id, label: worker.first_name + \" \" + worker.last_name }));\n        this.setState({\n          workerOptions: convertedWorkers\n        })\n      }\n    });\n  }\n\n  // redirect to the worker display page\n  componentDidUpdate(prevProps, prevState)  {\n    if (prevProps.service !== this.props.service) {\n      this.props.history.push({\n        pathname: '/stores/' + this.props.service.store_id + '/services/' + this.props.service.id\n      })\n    }\n  }\n\n  // redirect to the worker display page and pass the new worker data\n  triggerServiceDisplay(service) {\n    this.props.history.push({\n      pathname: '/stores/' + service.store_id + '/services/' + service.id,\n      state: {\n        service: service\n      }\n    })\n  }\n\n\n  fileChangedHandler = event => {\n    this.setState({ selectedFiles: event.target.files })\n  }\n    \n  render() {\n    return (\n      <Container fluid>\n        <Row className=\"justify-content-center\">\n          <Col xs={8} sm={7} md={6} lg={5}>\n            <Formik\n              enableReinitialize\n              initialValues={{\n                name: '',\n                cost: '',\n                duration: '',\n                description: '',\n                pictures: [],\n                workers: [],\n                category: [],\n                store_id: this.props.match.params.store_id\n              }}\n              validationSchema={this.yupValidationSchema}\n              onSubmit={async (values, {setSubmitting }) => {\n                let store_id = this.props.match.params.store_id\n                let triggerServiceDisplay = this.triggerServiceDisplay\n\n                values.category = values.category.map(function(val){ \n                  return val.label; \n                })\n\n                values.workers = values.workers.map(function(val){ \n                  return val.value; \n                })\n\n                // upload to s3 from client to avoid burdening back end\n                // let prefix = 'stores/' + this.props.match.params.store_id + '/services/' + values.name + '/'\n                // await uploadHandler(prefix, this.state.selectedFiles)\n\n                fetch(fetchDomain + '/stores/addService/' + store_id, {\n                  method: \"POST\",\n                  headers: {\n                    'Content-type': 'application/json'\n                  },\n                  credentials: 'include',\n                  body: JSON.stringify(values)\n                })\n                .then(function(response){\n                  if(response.status!==200){\n                    store.dispatch(addAlert(response))\n                  }\n                  else{\n                    return response.json();\n                  }\n                })\n                .then(function(data){\n                  // redirect to home page signed in\n                  if(data){\n                    triggerServiceDisplay(data)\n                  }\n                })\n\n                setSubmitting(false)\n              }}\n            >\n            {( {values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                setFieldValue}) => (\n              <Form className=\"formBody rounded\">\n                <h3>Add Service</h3>\n\n                <Form.Group controlId=\"formService\">\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                            <FaHandshake/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control type=\"text\" \n                      value={values.name} \n                      placeholder=\"Name of Service\" \n                      name=\"name\" \n                      onChange={handleChange} \n                      onBlur={handleBlur}\n                      className={touched.name && errors.name ? \"error\" : null}/>\n                  </InputGroup>\n                  {touched.name && errors.name ? (\n                    <div className=\"error-message\">{errors.name}</div>\n                  ): null}\n                </Form.Group>\n\n                <Form.Group controlId=\"formCost\">\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                            <FaDollarSign/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control type=\"text\" \n                    value={values.cost}\n                    placeholder=\"Cost\" \n                    name=\"cost\" \n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    className={touched.cost && errors.cost ? \"error\" : null}/>\n                  </InputGroup>\n                  {touched.cost && errors.cost ? (\n                    <div className=\"error-message\">{errors.cost}</div>\n                  ): null}\n                </Form.Group>\n\n                <Form.Group controlId=\"formDuration\">\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                            <FaHourglassHalf/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control \n                      type=\"text\"\n                      value={values.duration}\n                      placeholder=\"Duration (in min)\" \n                      name=\"duration\" \n                      onChange={handleChange} \n                      onBlur={handleBlur}\n                      className={touched.duration && errors.duration ? \"error\" : null}/>\n                  </InputGroup>\n                  {touched.duration && errors.duration ? (\n                    <div className=\"error-message\">{errors.duration}</div>\n                  ): null}\n                </Form.Group>\n\n                <Form.Group controlId=\"formDescription\">\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                          <FaPen/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control \n                      type=\"textarea\"\n                      rows={3}\n                      value={values.description}\n                      placeholder=\"Description\" \n                      name=\"description\" \n                      onChange={handleChange} \n                      onBlur={handleBlur}\n                      className={touched.description && errors.description ? \"error\" : null}/>\n                  </InputGroup>\n                  {touched.description && errors.description ? (\n                    <div className=\"error-message\">{errors.description}</div>\n                  ): null}\n                </Form.Group>\n\n                <Form.Group controlId=\"formWorkers\">\n                  <Select\n                    value={values.workers}\n                    onChange={option => setFieldValue(\"workers\", option)}\n                    name=\"workers\"\n                    options={this.state.workerOptions}\n                    isMulti={true}\n                    placeholder={\"Assigned Workers\"}\n                    className={touched.workers && errors.workers ? \"error\" : null}\n                  />\n                  {touched.workers && errors.workers ? (\n                    <div className=\"error-message\">{errors.workers}</div>\n                  ): null}\n                </Form.Group>\n\n                <Form.Group controlId=\"formCategory\">\n                  <Select\n                    value={values.category}\n                    onChange={option => setFieldValue(\"category\", option)}\n                    name=\"category\"\n                    options={this.state.categoryOptions}\n                    isMulti={true}\n                    placeholder={\"Category\"}\n                    className={touched.category && errors.category ? \"error\" : null}\n                  />\n                  {touched.category && errors.category ? (\n                    <div className=\"error-message\">{errors.category}</div>\n                  ): null}\n                </Form.Group>\n\n                <Form.Group controlId=\"formPictures\">\n                  <input \n                    onChange={this.fileChangedHandler}\n                    type=\"file\"\n                    multiple\n                    className={touched.pictures && errors.pictures ? \"error\" : null}\n                  />\n                  {touched.pictures && errors.pictures ? (\n                    <div className=\"error-message\">{errors.pictures}</div>\n                  ): null}\n                </Form.Group>\n\n                <Button onClick={handleSubmit}>Submit</Button>\n              </Form>\n            )}\n            </Formik>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\n// const mapStateToProps = state => ({\n//   service: state.serviceReducer.service,\n//   workerOptions: state.workerReducer.workerOptions\n// })\n\n// const mapDispatchToProps = dispatch => bindActionCreators({\n//   addService: (service, store_id) => addService(service, store_id),\n//   getWorkerOptions: (store_id) => getWorkerOptions(store_id)\n// }, dispatch)\n\n// export default connect(mapStateToProps, mapDispatchToProps)(AddServiceForm);\nexport default AddServiceForm;","// this component is ready to be reusable for WorkerDashboard.js, if we decide that it can have the same\n// view as this one... just need to rename to StoreserviceDashboard.js\n\nimport React from 'react';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { Button } from 'react-bootstrap';\n// import {\n//   addAlert\n// } from '../../reduxFolder/actions'\n// import store from '../../reduxFolder/store';\nimport './Services.css';\n// import eyelash from '../../assets/eyelash4.png';\n// import wedding from '../../assets/wedding.jpg';\n// import gel from '../../assets/gel.jpg';\nimport { FaEdit } from 'react-icons/fa';\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nconst colors = ['#f0d1d9', '#f7e5e4', '#d6ced3'];\n\nclass ServiceDashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      services: [\n        // {\n        //   id: '0',\n        //   name: 'Eyelash Remove',\n        //   category: 'Eyelashes',\n        //   cost: '25',\n        //   duration: '20',\n        //   description: 'Remove your eyelashes or something like that',\n        //   workers: ['Tiffany', 'Yuki'],\n        //   // pictures: [eyelash]\n        // },\n        // {\n        //   id: '1',\n        //   name: 'Gel Manicure',\n        //   category: 'Nails',\n        //   cost: '30',\n        //   duration: '60',\n        //   description: 'Its like a regular manicure, with gel!',\n        //   workers: ['Tiffany', 'Yuki'],\n        //   // pictures: [gel]\n        // },\n        // {\n        //   id: '2',\n        //   name: 'Wedding Makeup',\n        //   category: 'Makeup',\n        //   cost: '200',\n        //   duration: '120',\n        //   description: 'Full face makeup or something for your big day',\n        //   workers: ['Tiffany', 'Yuki'],\n        //   // pictures: [wedding]\n        // },\n      ]\n    }\n  }\n\n  triggerServiceEdit(servicePassed) {\n    this.props.history.push({\n      pathname: '/stores/' + this.props.match.params.store_id + \"/services/\" + servicePassed.id + '/edit',\n      state: {\n        service: servicePassed\n      }\n    })\n  }\n\n  triggerServiceDisplay(servicePassed) {\n    this.props.history.push({\n      pathname: '/stores/' + this.props.match.params.store_id + \"/services/\" + servicePassed.id,\n      state: {\n        service: servicePassed\n      }\n    })\n  }\n\n  triggerAddService() {\n    this.props.history.push({\n      pathname: '/stores/addService/' + this.props.match.params.store_id\n    })\n  }\n\n  componentDidMount() {\n    if(this.props.location.state && this.props.location.state.services){\n      this.setState({\n        services: this.props.location.state.services\n      })\n    }\n    else{\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/services/\", {\n        method: \"GET\",\n        headers: {\n            'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      })\n      .then(function(response){\n        if(response.status!==200){\n          // throw an error alert\n          // store.dispatch(addAlert(response))\n        }\n        else{\n          return response.json();\n        }\n      })\n      .then(data => {\n        if(data){\n          this.setState({\n            services: data\n          })\n        }\n      });\n    }\n  }\n\n  // need to add getPictures****\n\n\n  render() {\n    let services = null;\n\n    if(this.state.services.length > 0){\n      services = <Col>\n                    <p className=\"services_title\">My Services </p>\n                    <Button className=\"buttons\" onClick={() => this.triggerAddService()}>Add Service</Button>\n                    {/* <Button className=\"buttons\" onClick={() => this.triggerServiceEditForm()}>Edit Services</Button> */}\n                    <div className=\"service_container\">\n                      {this.state.services.map((service, indx) => (\n                        <Col key={\"service-\" + service.id}>\n\n                          <div className=\"service_card\">\n\n                          {/* {((service.id % 2) == 0) ? (\n                            <div className=\"service_img\">\n                              <img src={service.pictures[0]} style={{height: '500px', width:'100%'}}/>\n                            </div>\n                          ) : null} */}\n\n                            <div className=\"service_text\" style={{backgroundColor: `${colors[indx % 3]}`}}>\n                              <div className=\"fun_style\"> </div>\n                              <Col>\n                              <div className=\"title_container\" style={{backgroundColor: `${colors[indx % 3]}`}}>\n                                <span className=\"service_title\" onClick={() => this.triggerServiceDisplay(service)}> {service.name} </span>\n                                <FaEdit className=\"edit\" size={15} onClick={() => this.triggerServiceEdit(service)}/>\n                              </div>\n                              <Row>\n                                <div className=\"service_subtitle\">\n                                  <p> Category </p>\n                                  <p> Cost </p>\n                                  <p> Duration </p>\n                                  <p> Associated Workers </p>\n                                  <p> Description </p>\n                                </div>\n                                <div className=\"subtitle_values\" >\n                                  <p>  {service.category}  </p>\n                                  <p> $ {service.cost}  </p>\n                                  <p>  {service.duration} Minutes  </p>\n                                  <p> {service.workers} </p>\n                                  <p> {service.description} </p>\n                                </div>\n                              </Row>\n                            </Col>\n                            </div>\n\n                            {/* {((service.id % 2) != 0) ? (\n                              <div className=\"service_img\">\n                                <img src={service.pictures[0]} style={{height: '500px', width:'100%'}}/>\n                              </div>\n                            ) : null} */}\n\n                          </div>\n\n                        </Col>\n                      ))}\n                    </div>\n                  </Col>\n    }\n    else{\n      services = <div>\n                  <p className=\"noResults\">No Services!</p>\n                  <Button onClick={() => this.triggerAddService()}>Add Service</Button>\n                </div>\n    }\n    return (\n      <Container>\n        {services}\n      </Container>\n    );\n  }\n}\n\nexport default ServiceDashboard;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n// import {\n//   addAlert\n// } from '../../reduxFolder/actions'\n// import store from '../../reduxFolder/store';\nimport LargeCarousel from '../LargeCarousel';\n// import { getPictures } from '../s3'\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nclass ServiceDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      service: {\n        id: \"\",\n        name: \"\",\n        cost: \"\",\n        workers: [],\n        store_id: \"\",\n        category: \"\",\n        description: \"\"\n      },\n      pictures: []\n    }\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    // if (prevState.service !== this.state.service) {\n    //   let picturesFetched = await getPictures('stores/' + this.state.service.store_id + '/services/' + this.state.service.name + '/')\n    //   this.setState({\n    //     pictures: picturesFetched\n    //   })\n    // }\n\n    // can put this for now so we don't have to upload to s3\n    if(prevState.service !== this.state.service){\n      this.setState({\n        pictures: [\n          { \n            url: \"/hair.jpg\",\n            key: \"/hair.jpg\"\n          },\n          {\n            url: \"/nails.jpg\",\n            key: \"/nails.jpg\"\n          },\n          {\n            url: \"/salon.jpg\",\n            key: \"/salon.jpg\"\n          }\n        ]\n      })\n    }\n  }\n\n  async componentDidMount(): Promise<void> {\n    if(this.props.location.state && this.props.location.state.service){\n      \n      this.setState({\n        service: this.props.location.state.service\n      })\n    }\n    else{\n      const response = await fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/services/' + this.props.match.params.service_id, {\n        method: \"GET\",\n        headers: {\n            'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      })\n\n      const data = await response.json()\n      this.setState({\n        service: data\n      })\n    }\n\n    return Promise.resolve()\n  }\n\n  render() {\n    return (\n      <Container fluid>\n        <Row className=\"justify-content-center\">\n          <Col>\n            <h1>{this.state.service.name}</h1>\n            <p>{this.state.service.description}</p>\n          </Col>\n\n          <Col xs={10} sm={9} md={8} lg={7}>\n            <LargeCarousel className=\"carousel\" pictures={this.state.pictures}/>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default ServiceDisplay;","import React from 'react';\nimport '../../App.css';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport { FaDollarSign, FaHandshake, FaHourglassHalf, FaPen } from 'react-icons/fa';\nimport { Formik } from 'formik';\nimport Select from 'react-select';\nimport * as Yup from 'yup';\nimport {\n  addAlert\n} from '../../reduxFolder/actions/alert'\nimport store from '../../reduxFolder/store';\nimport { getPictures, deleteHandler, uploadHandler } from '../s3'\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nclass ServiceEditForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      service: {\n        id: \"\",\n        name: \"\",\n        cost: \"\",\n        workers: [],\n        store_id: \"\",\n        category: \"\",\n        description: \"\"\n      },\n      categoryOptions: [\n        { value: 'nails', label: 'Nails' },\n        { value: 'hair', label: 'Hair' }\n      ],\n      convertedCategory: [],\n      workerOptions: [],\n      selectedOption: null,\n      pictures: [],\n      keys: [],\n      selectedFiles: []\n    };\n\n    // Schema for yup\n    this.yupValidationSchema = Yup.object().shape({\n      name: Yup.string()\n      .min(2, \"Name must have at least 2 characters\")\n      .max(100, \"Name can't be longer than 100 characters\")\n      .required(\"Name is required\"),\n      description: Yup.string()\n      .min(20, \"Description must have at least 20 characters\")\n      .required(\"Description is required\"), // will make it required soon,\n      cost: Yup.number()\n      .positive(\"Cost must be positive\")\n      // .integer()\n      .required(\"Cost is required\"),\n      duration: Yup.number()\n      .positive(\"Duration must be positive\")\n      .integer(\"Duration must be an integer\")\n      .required(\"Duration is required\"),\n      workers: Yup.array()\n      .required(\"Worker is required\")\n      .nullable(),\n      category: Yup.array()\n      .required(\"Category is required\")\n      .nullable(),\n      pictureCount: Yup.number()\n      .required(\"Pictures are required\")\n      .min(1, \"Must have at least one picture\")\n    });\n\n    this.triggerServiceDisplay = this.triggerServiceDisplay.bind(this);\n  }\n\n  // redirect to the service display page and pass the new store data\n  triggerServiceDisplay(returnedService) {\n    this.props.history.push({\n      pathname: '/stores/' + this.props.match.params.store_id + '/services/' + this.props.match.params.service_id,\n      state: {\n        service: returnedService\n      }\n    })\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (prevState.service !== this.state.service) {\n      let picturesFetched = await getPictures('stores/' + this.state.service.store_id + '/services/' + this.state.service.name + '/')\n      this.setState({\n        pictures: picturesFetched\n      })\n    }\n\n    // can put this for now so we don't have to upload to s3\n    // this.setState({\n      // pictures: [\n      //   { \n      //     url: \"/hair.jpg\",\n      //     key: \"/hair.jpg\"\n      //   },\n      //   {\n      //     url: \"/nails.jpg\",\n      //     key: \"/nails.jpg\"\n      //   },\n      //   {\n      //     url: \"/salon.jpg\",\n      //     key: \"/salon.jpg\"\n      //   }\n      // ]\n    // })\n  }\n\n  deleteFileChangeHandler = async (event, setFieldValue, newPictureLength) => {\n    if(event.target.checked){\n      await this.state.keys.push(event.target.id)\n      console.log(this.state.pictures.length, newPictureLength, this.state.keys.length)\n      setFieldValue('pictureCount', this.state.pictures.length + newPictureLength - this.state.keys.length)\n    }\n    else{\n      await this.state.keys.pop(event.target.id)\n      console.log(this.state.pictures.length, newPictureLength, this.state.keys.length)\n      setFieldValue('pictureCount', this.state.pictures.length + newPictureLength - this.state.keys.length)\n    }\n  }\n\n  fileChangedHandler = (event, setFieldValue, pictures) => {\n    this.setState({ selectedFiles: event.target.files })\n    setFieldValue('pictureCount', this.state.pictures.length + event.target.files.length - this.state.keys.length)\n    setFieldValue('pictures', event.target.files)\n  }\n\n  componentDidMount() {\n    if(this.props.location.state && this.props.location.state.service){\n      // console.log(this.props.location.state.service)\n      let convertedCategoryData = this.props.location.state.service.category.map((str) => ({ value: str.toLowerCase(), label: str }));\n      // console.log(convertedCategoryData)\n      this.setState({\n        service: this.props.location.state.service,\n        convertedCategory: convertedCategoryData\n      })\n    }\n    else{\n      // first we fetch the service itself\n      fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + '/services/' + this.props.match.params.service_id, {\n        method: \"GET\",\n        headers: {\n            'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      })\n      .then(function(response){\n        if(response.status!==200){\n          // throw an error alert\n          store.dispatch(addAlert(response))\n        }\n        else{\n          return response.json();\n        }\n      })\n      .then(data => {\n        if(data){\n          let convertedCategoryData = data.category.map((str) => ({ value: str.toLowerCase(), label: str }));\n          this.setState({\n            service: data,\n            convertedCategory: convertedCategoryData\n          })\n        }\n      });\n\n\n\n      // // then we get the worker data to display for user\n      // // need to get store category, fetch?\n      // // refactor later to make it a get request\n      // // maybe have to refactor the whole table to keep track of names...?\n      // fetch(fetchDomain + '/stores/' + this.props.match.params.store_id + \"/workers\" , {\n      //   method: \"POST\",\n      //   headers: {\n      //       'Content-type': 'application/json'\n      //   },\n      //   credentials: 'include',\n      //   body: JSON.stringify(values)\n      // })\n      // .then(function(response){\n      //   console.log(response)\n      //   if(response.status!==200){\n      //     // should throw an error here\n      //     console.log(\"Error!\", response.status)\n      //     // throw new Error(response.status)\n      //     // window.location.href='/'\n      //   }\n      //   else{\n      //     return response.json();\n      //   }\n      // })\n      // .then(data => {\n      //   console.log(\"Limited store data from server:\", data)\n      //   let convertedWorkers = data.map((worker) => ({ value: worker.id, label: worker.first_name + \" \" + worker.last_name }));\n      //   this.setState({\n      //     workerOptions: convertedWorkers\n      //   })\n      // });\n    }\n  }\n\n  render() {\n    return (\n      <Container fluid>\n        <Row className=\"justify-content-center\">\n          <Col xs={8} sm={7} md={6} lg={5}>\n          <Formik\n              enableReinitialize\n              initialValues={{\n                name: this.state.service.name,\n                cost: this.state.service.cost,\n                duration: this.state.service.duration,\n                description: this.state.service.description,\n                pictures: [],\n                pictureCount: this.state.pictures.length - this.state.keys.length,\n                workers: this.state.service.workers,\n                category: this.state.convertedCategory,\n                store_id: this.props.match.params.store_id\n              }}\n              validationSchema={this.yupValidationSchema}\n              onSubmit={async (values) => {\n                let store_id = this.props.match.params.store_id\n                let service_id = this.props.match.params.service_id\n                let triggerServiceDisplay = this.triggerServiceDisplay\n\n                values.category = values.category.map(function(val){ \n                  return val.label; \n                })\n\n                // remove files from s3\n                // await deleteHandler(this.state.keys)\n\n                // upload new images to s3 from client to avoid burdening back end\n                // let prefix = 'stores/' + this.props.match.params.store_id + '/services/' + values.name + '/'\n                // await uploadHandler(prefix, this.state.selectedFiles)\n\n                // need to figure out this...\n                // values.workers = values.workers.map(function(val){ \n                //   return val.value; \n                // })\n\n                fetch(fetchDomain + '/stores/' + store_id + \"/services/\" + service_id, {\n                  method: \"POST\",\n                  headers: {\n                    'Content-type': 'application/json'\n                  },\n                  credentials: 'include',\n                  body: JSON.stringify(values)\n                })\n                .then(function(response){\n                  if(response.status!==200){\n                    store.dispatch(addAlert(response))\n                  }\n                  else{\n                    return response.json();\n                  }\n                })\n                .then(function(data){\n                  // redirect to home page signed in\n                  if(data){\n                    triggerServiceDisplay()\n                  }\n                })\n              }}\n            >\n            {( {values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                setFieldValue}) => (\n              <Form className=\"formBody rounded\">\n                <h3>Edit Service</h3>\n\n                <Form.Group controlId=\"formService\">\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                            <FaHandshake/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control type=\"text\" \n                      value={values.name} \n                      placeholder=\"Name of Service\" \n                      name=\"name\" \n                      onChange={handleChange} \n                      onBlur={handleBlur}\n                      className={touched.name && errors.name ? \"error\" : null}/>\n                  </InputGroup>\n                  {touched.name && errors.name ? (\n                    <div className=\"error-message\">{errors.name}</div>\n                  ): null}\n                </Form.Group>\n\n                <Form.Group controlId=\"formCost\">\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                            <FaDollarSign/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control type=\"text\" \n                    value={values.cost}\n                    placeholder=\"Cost\" \n                    name=\"cost\" \n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    className={touched.cost && errors.cost ? \"error\" : null}/>\n                  </InputGroup>\n                  {touched.cost && errors.cost ? (\n                    <div className=\"error-message\">{errors.cost}</div>\n                  ): null}\n                </Form.Group>\n\n                <Form.Group controlId=\"formDuration\">\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                            <FaHourglassHalf/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control \n                      type=\"text\"\n                      value={values.duration}\n                      placeholder=\"Duration (in min)\" \n                      name=\"duration\" \n                      onChange={handleChange} \n                      onBlur={handleBlur}\n                      className={touched.duration && errors.duration ? \"error\" : null}/>\n                  </InputGroup>\n                  {touched.duration && errors.duration ? (\n                    <div className=\"error-message\">{errors.duration}</div>\n                  ): null}\n                </Form.Group>\n\n                <Form.Group controlId=\"formDescription\">\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                          <FaPen/>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control \n                      type=\"textarea\"\n                      rows={3}\n                      value={values.description}\n                      placeholder=\"Description\" \n                      name=\"description\" \n                      onChange={handleChange} \n                      onBlur={handleBlur}\n                      className={touched.description && errors.description ? \"error\" : null}/>\n                  </InputGroup>\n                  {touched.description && errors.description ? (\n                    <div className=\"error-message\">{errors.description}</div>\n                  ): null}\n                </Form.Group>\n\n                {/* <Form.Group controlId=\"formWorkers\">\n                  <Select\n                    value={values.workers}\n                    onChange={option => setFieldValue(\"workers\", option)}\n                    name=\"workers\"\n                    options={this.state.workerOptions}\n                    isMulti={true}\n                    placeholder={\"Assigned Workers\"}\n                    className={touched.workers && errors.workers ? \"error\" : null}\n                  />\n                  {touched.workers && errors.workers ? (\n                    <div className=\"error-message\">{errors.workers}</div>\n                  ): null}\n                </Form.Group> */}\n\n                <Form.Group controlId=\"formCategory\">\n                  <Select\n                    value={values.category}\n                    onChange={option => setFieldValue(\"category\", option)}\n                    name=\"category\"\n                    options={this.state.categoryOptions}\n                    isMulti={true}\n                    placeholder={\"Category\"}\n                    className={touched.category && errors.category ? \"error\" : null}\n                  />\n                  {touched.category && errors.category ? (\n                    <div className=\"error-message\">{errors.category}</div>\n                  ): null}\n                </Form.Group>\n\n                <Form.Group controlId=\"pictureCount\">\n                  <Form.Label>Delete Images</Form.Label>\n                  {this.state.pictures.map((picture, index) => (\n                    <div key={\"pic-\" + index}>\n                      <img className=\"img-fluid\" src={picture.url} alt={\"Slide \" + index} />\n                      <Form.Check\n                        // style={{marginLeft: 30}}\n                        id={picture.key}\n                        label={picture.key.split('/').slice(-1)[0]}\n                        onChange={event => this.deleteFileChangeHandler(event, setFieldValue, values.pictures.length)}\n                      />\n                    </div>\n                  ))}\n                </Form.Group>\n\n                <Form.Group controlId=\"pictures\">\n                  <Form.Label>Add Images</Form.Label>\n                  <br/>\n                  <input \n                    onChange={event => this.fileChangedHandler(event, setFieldValue, values.pictures)}\n                    type=\"file\"\n                    multiple\n                    className={touched.pictures && errors.pictures ? \"error\" : null}\n                  />\n                  {touched.pictureCount && errors.pictureCount ? (\n                    <div className=\"error-message\">{errors.pictureCount}</div>\n                  ): null}\n                </Form.Group>\n\n                <Button onClick={handleSubmit}>Submit</Button>\n              </Form>\n            )}\n            </Formik>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default ServiceEditForm;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { Button, Card, ListGroup } from 'react-bootstrap';\nimport Cookies from 'js-cookie';\nimport { withRouter } from \"react-router-dom\";\nimport {\n  addAlert\n} from '../../reduxFolder/actions/alert'\nimport store from '../../reduxFolder/store';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport { css } from '@emotion/core'\nimport GridLoader from 'react-spinners/GridLoader'\nconst override = css`\n  display: block;\n  margin: 0 auto;\n`;\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nclass AppointmentDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      appointment: [],\n      start_time: 0,\n      user_id: 0,\n      end_time: 0,\n      store_name: '',\n      cost: 0,\n      service_names: [],\n      workers: [],\n      loading: true\n    }\n  }\n\n  deleteAppointment = () => {\n    fetch(fetchDomain + '/appointments/delete/' + this.props.match.params.group_id, {\n      method: \"GET\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      credentials: 'include'\n    })\n      .then(function (response) {\n        if (response.status !== 200) {\n          store.dispatch(addAlert(response))\n        }\n        else {\n          return response.json()\n        }\n      })\n      .then(data => {\n        store.dispatch(addAlert('Deleted Appointment'))\n        this.props.history.push({\n          pathname: '/'\n        })\n      });\n  }\n\n  triggerAppointmentCancel = () => {\n    confirmAlert({\n      title: 'Are you sure?',\n      message: 'You will be charged a cancellation fee by this store.',\n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.deleteAppointment()\n        },\n        {\n          label: 'No'\n        }\n      ]\n    });\n  }\n\n  convertMinsToHrsMins(mins) {\n    let h = Math.floor(mins / 60);\n    let m = mins % 60;\n    let am = false\n    if (h == 24) {\n      am = true\n      h -= 12\n    }\n    else if (h < 12) {\n      am = true\n    } else if (h != 12) {\n      h -= 12\n    }\n    h = h < 10 ? '0' + h : h;\n    if (h == 0) {\n      h = '12'\n    }\n    m = m < 10 ? '0' + m : m;\n    if (am) {\n      return `${h}:${m}am`;\n    } else {\n      return `${h}:${m}pm`;\n    }\n\n  }\n\n  componentDidMount() {\n    // Refactor to optimize if we were passed the appointment data from calling component\n    // if (this.props.location && this.props.location.state && this.props.location.state.appointment) {\n    //   this.setState({\n    //     appointment: this.props.location.state.appointment,\n    //     user_id: this.props.location.state.user_id,\n    //     start_time: this.props.location.state.start_time,\n    //     end_time: this.props.location.state.end_time,\n    //     store_name: this.props.location.state.store_name,\n    //     cost: this.props.location.state.cost,\n    //     workers: this.props.location.state.workers,\n    //     loading: false\n    //   })\n    // }\n    // else {\n      // retrieve the appointment data from the database\n      fetch(fetchDomain + '/appointments/display/' + this.props.match.params.group_id, {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      })\n        .then(function (response) {\n          if (response.status !== 200) {\n            // throw an error alert\n            store.dispatch(addAlert(response))\n          }\n          else {\n            return response.json();\n          }\n        })\n        .then(data => {\n          if (data) {\n            this.setState({\n              appointment: data.appointment,\n              user_id: data.user_id,\n              start_time: data.start_time,\n              end_time: data.end_time,\n              store_name: data.store_name,\n              cost: data.cost,\n              service_names: data.service_names,\n              workers: data.workers,\n              loading: false\n            })\n          }\n        });\n    // }\n  }\n\n  render() {\n    const DisplayWithLoading = (props) => {\n      if (this.state.loading) {\n        return <Row className=\"vertical-center\">\n          <Col>\n            <GridLoader\n              css={override}\n              size={20}\n              color={\"#2196f3\"}\n              loading={this.state.isLoading}\n            />\n          </Col>\n        </Row>\n      } else {\n        let cancelButton;\n        if (Cookies.get('user') && this.state.user_id == JSON.parse(Cookies.get('user').substring(2)).id) {\n          cancelButton = <Button variant=\"danger\" className=\"float-left\" onClick={() => this.triggerAppointmentCancel()}>Cancel Appointment</Button>\n        }\n        return <Row className=\"justify-content-md-center\">\n          <Col lg={5}>\n            <Card className=\"mt-5\">\n              <Card.Header as=\"h5\">Your Appointment at: {this.state.store_name}</Card.Header>\n              <Card.Body>\n                <Card.Text as=\"div\">\n                  <ListGroup as=\"div\" variant=\"flush\">\n                    <ListGroup.Item>Appointment Start Time: {this.convertMinsToHrsMins(this.state.start_time)}</ListGroup.Item>\n                    <ListGroup.Item>Appointment End Time: {this.convertMinsToHrsMins(this.state.end_time)}</ListGroup.Item>\n                    <ListGroup.Item>Services: {this.state.service_names.toString()}</ListGroup.Item>\n                    <ListGroup.Item>Total Cost: {this.state.cost}</ListGroup.Item>\n                    <ListGroup.Item>Scheduled Technicians: {this.state.workers.toString()}</ListGroup.Item>\n                  </ListGroup>\n                </Card.Text>\n                {cancelButton}\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      }\n    }\n\n    return (\n      <Container fluid>\n        <DisplayWithLoading />\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(AppointmentDisplay);","import React from 'react';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { Button, Card, ListGroup, Image } from 'react-bootstrap';\nimport Cookies from 'js-cookie';\nimport { withRouter } from \"react-router-dom\";\nimport {\n  addAlert\n} from '../../reduxFolder/actions/alert'\nimport store from '../../reduxFolder/store';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport { css } from '@emotion/core'\nimport GridLoader from 'react-spinners/GridLoader'\nconst override = css`\n  display: block;\n  margin: 0 auto;\n`;\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nclass AppointmentDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      appointment: [],\n      start_time: 0,\n      user_id: 0,\n      end_time: 0,\n      store_name_mappings: [],\n      store_ids: [],\n      cost: 0,\n      service_name_mappings: [],\n      grouped_service_ids: [],\n      workers: [],\n      loading: true\n    }\n  }\n\n  deleteAppointment = () => {\n    fetch(fetchDomain + '/appointments/delete/' + this.props.match.params.group_id, {\n      method: \"GET\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      credentials: 'include'\n    })\n      .then(function (response) {\n        if (response.status !== 200) {\n          store.dispatch(addAlert(response))\n        }\n        else {\n          return response.json()\n        }\n      })\n      .then(data => {\n        store.dispatch(addAlert('Deleted Appointment'))\n        this.props.history.push({\n          pathname: '/'\n        })\n      });\n  }\n\n  triggerAppointmentCancel = () => {\n    confirmAlert({\n      title: 'Are you sure?',\n      message: 'You will be charged a cancellation fee by this store.',\n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => this.deleteAppointment()\n        },\n        {\n          label: 'No'\n        }\n      ]\n    });\n  }\n\n  triggerAppointmentDisplay = (group_id) => {\n    this.props.history.push({\n      pathname: '/appointments/' + group_id\n    })\n  }\n\n  convertMinsToHrsMins(mins) {\n    let h = Math.floor(mins / 60);\n    let m = mins % 60;\n    let am = false\n    if (h == 24) {\n      am = true\n      h -= 12\n    }\n    else if (h < 12) {\n      am = true\n    } else if (h != 12) {\n      h -= 12\n    }\n    h = h < 10 ? '0' + h : h;\n    if (h == 0) {\n      h = '12'\n    }\n    m = m < 10 ? '0' + m : m;\n    if (am) {\n      return `${h}:${m}am`;\n    } else {\n      return `${h}:${m}pm`;\n    }\n\n  }\n\n  formatDate(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n\n    return [month, day, year].join('-');\n}\n\n  componentDidMount() {\n    // Refactor to optimize if we were passed the appointment data from calling component\n    // if (this.props.location && this.props.location.state && this.props.location.state.appointment) {\n    //   this.setState({\n    //     appointment: this.props.location.state.appointment,\n    //     user_id: this.props.location.state.user_id,\n    //     start_time: this.props.location.state.start_time,\n    //     end_time: this.props.location.state.end_time,\n    //     store_name: this.props.location.state.store_name,\n    //     cost: this.props.location.state.cost,\n    //     workers: this.props.location.state.workers,\n    //     loading: false\n    //   })\n    // }\n    // else {\n      // retrieve the appointment data from the database\n      fetch(fetchDomain + '/appointments/' + JSON.parse(Cookies.get('user').substring(2)).id, {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      })\n        .then(function (response) {\n          if (response.status !== 200) {\n            // throw an error alert\n            store.dispatch(addAlert(response))\n          }\n          else {\n            return response.json();\n          }\n        })\n        .then(data => {\n          if (data) {\n            if(Object.keys(data).length === 0 && data.constructor === Object) {\n              this.setState({\n                loading: false,\n                hasAppointments: false\n              })\n            } else {\n              this.setState({\n                store_ids: data.store_ids,\n                store_name_mappings: data.store_name_mappings,\n                dates: data.dates,\n                start_times: data.start_times, \n                end_times: data.end_times,\n                costs: data.costs,\n                group_ids: data.group_ids,\n                service_name_mappings: data.service_name_mappings,\n                grouped_service_ids: data.grouped_service_ids,\n                loading: false,\n                hasAppointments: true\n              })\n            }\n            \n          }\n        });\n    // }\n  }\n\n  render() {\n    //remove these props args if not needed\n    const ShowServices = (props) => {\n      let listGroupItems = [];\n      for (let i = 0; i < this.state.grouped_service_ids[props.index].length; i ++) {\n        listGroupItems.push(<ListGroup.Item key={this.state.grouped_service_ids[props.index][i]}>{this.state.service_name_mappings.find((element) => element.id == this.state.grouped_service_ids[props.index][i]).name}</ListGroup.Item>);\n      }\n      return listGroupItems;\n    }\n\n    const AppointmentList = (props) => {\n      let cards = [];\n      for (let i = 0; i < this.state.group_ids.length; i ++) {\n        cards.push(<Card style={{cursor: 'pointer'}} key={this.state.group_ids[i]}className=\"my-5\" onClick={() => this.triggerAppointmentDisplay(this.state.group_ids[i])}>\n          <Card.Header as=\"h4\">{this.state.store_name_mappings.find((element) => element.id == this.state.store_ids[i]).name} on {this.formatDate(this.state.dates[i])}</Card.Header>\n          <Card.Body>\n            <Card.Text as=\"div\">\n              <Row>\n                <Col>\n                  {this.convertMinsToHrsMins(this.state.start_times[i])} - {this.convertMinsToHrsMins(this.state.end_times[i])} ${this.state.costs[i]}\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <h5>Services Booked for Today</h5>\n                  <ListGroup as=\"div\" variant=\"flush\">\n                    <ShowServices index={i}/>\n                  </ListGroup>\n                </Col>\n              </Row>\n            </Card.Text>\n          </Card.Body>\n        </Card>);\n      }\n      return cards;\n    }\n\n    const DisplayWithLoading = (props) => {\n      if (this.state.loading) {\n        return <Row className=\"vertical-center\">\n          <Col>\n            <GridLoader\n              css={override}\n              size={20}\n              color={\"#2196f3\"}\n              loading={this.state.isLoading}\n            />\n          </Col>\n        </Row>\n      } else if (this.state.hasAppointments) {\n        let cancelButton;\n        if (Cookies.get('user') && this.state.user_id == JSON.parse(Cookies.get('user').substring(2)).id) {\n          cancelButton = <Button variant=\"danger\" className=\"float-left\" onClick={() => this.triggerAppointmentCancel()}>Cancel Appointment</Button>\n        }\n        return <Row className=\"justify-content-md-center\">\n          <Col lg={5}>\n            <AppointmentList/>\n          </Col>\n        </Row>\n      } else {\n        return <Card>\n          <Card.Header as=\"h4\">My Appointments</Card.Header>\n            <Card.Body>\n              <Card.Text as=\"div\">\n                <h5>Whoops, looks like you need to book an appointment with us first. </h5>\n                <Image src=\"https://s3.amazonaws.com/thumbnails.thecrimson.com/photos/2018/11/15/001152_1334195.jpg.1500x998_q95_crop-smart_upscale.jpg\"/>\n              </Card.Text>\n            </Card.Body>\n        </Card>\n      }\n    }\n\n    return (\n      <Container fluid>\n        <DisplayWithLoading />\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(AppointmentDisplay);","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport LoginForm from './components/User/LoginForm';\nimport SignupForm from './components/User/SignupForm';\nimport MainNavbar from './components/Navbar/MainNavbar';\nimport Homepage from './components/Home/Homepage';\nimport StaticPage from './components/StaticPages/StaticPage';\nimport SearchDisplay from './components/Search/SearchDisplay';\nimport ReservationPage from './components/Reservation/ReservationPage'\nimport './App.css';\nimport StoreSignupForm from './components/Store/StoreSignupForm';\nimport Calendar from './components/Calendar/CalendarPage';\nimport StoreDisplay from './components/Store/StoreDisplay';\nimport StoreEditForm from './components/Store/StoreEditForm';\nimport redirectWithoutAuth from './components/redirectWithoutAuth';\nimport redirectWithAuth from './components/redirectWithAuth';\nimport EditProfileForm from './components/User/EditProfileForm';\nimport Cookies from 'js-cookie';\nimport Profile from './components/User/Profile';\nimport UserStoresDashboard from './components/Store/UserStoresDashboard';\nimport AddWorkerForm from './components/Worker/AddWorkerForm';\nimport WorkerDashboard from './components/Worker/WorkerDashboard';\nimport WorkerDisplay from './components/Worker/WorkerDisplay';\nimport WorkerEditForm from './components/Worker/WorkerEditForm';\nimport AddServiceForm from './components/Service/AddServiceForm';\nimport ServiceDashboard from './components/Service/ServiceDashboard';\nimport ServiceDisplay from './components/Service/ServiceDisplay';\nimport ServiceEditForm from './components/Service/ServiceEditForm';\nimport AppointmentDisplay from './components/Appointments/AppointmentDisplay';\nimport {\n  userLogout\n} from './reduxFolder/actions/user'\nimport store from './reduxFolder/store';\nimport UserAppointments from './components/Appointments/UserAppointments';\n\nfunction App() {\n  function handleLogout() {\n    Cookies.remove(\"token\");\n    Cookies.remove(\"user\"); // don't think we need any cookies anymore now that redux persists to local storage for us...\n    store.dispatch(userLogout())\n    window.location.href='/'\n  }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <MainNavbar/>\n        <div className=\"App-body\">\n          <Switch>\n            <Route exact path=\"/\" component={Homepage} />\n            <Route exact path=\"/help\" component={StaticPage} />\n            <Route exact path=\"/about\" component={StaticPage} />\n            <Route path=\"/search\" component={SearchDisplay} />\n\n            <Route exact path=\"/login\" component={redirectWithAuth(LoginForm)} />\n            <Route exact path=\"/logout\" component={handleLogout}/>\n            <Route exact path=\"/signup\" component={SignupForm} />\n            <Route path=\"/users/edit/:user_id\" component={redirectWithoutAuth(EditProfileForm)}/>\n            <Route path=\"/users/:user_id/stores\" component={redirectWithoutAuth(UserStoresDashboard)}/>\n            <Route path=\"/users/:user_id/appointments\" component={redirectWithoutAuth(UserAppointments)}/>\n            <Route path=\"/users/:user_id\" component={redirectWithoutAuth(Profile)}/>\n\n            <Route exact path=\"/storeCalendar/:store_id\" component={redirectWithoutAuth(Calendar)} />\n            <Route path=\"/book/:store_id\" component={ReservationPage} />\n            <Route exact path=\"/store/signup\" component={redirectWithoutAuth(StoreSignupForm)} />\n            <Route path=\"/stores/edit/:store_id\" component={redirectWithoutAuth(StoreEditForm)}/>\n\n            <Route path=\"/stores/addService/:store_id\" component={redirectWithoutAuth(AddServiceForm)}/>\n            <Route path=\"/stores/:store_id/services/:service_id/edit\" component={redirectWithoutAuth(ServiceEditForm)}/>\n            <Route path=\"/stores/:store_id/services/:service_id\" component={redirectWithoutAuth(ServiceDisplay)}/>\n            <Route path=\"/stores/:store_id/services\" component={redirectWithoutAuth(ServiceDashboard)}/>\n\n            <Route path=\"/stores/addWorker/:store_id\" component={redirectWithoutAuth(AddWorkerForm)}/>\n            <Route path=\"/stores/:store_id/workers/:worker_id/edit\" component={redirectWithoutAuth(WorkerEditForm)}/>\n            <Route path=\"/stores/:store_id/workers/:worker_id\" component={redirectWithoutAuth(WorkerDisplay)}/>\n            <Route path=\"/stores/:store_id/workers\" component={redirectWithoutAuth(WorkerDashboard)}/>\n            <Route path=\"/stores/:store_id\" component={StoreDisplay}/>\n\n            <Route path=\"/appointments/:group_id\" component={redirectWithoutAuth(AppointmentDisplay)}/>\n\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nconst fetchDomain = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_FETCH_DOMAIN_PROD : process.env.REACT_APP_FETCH_DOMAIN_DEV;\n\nexport default function redirectWithAuth(ComponentToProtect, addAlert) {\n  return class extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        loading: true,\n        redirect: false,\n      };\n    }\n    componentDidMount() {\n      fetch(fetchDomain + '/checkToken' , {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'application/json'\n        },\n        credentials: 'include'\n      }).then(res => {\n          if (res.status === 200) {\n            this.setState({ loading: false, redirect: true });\n          } else {\n            this.setState({ loading: false, redirect: false });\n          }\n        })\n    }\n    render() {\n      const { loading, redirect } = this.state;\n      if (loading) {\n        return null;\n      }\n      if (redirect) {\n        return <Redirect to=\"/\"/>;\n      }\n      else {\n        return <ComponentToProtect addAlertPassed={addAlert} {...this.props}/>;\n      }\n    }\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from './reduxFolder/store';\n\nReactDOM.render(\n<Provider store={store}>\n    <App/>\n</Provider>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}